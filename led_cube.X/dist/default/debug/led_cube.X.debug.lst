

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 12 04:14:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Version 2.40
    30                           ; Generated 04/07/2022 GMT
    31                           ; 
    32                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _ADRESL	set	4035
    65   000000                     _ADRESH	set	4036
    66   000000                     _LATBbits	set	3978
    67   000000                     _LATCbits	set	3979
    68   000000                     _ADCON0bits	set	4034
    69   000000                     _TRISCbits	set	3988
    70   000000                     _TRISAbits	set	3986
    71   000000                     _TRISEbits	set	3990
    72   000000                     _LATAbits	set	3977
    73   000000                     _TRISA	set	3986
    74   000000                     _PIR1bits	set	3998
    75   000000                     _PIE1bits	set	3997
    76   000000                     _ADCON2bits	set	4032
    77   000000                     _ADCON1	set	4033
    78   000000                     _OSCCONbits	set	4051
    79   000000                     _INTCONbits	set	4082
    80   000000                     _TRISE	set	3990
    81   000000                     _TRISD	set	3989
    82   000000                     _TRISC	set	3988
    83   000000                     _TRISB	set	3987
    84   000000                     _LATEbits	set	3981
    85   000000                     _LATDbits	set	3980
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   000A76                     __pcinit:
    91                           	callstack 0
    92   000A76                     start_initialization:
    93                           	callstack 0
    94   000A76                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (56 bytes)
    98   000A76  EE00  F001         	lfsr	0,__pbssCOMRAM
    99   000A7A  0E38               	movlw	56
   100   000A7C                     clear_0:
   101   000A7C  6AEE               	clrf	postinc0,c
   102   000A7E  06E8               	decf	wreg,f,c
   103   000A80  E1FD               	bnz	clear_0
   104   000A82                     end_of_initialization:
   105                           	callstack 0
   106   000A82                     __end_of__initialization:
   107                           	callstack 0
   108   000A82  9069               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109   000A84  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110   000A86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   111   000A88  6EF8               	movwf	tblptru,c
   112   000A8A  0100               	movlb	0
   113   000A8C  EFBE  F003         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	bssCOMRAM
   116   000001                     __pbssCOMRAM:
   117                           	callstack 0
   118   000001                     _mode:
   119                           	callstack 0
   120   000001                     	ds	2
   121   000003                     _plane:
   122                           	callstack 0
   123   000003                     	ds	50
   124   000035                     _seed:
   125                           	callstack 0
   126   000035                     	ds	4
   127                           
   128                           	psect	cstackCOMRAM
   129   000039                     __pcstackCOMRAM:
   130                           	callstack 0
   131   000039                     ??_H_ISR:
   132                           
   133                           ; 1 bytes @ 0x0
   134   000039                     	ds	2
   135   00003B                     H_ISR@value:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x2
   139   00003B                     	ds	2
   140   00003D                     H_ISR@mapResult:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x4
   144   00003D                     	ds	1
   145   00003E                     ?___awmod:
   146                           	callstack 0
   147   00003E                     ?_time:
   148                           	callstack 0
   149   00003E                     ___awmod@dividend:
   150                           	callstack 0
   151   00003E                     time@t:
   152                           	callstack 0
   153                           
   154                           ; 2 bytes @ 0x5
   155   00003E                     	ds	2
   156   000040                     ___awmod@divisor:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x7
   160   000040                     	ds	2
   161   000042                     ___awmod@counter:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x9
   165   000042                     	ds	1
   166   000043                     ___awmod@sign:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0xA
   170   000043                     	ds	1
   171   000044                     ?___awdiv:
   172                           	callstack 0
   173   000044                     ___awdiv@dividend:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0xB
   177   000044                     	ds	2
   178   000046                     ___awdiv@divisor:
   179                           	callstack 0
   180   000046                     srand@s:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0xD
   184   000046                     	ds	2
   185   000048                     ??_srand:
   186   000048                     ___awdiv@counter:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0xF
   190   000048                     	ds	1
   191   000049                     ___awdiv@sign:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x10
   195   000049                     	ds	1
   196   00004A                     ___awdiv@quotient:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x11
   200   00004A                     	ds	2
   201   00004C                     ?___wmul:
   202                           	callstack 0
   203   00004C                     set_plane@a:
   204                           	callstack 0
   205   00004C                     ___wmul@multiplier:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x13
   209   00004C                     	ds	2
   210   00004E                     ??_set_plane:
   211   00004E                     ___wmul@multiplicand:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x15
   215   00004E                     	ds	2
   216   000050                     ___wmul@product:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x17
   220   000050                     	ds	2
   221   000052                     ??_clear_cube:
   222   000052                     lighton@x:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x19
   226   000052                     	ds	2
   227   000054                     clear_cube@i:
   228                           	callstack 0
   229   000054                     lighton@prev:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x1B
   233   000054                     	ds	2
   234   000056                     ??_lighton:
   235   000056                     clear_cube@j:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x1D
   239   000056                     	ds	2
   240   000058                     speedup@id:
   241                           	callstack 0
   242   000058                     cubeidle@id:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x1F
   246   000058                     	ds	2
   247   00005A                     ??_speedup:
   248   00005A                     ??_cubeidle:
   249                           
   250                           ; 1 bytes @ 0x21
   251   00005A                     	ds	1
   252   00005B                     speedup@j_719:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x22
   256   00005B                     	ds	2
   257   00005D                     speedup@dcnt:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x24
   261   00005D                     	ds	2
   262   00005F                     speedup@del:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x26
   266   00005F                     	ds	2
   267   000061                     speedup@i:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x28
   271   000061                     	ds	1
   272   000062                     cubeidle@i:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x29
   276   000062                     	ds	1
   277   000063                     speedup@j:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x2A
   281   000063                     	ds	2
   282   000065                     speedup@j_718:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x2C
   286   000065                     	ds	2
   287   000067                     ??_main:
   288                           
   289                           ; 1 bytes @ 0x2E
   290   000067                     	ds	2
   291                           
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 252 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0
   313 ;;      Temps:          2       0       0       0       0       0       0
   314 ;;      Totals:         2       0       0       0       0       0       0
   315 ;;Total ram usage:        2 bytes
   316 ;; Hardware stack levels required when called: 4
   317 ;; This function calls:
   318 ;;		_cubeidle
   319 ;;		_init
   320 ;;		_set_plane
   321 ;;		_speedup
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text0
   328   00077C                     __ptext0:
   329                           	callstack 0
   330   00077C                     _main:
   331                           	callstack 27
   332   00077C                     
   333                           ;main.c: 253:                 set_plane(2);
   334   00077C  ECAE  F004         	call	_init	;wreg free
   335   000780  EFF0  F003         	goto	l1784
   336   000784                     l1770:
   337                           
   338                           ;main.c: 263:                 break;
   339   000784  0E00               	movlw	0
   340   000786  6E59               	movwf	(cubeidle@id+1)^0,c
   341   000788  0E00               	movlw	0
   342   00078A  6E58               	movwf	cubeidle@id^0,c
   343   00078C  EC8B  F002         	call	_cubeidle	;wreg free
   344                           
   345                           ;main.c: 264:         }
   346   000790  EFF0  F003         	goto	l1784
   347   000794                     l1772:
   348                           
   349                           ;main.c: 266:     };
   350   000794  0E00               	movlw	0
   351   000796  6E59               	movwf	(speedup@id+1)^0,c
   352   000798  0E01               	movlw	1
   353   00079A  6E58               	movwf	speedup@id^0,c
   354   00079C  EC09  F000         	call	_speedup	;wreg free
   355                           
   356                           ;main.c: 267:     return;
   357   0007A0  EFF0  F003         	goto	l1784
   358   0007A4                     l1774:
   359                           
   360                           ;main.c: 269: 
   361   0007A4  0E00               	movlw	0
   362   0007A6  6E4D               	movwf	(set_plane@a+1)^0,c
   363   0007A8  0E02               	movlw	2
   364   0007AA  6E4C               	movwf	set_plane@a^0,c
   365   0007AC  EC69  F004         	call	_set_plane	;wreg free
   366                           
   367                           ;main.c: 270: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
   368   0007B0  EFF0  F003         	goto	l1784
   369   0007B4                     l1776:
   370                           
   371                           ;main.c: 272:     int value = ((ADRESH<<8) + ADRESL);
   372   0007B4  0E00               	movlw	0
   373   0007B6  6E4D               	movwf	(set_plane@a+1)^0,c
   374   0007B8  0E03               	movlw	3
   375   0007BA  6E4C               	movwf	set_plane@a^0,c
   376   0007BC  EC69  F004         	call	_set_plane	;wreg free
   377                           
   378                           ;main.c: 273: 
   379   0007C0  EFF0  F003         	goto	l1784
   380   0007C4                     l1778:
   381                           
   382                           ;main.c: 275:     unsigned char mapResult = 0;
   383   0007C4  0E00               	movlw	0
   384   0007C6  6E4D               	movwf	(set_plane@a+1)^0,c
   385   0007C8  0E04               	movlw	4
   386   0007CA  6E4C               	movwf	set_plane@a^0,c
   387   0007CC  EC69  F004         	call	_set_plane	;wreg free
   388                           
   389                           ;main.c: 276: 
   390   0007D0  EFF0  F003         	goto	l1784
   391   0007D4                     l1780:
   392                           
   393                           ;main.c: 278:         value -= 205;
   394   0007D4  0E00               	movlw	0
   395   0007D6  6E4D               	movwf	(set_plane@a+1)^0,c
   396   0007D8  0E00               	movlw	0
   397   0007DA  6E4C               	movwf	set_plane@a^0,c
   398   0007DC  EC69  F004         	call	_set_plane	;wreg free
   399   0007E0                     l1784:
   400   0007E0  C001  F067         	movff	_mode,??_main
   401   0007E4  C002  F068         	movff	_mode+1,??_main+1
   402                           
   403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   404                           ; Switch size 1, requested type "simple"
   405                           ; Number of cases is 1, Range of values is 0 to 0
   406                           ; switch strategies available:
   407                           ; Name         Instructions Cycles
   408                           ; simple_byte            4     3 (average)
   409                           ;	Chosen strategy is simple_byte
   410   0007E8  5068               	movf	(??_main+1)^0,w,c
   411   0007EA  0A00               	xorlw	0	; case 0
   412   0007EC  B4D8               	btfsc	status,2,c
   413   0007EE  EFFB  F003         	goto	l1798
   414   0007F2  EFEA  F003         	goto	l1780
   415   0007F6                     l1798:
   416                           
   417                           ; Switch size 1, requested type "simple"
   418                           ; Number of cases is 5, Range of values is 0 to 4
   419                           ; switch strategies available:
   420                           ; Name         Instructions Cycles
   421                           ; simple_byte           16     9 (average)
   422                           ;	Chosen strategy is simple_byte
   423   0007F6  5067               	movf	??_main^0,w,c
   424   0007F8  0A00               	xorlw	0	; case 0
   425   0007FA  B4D8               	btfsc	status,2,c
   426   0007FC  EFC2  F003         	goto	l1770
   427   000800  0A01               	xorlw	1	; case 1
   428   000802  B4D8               	btfsc	status,2,c
   429   000804  EFCA  F003         	goto	l1772
   430   000808  0A03               	xorlw	3	; case 2
   431   00080A  B4D8               	btfsc	status,2,c
   432   00080C  EFD2  F003         	goto	l1774
   433   000810  0A01               	xorlw	1	; case 3
   434   000812  B4D8               	btfsc	status,2,c
   435   000814  EFDA  F003         	goto	l1776
   436   000818  0A07               	xorlw	7	; case 4
   437   00081A  B4D8               	btfsc	status,2,c
   438   00081C  EFE2  F003         	goto	l1778
   439   000820  EFEA  F003         	goto	l1780
   440   000824  EF07  F000         	goto	start
   441   000828                     __end_of_main:
   442                           	callstack 0
   443                           
   444 ;; *************** function _speedup *****************
   445 ;; Defined at:
   446 ;;		line 190 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  id              2   31[COMRAM] int 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  j               2   44[COMRAM] int 
   451 ;;  j               2   42[COMRAM] int 
   452 ;;  j               2   34[COMRAM] int 
   453 ;;  i               2   40[COMRAM] int 
   454 ;;  del             2   38[COMRAM] int 
   455 ;;  dcnt            2   36[COMRAM] int 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   465 ;;      Params:         2       0       0       0       0       0       0
   466 ;;      Locals:        12       0       0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0       0       0
   468 ;;      Totals:        15       0       0       0       0       0       0
   469 ;;Total ram usage:       15 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 3
   472 ;; This function calls:
   473 ;;		___awmod
   474 ;;		___wmul
   475 ;;		_clear_cube
   476 ;;		_draw_plane
   477 ;;		_set_plane
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text1
   484   000012                     __ptext1:
   485                           	callstack 0
   486   000012                     _speedup:
   487                           	callstack 27
   488   000012                     
   489                           ;main.c: 191:                 plane[j][0] = 0;
   490   000012  EC14  F004         	call	_clear_cube	;wreg free
   491   000016                     
   492                           ;main.c: 192:                 plane[j][4] = 0;
   493   000016  0E00               	movlw	0
   494   000018  6E62               	movwf	(speedup@i+1)^0,c
   495   00001A  0E00               	movlw	0
   496   00001C  6E61               	movwf	speedup@i^0,c
   497   00001E  0E00               	movlw	0
   498   000020  6E5E               	movwf	(speedup@dcnt+1)^0,c
   499   000022  0E00               	movlw	0
   500   000024  6E5D               	movwf	speedup@dcnt^0,c
   501   000026  0E00               	movlw	0
   502   000028  6E60               	movwf	(speedup@del+1)^0,c
   503   00002A  0E32               	movlw	50
   504   00002C  6E5F               	movwf	speedup@del^0,c
   505   00002E                     
   506                           ;main.c: 193:                 plane[0][j] = 0;
   507   00002E  0E00               	movlw	0
   508   000030  6E04               	movwf	(_plane+1)^0,c
   509   000032  0E01               	movlw	1
   510   000034  6E03               	movwf	_plane^0,c
   511   000036                     
   512                           ;main.c: 194:                 plane[4][j] = 0;
   513   000036  0E00               	movlw	0
   514   000038  6E0C               	movwf	(_plane+9)^0,c
   515   00003A  0E01               	movlw	1
   516   00003C  6E0B               	movwf	(_plane+8)^0,c
   517   00003E                     
   518                           ;main.c: 195:             }
   519   00003E  0E00               	movlw	0
   520   000040  6E2C               	movwf	(_plane+41)^0,c
   521   000042  0E01               	movlw	1
   522   000044  6E2B               	movwf	(_plane+40)^0,c
   523   000046                     
   524                           ;main.c: 196:         }
   525   000046  0E00               	movlw	0
   526   000048  6E34               	movwf	(_plane+49)^0,c
   527   00004A  0E01               	movlw	1
   528   00004C  6E33               	movwf	(_plane+48)^0,c
   529                           
   530                           ;main.c: 197: 
   531   00004E  EF6D  F001         	goto	l1644
   532   000052                     l1578:
   533                           
   534                           ;main.c: 198:         set_plane(5);
   535   000052  5061               	movf	speedup@i^0,w,c
   536   000054  1062               	iorwf	(speedup@i+1)^0,w,c
   537   000056  B4D8               	btfsc	status,2,c
   538   000058  EF30  F000         	goto	u1091
   539   00005C  EF32  F000         	goto	u1090
   540   000060                     u1091:
   541   000060  EF3C  F000         	goto	l1582
   542   000064                     u1090:
   543   000064  0E04               	movlw	4
   544   000066  1861               	xorwf	speedup@i^0,w,c
   545   000068  1062               	iorwf	(speedup@i+1)^0,w,c
   546   00006A  A4D8               	btfss	status,2,c
   547   00006C  EF3A  F000         	goto	u1101
   548   000070  EF3C  F000         	goto	u1100
   549   000074                     u1101:
   550   000074  EF94  F000         	goto	l1598
   551   000078                     u1100:
   552   000078                     l1582:
   553                           
   554                           ;main.c: 199:         draw_plane();
   555   000078  0E00               	movlw	0
   556   00007A  6E64               	movwf	(speedup@j+1)^0,c
   557   00007C  0E01               	movlw	1
   558   00007E  6E63               	movwf	speedup@j^0,c
   559   000080                     l1588:
   560                           
   561                           ;main.c: 200:         set_plane(i);
   562   000080  C063  F04C         	movff	speedup@j,___wmul@multiplier
   563   000084  C064  F04D         	movff	speedup@j+1,___wmul@multiplier+1
   564   000088  0E00               	movlw	0
   565   00008A  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
   566   00008C  0E0A               	movlw	10
   567   00008E  6E4E               	movwf	___wmul@multiplicand^0,c
   568   000090  EC28  F005         	call	___wmul	;wreg free
   569   000094  0E03               	movlw	low _plane
   570   000096  244C               	addwf	?___wmul^0,w,c
   571   000098  6ED9               	movwf	fsr2l,c
   572   00009A  0E00               	movlw	high _plane
   573   00009C  204D               	addwfc	(?___wmul+1)^0,w,c
   574   00009E  6EDA               	movwf	fsr2h,c
   575   0000A0  0E01               	movlw	1
   576   0000A2  6EDE               	movwf	postinc2,c
   577   0000A4  0E00               	movlw	0
   578   0000A6  6EDD               	movwf	postdec2,c
   579                           
   580                           ;main.c: 201:         for(int j=0;j<del && mode == id;j++)_delay((unsigned long)((1)*(40
      +                          00000/4000.0)));
   581   0000A8  C063  F04C         	movff	speedup@j,___wmul@multiplier
   582   0000AC  C064  F04D         	movff	speedup@j+1,___wmul@multiplier+1
   583   0000B0  0E00               	movlw	0
   584   0000B2  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
   585   0000B4  0E0A               	movlw	10
   586   0000B6  6E4E               	movwf	___wmul@multiplicand^0,c
   587   0000B8  EC28  F005         	call	___wmul	;wreg free
   588   0000BC  0E0B               	movlw	low (_plane+8)
   589   0000BE  244C               	addwf	?___wmul^0,w,c
   590   0000C0  6ED9               	movwf	fsr2l,c
   591   0000C2  0E00               	movlw	high (_plane+8)
   592   0000C4  204D               	addwfc	(?___wmul+1)^0,w,c
   593   0000C6  6EDA               	movwf	fsr2h,c
   594   0000C8  0E01               	movlw	1
   595   0000CA  6EDE               	movwf	postinc2,c
   596   0000CC  0E00               	movlw	0
   597   0000CE  6EDD               	movwf	postdec2,c
   598   0000D0                     
   599                           ;main.c: 202:         dcnt++;
   600   0000D0  90D8               	bcf	status,0,c
   601   0000D2  3463               	rlcf	speedup@j^0,w,c
   602   0000D4  6ED9               	movwf	fsr2l,c
   603   0000D6  3464               	rlcf	(speedup@j+1)^0,w,c
   604   0000D8  6EDA               	movwf	fsr2h,c
   605   0000DA  0E03               	movlw	low _plane
   606   0000DC  26D9               	addwf	fsr2l,f,c
   607   0000DE  0E00               	movlw	high _plane
   608   0000E0  22DA               	addwfc	fsr2h,f,c
   609   0000E2  0E01               	movlw	1
   610   0000E4  6EDE               	movwf	postinc2,c
   611   0000E6  0E00               	movlw	0
   612   0000E8  6EDD               	movwf	postdec2,c
   613   0000EA                     
   614                           ;main.c: 203:         if(del>10)del-=2;
   615   0000EA  90D8               	bcf	status,0,c
   616   0000EC  3463               	rlcf	speedup@j^0,w,c
   617   0000EE  6ED9               	movwf	fsr2l,c
   618   0000F0  3464               	rlcf	(speedup@j+1)^0,w,c
   619   0000F2  6EDA               	movwf	fsr2h,c
   620   0000F4  0E2B               	movlw	low (_plane+40)
   621   0000F6  26D9               	addwf	fsr2l,f,c
   622   0000F8  0E00               	movlw	high (_plane+40)
   623   0000FA  22DA               	addwfc	fsr2h,f,c
   624   0000FC  0E01               	movlw	1
   625   0000FE  6EDE               	movwf	postinc2,c
   626   000100  0E00               	movlw	0
   627   000102  6EDD               	movwf	postdec2,c
   628   000104                     
   629                           ;main.c: 204:         else if(del>0 && dcnt == 10)del-=1;
   630   000104  4A63               	infsnz	speedup@j^0,f,c
   631   000106  2A64               	incf	(speedup@j+1)^0,f,c
   632   000108  BE64               	btfsc	(speedup@j+1)^0,7,c
   633   00010A  EF90  F000         	goto	u1111
   634   00010E  5064               	movf	(speedup@j+1)^0,w,c
   635   000110  E109               	bnz	u1110
   636   000112  0E04               	movlw	4
   637   000114  5C63               	subwf	speedup@j^0,w,c
   638   000116  A0D8               	btfss	status,0,c
   639   000118  EF90  F000         	goto	u1111
   640   00011C  EF92  F000         	goto	u1110
   641   000120                     u1111:
   642   000120  EF40  F000         	goto	l1588
   643   000124                     u1110:
   644   000124  EFEA  F000         	goto	l1614
   645   000128                     l1598:
   646                           
   647                           ;main.c: 206:         i++;
   648   000128  0E00               	movlw	0
   649   00012A  6E66               	movwf	(speedup@j_718+1)^0,c
   650   00012C  0E01               	movlw	1
   651   00012E  6E65               	movwf	speedup@j_718^0,c
   652   000130                     l1604:
   653                           
   654                           ;main.c: 207:         i%=5;
   655   000130  C065  F04C         	movff	speedup@j_718,___wmul@multiplier
   656   000134  C066  F04D         	movff	speedup@j_718+1,___wmul@multiplier+1
   657   000138  0E00               	movlw	0
   658   00013A  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
   659   00013C  0E0A               	movlw	10
   660   00013E  6E4E               	movwf	___wmul@multiplicand^0,c
   661   000140  EC28  F005         	call	___wmul	;wreg free
   662   000144  0E03               	movlw	low _plane
   663   000146  244C               	addwf	?___wmul^0,w,c
   664   000148  6ED9               	movwf	fsr2l,c
   665   00014A  0E00               	movlw	high _plane
   666   00014C  204D               	addwfc	(?___wmul+1)^0,w,c
   667   00014E  6EDA               	movwf	fsr2h,c
   668   000150  0E00               	movlw	0
   669   000152  6EDE               	movwf	postinc2,c
   670   000154  0E00               	movlw	0
   671   000156  6EDD               	movwf	postdec2,c
   672                           
   673                           ;main.c: 208:     }
   674   000158  C065  F04C         	movff	speedup@j_718,___wmul@multiplier
   675   00015C  C066  F04D         	movff	speedup@j_718+1,___wmul@multiplier+1
   676   000160  0E00               	movlw	0
   677   000162  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
   678   000164  0E0A               	movlw	10
   679   000166  6E4E               	movwf	___wmul@multiplicand^0,c
   680   000168  EC28  F005         	call	___wmul	;wreg free
   681   00016C  0E0B               	movlw	low (_plane+8)
   682   00016E  244C               	addwf	?___wmul^0,w,c
   683   000170  6ED9               	movwf	fsr2l,c
   684   000172  0E00               	movlw	high (_plane+8)
   685   000174  204D               	addwfc	(?___wmul+1)^0,w,c
   686   000176  6EDA               	movwf	fsr2h,c
   687   000178  0E00               	movlw	0
   688   00017A  6EDE               	movwf	postinc2,c
   689   00017C  0E00               	movlw	0
   690   00017E  6EDD               	movwf	postdec2,c
   691   000180                     
   692                           ;main.c: 209: }
   693   000180  90D8               	bcf	status,0,c
   694   000182  3465               	rlcf	speedup@j_718^0,w,c
   695   000184  6ED9               	movwf	fsr2l,c
   696   000186  3466               	rlcf	(speedup@j_718+1)^0,w,c
   697   000188  6EDA               	movwf	fsr2h,c
   698   00018A  0E03               	movlw	low _plane
   699   00018C  26D9               	addwf	fsr2l,f,c
   700   00018E  0E00               	movlw	high _plane
   701   000190  22DA               	addwfc	fsr2h,f,c
   702   000192  0E00               	movlw	0
   703   000194  6EDE               	movwf	postinc2,c
   704   000196  0E00               	movlw	0
   705   000198  6EDD               	movwf	postdec2,c
   706   00019A                     
   707                           ;main.c: 210: 
   708   00019A  90D8               	bcf	status,0,c
   709   00019C  3465               	rlcf	speedup@j_718^0,w,c
   710   00019E  6ED9               	movwf	fsr2l,c
   711   0001A0  3466               	rlcf	(speedup@j_718+1)^0,w,c
   712   0001A2  6EDA               	movwf	fsr2h,c
   713   0001A4  0E2B               	movlw	low (_plane+40)
   714   0001A6  26D9               	addwf	fsr2l,f,c
   715   0001A8  0E00               	movlw	high (_plane+40)
   716   0001AA  22DA               	addwfc	fsr2h,f,c
   717   0001AC  0E00               	movlw	0
   718   0001AE  6EDE               	movwf	postinc2,c
   719   0001B0  0E00               	movlw	0
   720   0001B2  6EDD               	movwf	postdec2,c
   721   0001B4                     
   722                           ;main.c: 211: void cubeidle(int id){
   723   0001B4  4A65               	infsnz	speedup@j_718^0,f,c
   724   0001B6  2A66               	incf	(speedup@j_718+1)^0,f,c
   725   0001B8  BE66               	btfsc	(speedup@j_718+1)^0,7,c
   726   0001BA  EFE8  F000         	goto	u1121
   727   0001BE  5066               	movf	(speedup@j_718+1)^0,w,c
   728   0001C0  E109               	bnz	u1120
   729   0001C2  0E04               	movlw	4
   730   0001C4  5C65               	subwf	speedup@j_718^0,w,c
   731   0001C6  A0D8               	btfss	status,0,c
   732   0001C8  EFE8  F000         	goto	u1121
   733   0001CC  EFEA  F000         	goto	u1120
   734   0001D0                     u1121:
   735   0001D0  EF98  F000         	goto	l1604
   736   0001D4                     u1120:
   737   0001D4                     l1614:
   738                           
   739                           ;main.c: 214:     lighton(0,-1);
   740   0001D4  0E00               	movlw	0
   741   0001D6  6E4D               	movwf	(set_plane@a+1)^0,c
   742   0001D8  0E05               	movlw	5
   743   0001DA  6E4C               	movwf	set_plane@a^0,c
   744   0001DC  EC69  F004         	call	_set_plane	;wreg free
   745   0001E0                     
   746                           ;main.c: 215:     while(mode == id){
   747   0001E0  EC0D  F002         	call	_draw_plane	;wreg free
   748   0001E4                     
   749                           ;main.c: 216:         for(int i=1;i<125 && mode == 0;i++){
   750   0001E4  C061  F04C         	movff	speedup@i,set_plane@a
   751   0001E8  C062  F04D         	movff	speedup@i+1,set_plane@a+1
   752   0001EC  EC69  F004         	call	_set_plane	;wreg free
   753   0001F0                     
   754                           ;main.c: 217:             lighton(i,i-1);
   755   0001F0  0E00               	movlw	0
   756   0001F2  6E5C               	movwf	(speedup@j_719+1)^0,c
   757   0001F4  0E00               	movlw	0
   758   0001F6  6E5B               	movwf	speedup@j_719^0,c
   759   0001F8  EF04  F001         	goto	l168
   760   0001FC                     l1622:
   761   0001FC  0EC8               	movlw	200
   762   0001FE                     u1357:
   763   0001FE  D000               	nop2	
   764   000200  2EE8               	decfsz	wreg,f,c
   765   000202  D7FD               	bra	u1357
   766   000204  4A5B               	infsnz	speedup@j_719^0,f,c
   767   000206  2A5C               	incf	(speedup@j_719+1)^0,f,c
   768   000208                     l168:
   769   000208  505F               	movf	speedup@del^0,w,c
   770   00020A  5C5B               	subwf	speedup@j_719^0,w,c
   771   00020C  505C               	movf	(speedup@j_719+1)^0,w,c
   772   00020E  0A80               	xorlw	128
   773   000210  6E5A               	movwf	??_speedup^0,c
   774   000212  5060               	movf	(speedup@del+1)^0,w,c
   775   000214  0A80               	xorlw	128
   776   000216  585A               	subwfb	??_speedup^0,w,c
   777   000218  B0D8               	btfsc	status,0,c
   778   00021A  EF11  F001         	goto	u1131
   779   00021E  EF13  F001         	goto	u1130
   780   000222                     u1131:
   781   000222  EF1F  F001         	goto	l1628
   782   000226                     u1130:
   783   000226  5058               	movf	speedup@id^0,w,c
   784   000228  1801               	xorwf	_mode^0,w,c
   785   00022A  E109               	bnz	u1140
   786   00022C  5059               	movf	(speedup@id+1)^0,w,c
   787   00022E  1802               	xorwf	(_mode+1)^0,w,c
   788   000230  B4D8               	btfsc	status,2,c
   789   000232  EF1D  F001         	goto	u1141
   790   000236  EF1F  F001         	goto	u1140
   791   00023A                     u1141:
   792   00023A  EFFE  F000         	goto	l1622
   793   00023E                     u1140:
   794   00023E                     l1628:
   795                           
   796                           ;main.c: 218:             _delay((unsigned long)((10)*(4000000/4000.0)));
   797   00023E  4A5D               	infsnz	speedup@dcnt^0,f,c
   798   000240  2A5E               	incf	(speedup@dcnt+1)^0,f,c
   799   000242                     
   800                           ;main.c: 219:         }
   801   000242  BE60               	btfsc	(speedup@del+1)^0,7,c
   802   000244  EF2D  F001         	goto	u1151
   803   000248  5060               	movf	(speedup@del+1)^0,w,c
   804   00024A  E109               	bnz	u1150
   805   00024C  0E0B               	movlw	11
   806   00024E  5C5F               	subwf	speedup@del^0,w,c
   807   000250  A0D8               	btfss	status,0,c
   808   000252  EF2D  F001         	goto	u1151
   809   000256  EF2F  F001         	goto	u1150
   810   00025A                     u1151:
   811   00025A  EF35  F001         	goto	l1634
   812   00025E                     u1150:
   813   00025E  0EFE               	movlw	254
   814   000260  265F               	addwf	speedup@del^0,f,c
   815   000262  0EFF               	movlw	255
   816   000264  2260               	addwfc	(speedup@del+1)^0,f,c
   817   000266  EF4F  F001         	goto	l1640
   818   00026A                     l1634:
   819   00026A  BE60               	btfsc	(speedup@del+1)^0,7,c
   820   00026C  EF40  F001         	goto	u1161
   821   000270  5060               	movf	(speedup@del+1)^0,w,c
   822   000272  E108               	bnz	u1160
   823   000274  045F               	decf	speedup@del^0,w,c
   824   000276  A0D8               	btfss	status,0,c
   825   000278  EF40  F001         	goto	u1161
   826   00027C  EF42  F001         	goto	u1160
   827   000280                     u1161:
   828   000280  EF4F  F001         	goto	l1640
   829   000284                     u1160:
   830   000284  0E0A               	movlw	10
   831   000286  185D               	xorwf	speedup@dcnt^0,w,c
   832   000288  105E               	iorwf	(speedup@dcnt+1)^0,w,c
   833   00028A  A4D8               	btfss	status,2,c
   834   00028C  EF4A  F001         	goto	u1171
   835   000290  EF4C  F001         	goto	u1170
   836   000294                     u1171:
   837   000294  EF4F  F001         	goto	l1640
   838   000298                     u1170:
   839   000298  065F               	decf	speedup@del^0,f,c
   840   00029A  A0D8               	btfss	status,0,c
   841   00029C  0660               	decf	(speedup@del+1)^0,f,c
   842   00029E                     l1640:
   843                           
   844                           ;main.c: 221:         _delay((unsigned long)((2)*(4000000/4000.0)));
   845   00029E  C05D  F03E         	movff	speedup@dcnt,___awmod@dividend
   846   0002A2  C05E  F03F         	movff	speedup@dcnt+1,___awmod@dividend+1
   847   0002A6  0E00               	movlw	0
   848   0002A8  6E41               	movwf	(___awmod@divisor+1)^0,c
   849   0002AA  0E0A               	movlw	10
   850   0002AC  6E40               	movwf	___awmod@divisor^0,c
   851   0002AE  EC66  F003         	call	___awmod	;wreg free
   852   0002B2  C03E  F05D         	movff	?___awmod,speedup@dcnt
   853   0002B6  C03F  F05E         	movff	?___awmod+1,speedup@dcnt+1
   854   0002BA                     
   855                           ;main.c: 222:     }
   856   0002BA  4A61               	infsnz	speedup@i^0,f,c
   857   0002BC  2A62               	incf	(speedup@i+1)^0,f,c
   858                           
   859                           ;main.c: 223: 
   860   0002BE  C061  F03E         	movff	speedup@i,___awmod@dividend
   861   0002C2  C062  F03F         	movff	speedup@i+1,___awmod@dividend+1
   862   0002C6  0E00               	movlw	0
   863   0002C8  6E41               	movwf	(___awmod@divisor+1)^0,c
   864   0002CA  0E05               	movlw	5
   865   0002CC  6E40               	movwf	___awmod@divisor^0,c
   866   0002CE  EC66  F003         	call	___awmod	;wreg free
   867   0002D2  C03E  F061         	movff	?___awmod,speedup@i
   868   0002D6  C03F  F062         	movff	?___awmod+1,speedup@i+1
   869   0002DA                     l1644:
   870                           
   871                           ;main.c: 197: 
   872   0002DA  5058               	movf	speedup@id^0,w,c
   873   0002DC  1801               	xorwf	_mode^0,w,c
   874   0002DE  E109               	bnz	u1180
   875   0002E0  5059               	movf	(speedup@id+1)^0,w,c
   876   0002E2  1802               	xorwf	(_mode+1)^0,w,c
   877   0002E4  B4D8               	btfsc	status,2,c
   878   0002E6  EF77  F001         	goto	u1181
   879   0002EA  EF79  F001         	goto	u1180
   880   0002EE                     u1181:
   881   0002EE  EF29  F000         	goto	l1578
   882   0002F2                     u1180:
   883   0002F2  0012               	return		;funcret
   884   0002F4                     __end_of_speedup:
   885                           	callstack 0
   886                           
   887 ;; *************** function _init *****************
   888 ;; Defined at:
   889 ;;		line 20 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   903 ;;      Params:         0       0       0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text2
   918   00095C                     __ptext2:
   919                           	callstack 0
   920   00095C                     _init:
   921                           	callstack 29
   922   00095C                     
   923                           ;main.c: 21:     ADCON2bits.ACQT = 0b010;
   924   00095C  0E00               	movlw	0
   925   00095E  6E92               	movwf	146,c	;volatile
   926                           
   927                           ;main.c: 22:     ADCON0bits.ADON = 1;
   928   000960  0E00               	movlw	0
   929   000962  6E93               	movwf	147,c	;volatile
   930                           
   931                           ;main.c: 23:     ADCON2bits.ADFM = 1;
   932   000964  0E00               	movlw	0
   933   000966  6E94               	movwf	148,c	;volatile
   934                           
   935                           ;main.c: 24: 
   936   000968  0E00               	movlw	0
   937   00096A  6E95               	movwf	149,c	;volatile
   938                           
   939                           ;main.c: 25:     PIE1bits.ADIE = 1;
   940   00096C  0E00               	movlw	0
   941   00096E  6E96               	movwf	150,c	;volatile
   942   000970                     
   943                           ;main.c: 26: 
   944   000970  8296               	bsf	150,1,c	;volatile
   945   000972                     
   946                           ;main.c: 27:     PIR1bits.ADIF = 0;
   947   000972  8496               	bsf	150,2,c	;volatile
   948   000974                     
   949                           ;main.c: 28: 
   950   000974  8E92               	bsf	146,7,c	;volatile
   951   000976                     
   952                           ;main.c: 29:     INTCONbits.PEIE = 1;
   953   000976  8C92               	bsf	146,6,c	;volatile
   954   000978                     
   955                           ;main.c: 30: 
   956   000978  8094               	bsf	148,0,c	;volatile
   957                           
   958                           ;main.c: 32:     ADCON0bits.GO = 1;
   959   00097A  50D3               	movf	211,w,c	;volatile
   960   00097C  0B8F               	andlw	-113
   961   00097E  0960               	iorlw	96
   962   000980  6ED3               	movwf	211,c	;volatile
   963   000982                     
   964                           ;main.c: 33: }
   965   000982  8A92               	bsf	146,5,c	;volatile
   966                           
   967                           ;main.c: 34: 
   968   000984  0E09               	movlw	9
   969   000986  6EC1               	movwf	193,c	;volatile
   970                           
   971                           ;main.c: 35: void draw_plane(){
   972   000988  50C2               	movf	194,w,c	;volatile
   973   00098A  0BC3               	andlw	-61
   974   00098C  0914               	iorlw	20
   975   00098E  6EC2               	movwf	194,c	;volatile
   976                           
   977                           ;main.c: 36:     LATAbits.LA0 = plane[0][0];
   978   000990  50C0               	movf	192,w,c	;volatile
   979   000992  0BF8               	andlw	-8
   980   000994  0904               	iorlw	4
   981   000996  6EC0               	movwf	192,c	;volatile
   982                           
   983                           ;main.c: 37:     LATAbits.LA1 = plane[0][1];
   984   000998  50C0               	movf	192,w,c	;volatile
   985   00099A  0BC7               	andlw	-57
   986   00099C  0910               	iorlw	16
   987   00099E  6EC0               	movwf	192,c	;volatile
   988   0009A0                     
   989                           ;main.c: 38:     LATAbits.LA2 = plane[0][2];
   990   0009A0  80C2               	bsf	194,0,c	;volatile
   991   0009A2                     
   992                           ;main.c: 39:     LATAbits.LA3 = plane[0][3];
   993   0009A2  8EC0               	bsf	192,7,c	;volatile
   994   0009A4                     
   995                           ;main.c: 41: 
   996   0009A4  8C9D               	bsf	157,6,c	;volatile
   997   0009A6                     
   998                           ;main.c: 43:     LATCbits.LC2 = plane[1][1];
   999   0009A6  9C9E               	bcf	158,6,c	;volatile
  1000   0009A8                     
  1001                           ;main.c: 45:     LATDbits.LD0 = plane[1][3];
  1002   0009A8  8CF2               	bsf	242,6,c	;volatile
  1003   0009AA                     
  1004                           ;main.c: 47: 
  1005   0009AA  8EF2               	bsf	242,7,c	;volatile
  1006   0009AC                     
  1007                           ;main.c: 48:     LATBbits.LB0 = plane[2][0];
  1008   0009AC  82C2               	bsf	194,1,c	;volatile
  1009   0009AE  0012               	return		;funcret
  1010   0009B0                     __end_of_init:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _cubeidle *****************
  1014 ;; Defined at:
  1015 ;;		line 227 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  id              2   31[COMRAM] int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  i               2   41[COMRAM] int 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1029 ;;      Params:         2       0       0       0       0       0       0
  1030 ;;      Locals:         2       0       0       0       0       0       0
  1031 ;;      Temps:          8       0       0       0       0       0       0
  1032 ;;      Totals:        12       0       0       0       0       0       0
  1033 ;;Total ram usage:       12 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 3
  1036 ;; This function calls:
  1037 ;;		_clear_cube
  1038 ;;		_lighton
  1039 ;;		_srand
  1040 ;;		_time
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text3
  1047   000516                     __ptext3:
  1048                           	callstack 0
  1049   000516                     _cubeidle:
  1050                           	callstack 27
  1051   000516                     
  1052                           ;main.c: 228: 
  1053   000516  0E00               	movlw	0
  1054   000518  6E3E               	movwf	time@t^0,c
  1055   00051A  0E00               	movlw	0
  1056   00051C  6E3F               	movwf	(time@t+1)^0,c
  1057   00051E  EC02  F005         	call	_time	;wreg free
  1058   000522  C03E  F05A         	movff	?_time,??_cubeidle
  1059   000526  C03F  F05B         	movff	?_time+1,??_cubeidle+1
  1060   00052A  C040  F05C         	movff	?_time+2,??_cubeidle+2
  1061   00052E  C041  F05D         	movff	?_time+3,??_cubeidle+3
  1062   000532  C042  F05E         	movff	?_time+4,??_cubeidle+4
  1063   000536  C043  F05F         	movff	?_time+5,??_cubeidle+5
  1064   00053A  C044  F060         	movff	?_time+6,??_cubeidle+6
  1065   00053E  C045  F061         	movff	?_time+7,??_cubeidle+7
  1066   000542  C05A  F046         	movff	??_cubeidle,srand@s
  1067   000546  C05B  F047         	movff	??_cubeidle+1,srand@s+1
  1068   00054A  EC48  F005         	call	_srand	;wreg free
  1069   00054E                     
  1070                           ;main.c: 229: }
  1071   00054E  EC14  F004         	call	_clear_cube	;wreg free
  1072   000552                     
  1073                           ;main.c: 230: 
  1074   000552  0E00               	movlw	0
  1075   000554  6E53               	movwf	(lighton@x+1)^0,c
  1076   000556  0E00               	movlw	0
  1077   000558  6E52               	movwf	lighton@x^0,c
  1078   00055A  0EFF               	movlw	255
  1079   00055C  6E55               	movwf	(lighton@prev+1)^0,c
  1080   00055E  6854               	setf	lighton@prev^0,c
  1081   000560  EC7A  F001         	call	_lighton	;wreg free
  1082                           
  1083                           ;main.c: 231: void pulsing(int id){
  1084   000564  EFF7  F002         	goto	l1668
  1085   000568                     l1652:
  1086                           
  1087                           ;main.c: 232:     clear_cube();
  1088   000568  0E00               	movlw	0
  1089   00056A  6E63               	movwf	(cubeidle@i+1)^0,c
  1090   00056C  0E01               	movlw	1
  1091   00056E  6E62               	movwf	cubeidle@i^0,c
  1092   000570  EFCF  F002         	goto	l1660
  1093   000574                     l1654:
  1094                           
  1095                           ;main.c: 233:     while(mode == id);
  1096   000574  C062  F052         	movff	cubeidle@i,lighton@x
  1097   000578  C063  F053         	movff	cubeidle@i+1,lighton@x+1
  1098   00057C  0EFF               	movlw	255
  1099   00057E  2462               	addwf	cubeidle@i^0,w,c
  1100   000580  6E54               	movwf	lighton@prev^0,c
  1101   000582  0EFF               	movlw	255
  1102   000584  2063               	addwfc	(cubeidle@i+1)^0,w,c
  1103   000586  6E55               	movwf	(lighton@prev+1)^0,c
  1104   000588  EC7A  F001         	call	_lighton	;wreg free
  1105   00058C                     
  1106                           ;main.c: 234: }
  1107   00058C  0E0D               	movlw	13
  1108   00058E  6E5A               	movwf	??_cubeidle^0,c
  1109   000590  0EFC               	movlw	252
  1110   000592                     u1367:
  1111   000592  2EE8               	decfsz	wreg,f,c
  1112   000594  D7FE               	bra	u1367
  1113   000596  2E5A               	decfsz	??_cubeidle^0,f,c
  1114   000598  D7FC               	bra	u1367
  1115   00059A                     
  1116                           ;main.c: 235: 
  1117   00059A  4A62               	infsnz	cubeidle@i^0,f,c
  1118   00059C  2A63               	incf	(cubeidle@i+1)^0,f,c
  1119   00059E                     l1660:
  1120   00059E  BE63               	btfsc	(cubeidle@i+1)^0,7,c
  1121   0005A0  EFDD  F002         	goto	u1190
  1122   0005A4  5063               	movf	(cubeidle@i+1)^0,w,c
  1123   0005A6  E107               	bnz	u1191
  1124   0005A8  0E7D               	movlw	125
  1125   0005AA  5C62               	subwf	cubeidle@i^0,w,c
  1126   0005AC  B0D8               	btfsc	status,0,c
  1127   0005AE  EFDB  F002         	goto	u1191
  1128   0005B2  EFDD  F002         	goto	u1190
  1129   0005B6                     u1191:
  1130   0005B6  EFE6  F002         	goto	l1664
  1131   0005BA                     u1190:
  1132   0005BA  5001               	movf	_mode^0,w,c
  1133   0005BC  1002               	iorwf	(_mode+1)^0,w,c
  1134   0005BE  B4D8               	btfsc	status,2,c
  1135   0005C0  EFE4  F002         	goto	u1201
  1136   0005C4  EFE6  F002         	goto	u1200
  1137   0005C8                     u1201:
  1138   0005C8  EFBA  F002         	goto	l1654
  1139   0005CC                     u1200:
  1140   0005CC                     l1664:
  1141                           
  1142                           ;main.c: 236: void main(void) {
  1143   0005CC  0E00               	movlw	0
  1144   0005CE  6E53               	movwf	(lighton@x+1)^0,c
  1145   0005D0  0E00               	movlw	0
  1146   0005D2  6E52               	movwf	lighton@x^0,c
  1147   0005D4  0E00               	movlw	0
  1148   0005D6  6E55               	movwf	(lighton@prev+1)^0,c
  1149   0005D8  0E7C               	movlw	124
  1150   0005DA  6E54               	movwf	lighton@prev^0,c
  1151   0005DC  EC7A  F001         	call	_lighton	;wreg free
  1152   0005E0                     
  1153                           ;main.c: 237:     init();
  1154   0005E0  0E03               	movlw	3
  1155   0005E2  6E5A               	movwf	??_cubeidle^0,c
  1156   0005E4  0E98               	movlw	152
  1157   0005E6                     u1377:
  1158   0005E6  2EE8               	decfsz	wreg,f,c
  1159   0005E8  D7FE               	bra	u1377
  1160   0005EA  2E5A               	decfsz	??_cubeidle^0,f,c
  1161   0005EC  D7FC               	bra	u1377
  1162   0005EE                     l1668:
  1163                           
  1164                           ;main.c: 231: void pulsing(int id){
  1165   0005EE  5058               	movf	cubeidle@id^0,w,c
  1166   0005F0  1801               	xorwf	_mode^0,w,c
  1167   0005F2  E109               	bnz	u1210
  1168   0005F4  5059               	movf	(cubeidle@id+1)^0,w,c
  1169   0005F6  1802               	xorwf	(_mode+1)^0,w,c
  1170   0005F8  B4D8               	btfsc	status,2,c
  1171   0005FA  EF01  F003         	goto	u1211
  1172   0005FE  EF03  F003         	goto	u1210
  1173   000602                     u1211:
  1174   000602  EFB4  F002         	goto	l1652
  1175   000606                     u1210:
  1176   000606  0012               	return		;funcret
  1177   000608                     __end_of_cubeidle:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _time *****************
  1181 ;; Defined at:
  1182 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\time.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  t               2    5[COMRAM] PTR long long 
  1185 ;;		 -> NULL(0), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  8    5[COMRAM] long long 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1197 ;;      Params:         8       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0
  1200 ;;      Totals:         8       0       0       0       0       0       0
  1201 ;;Total ram usage:        8 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_cubeidle
  1208 ;;		_random_pattern
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text4
  1213   000A04                     __ptext4:
  1214                           	callstack 0
  1215   000A04                     _time:
  1216                           	callstack 28
  1217   000A04  503E               	movf	time@t^0,w,c
  1218   000A06  103F               	iorwf	(time@t+1)^0,w,c
  1219   000A08  B4D8               	btfsc	status,2,c
  1220   000A0A  EF09  F005         	goto	u961
  1221   000A0E  EF0B  F005         	goto	u960
  1222   000A12                     u961:
  1223   000A12  EF1F  F005         	goto	l1504
  1224   000A16                     u960:
  1225   000A16  C03E  FFD9         	movff	time@t,fsr2l
  1226   000A1A  C03F  FFDA         	movff	time@t+1,fsr2h
  1227   000A1E  0EFF               	movlw	255
  1228   000A20  6EDE               	movwf	postinc2,c
  1229   000A22  0EFF               	movlw	255
  1230   000A24  6EDE               	movwf	postinc2,c
  1231   000A26  0EFF               	movlw	255
  1232   000A28  6EDE               	movwf	postinc2,c
  1233   000A2A  0EFF               	movlw	255
  1234   000A2C  6EDE               	movwf	postinc2,c
  1235   000A2E  0EFF               	movlw	255
  1236   000A30  6EDE               	movwf	postinc2,c
  1237   000A32  0EFF               	movlw	255
  1238   000A34  6EDE               	movwf	postinc2,c
  1239   000A36  0EFF               	movlw	255
  1240   000A38  6EDE               	movwf	postinc2,c
  1241   000A3A  0EFF               	movlw	255
  1242   000A3C  6EDD               	movwf	postdec2,c
  1243   000A3E                     l1504:
  1244   000A3E  683E               	setf	?_time^0,c
  1245   000A40  683F               	setf	(?_time+1)^0,c
  1246   000A42  6840               	setf	(?_time+2)^0,c
  1247   000A44  6841               	setf	(?_time+3)^0,c
  1248   000A46  6842               	setf	(?_time+4)^0,c
  1249   000A48  6843               	setf	(?_time+5)^0,c
  1250   000A4A  6844               	setf	(?_time+6)^0,c
  1251   000A4C  6845               	setf	(?_time+7)^0,c
  1252   000A4E  0012               	return		;funcret
  1253   000A50                     __end_of_time:
  1254                           	callstack 0
  1255                           
  1256 ;; *************** function _srand *****************
  1257 ;; Defined at:
  1258 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  s               2   13[COMRAM] unsigned int 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         2       0       0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0       0       0
  1275 ;;      Totals:         4       0       0       0       0       0       0
  1276 ;;Total ram usage:        4 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_cubeidle
  1283 ;;		_random_pattern
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text5
  1288   000A90                     __ptext5:
  1289                           	callstack 0
  1290   000A90                     _srand:
  1291                           	callstack 28
  1292   000A90  0EFF               	movlw	255
  1293   000A92  2446               	addwf	srand@s^0,w,c
  1294   000A94  6E48               	movwf	??_srand^0,c
  1295   000A96  0EFF               	movlw	255
  1296   000A98  2047               	addwfc	(srand@s+1)^0,w,c
  1297   000A9A  6E49               	movwf	(??_srand+1)^0,c
  1298   000A9C  C048  F035         	movff	??_srand,_seed
  1299   000AA0  C049  F036         	movff	??_srand+1,_seed+1
  1300   000AA4  6A37               	clrf	(_seed+2)^0,c
  1301   000AA6  6A38               	clrf	(_seed+3)^0,c
  1302   000AA8  0012               	return		;funcret
  1303   000AAA                     __end_of_srand:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _lighton *****************
  1307 ;; Defined at:
  1308 ;;		line 143 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  x               2   25[COMRAM] int 
  1311 ;;  prev            2   27[COMRAM] int 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1323 ;;      Params:         4       0       0       0       0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0
  1325 ;;      Temps:          2       0       0       0       0       0       0
  1326 ;;      Totals:         6       0       0       0       0       0       0
  1327 ;;Total ram usage:        6 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 2
  1330 ;; This function calls:
  1331 ;;		___awdiv
  1332 ;;		___awmod
  1333 ;;		___wmul
  1334 ;;		_draw_plane
  1335 ;;		_set_plane
  1336 ;; This function is called by:
  1337 ;;		_cubeidle
  1338 ;;		_random_pattern
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text6
  1343   0002F4                     __ptext6:
  1344                           	callstack 0
  1345   0002F4                     _lighton:
  1346                           	callstack 27
  1347   0002F4                     
  1348                           ;main.c: 144:     srand(time(((void*)0)));
  1349   0002F4  C052  F044         	movff	lighton@x,___awdiv@dividend
  1350   0002F8  C053  F045         	movff	lighton@x+1,___awdiv@dividend+1
  1351   0002FC  0E00               	movlw	0
  1352   0002FE  6E47               	movwf	(___awdiv@divisor+1)^0,c
  1353   000300  0E19               	movlw	25
  1354   000302  6E46               	movwf	___awdiv@divisor^0,c
  1355   000304  EC04  F003         	call	___awdiv	;wreg free
  1356   000308  C044  F04C         	movff	?___awdiv,set_plane@a
  1357   00030C  C045  F04D         	movff	?___awdiv+1,set_plane@a+1
  1358   000310  EC69  F004         	call	_set_plane	;wreg free
  1359   000314                     
  1360                           ;main.c: 145:     int x = 0, r = 0, prevr, prevx = -1;
  1361   000314  2854               	incf	lighton@prev^0,w,c
  1362   000316  E108               	bnz	u950
  1363   000318  2855               	incf	(lighton@prev+1)^0,w,c
  1364   00031A  B4D8               	btfsc	status,2,c
  1365   00031C  EF92  F001         	goto	u951
  1366   000320  EF94  F001         	goto	u950
  1367   000324                     u951:
  1368   000324  EFCF  F001         	goto	l90
  1369   000328                     u950:
  1370   000328  0E00               	movlw	0
  1371   00032A  6E47               	movwf	(___awdiv@divisor+1)^0,c
  1372   00032C  0E05               	movlw	5
  1373   00032E  6E46               	movwf	___awdiv@divisor^0,c
  1374   000330  0E00               	movlw	0
  1375   000332  6E41               	movwf	(___awmod@divisor+1)^0,c
  1376   000334  0E19               	movlw	25
  1377   000336  6E40               	movwf	___awmod@divisor^0,c
  1378   000338  C054  F03E         	movff	lighton@prev,___awmod@dividend
  1379   00033C  C055  F03F         	movff	lighton@prev+1,___awmod@dividend+1
  1380   000340  EC66  F003         	call	___awmod	;wreg free
  1381   000344  C03E  F044         	movff	?___awmod,___awdiv@dividend
  1382   000348  C03F  F045         	movff	?___awmod+1,___awdiv@dividend+1
  1383   00034C  EC04  F003         	call	___awdiv	;wreg free
  1384   000350  C044  F04C         	movff	?___awdiv,___wmul@multiplier
  1385   000354  C045  F04D         	movff	?___awdiv+1,___wmul@multiplier+1
  1386   000358  0E00               	movlw	0
  1387   00035A  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
  1388   00035C  0E0A               	movlw	10
  1389   00035E  6E4E               	movwf	___wmul@multiplicand^0,c
  1390   000360  EC28  F005         	call	___wmul	;wreg free
  1391   000364  0E03               	movlw	low _plane
  1392   000366  244C               	addwf	?___wmul^0,w,c
  1393   000368  6E56               	movwf	??_lighton^0,c
  1394   00036A  0E00               	movlw	high _plane
  1395   00036C  204D               	addwfc	(?___wmul+1)^0,w,c
  1396   00036E  6E57               	movwf	(??_lighton+1)^0,c
  1397   000370  C054  F03E         	movff	lighton@prev,___awmod@dividend
  1398   000374  C055  F03F         	movff	lighton@prev+1,___awmod@dividend+1
  1399   000378  0E00               	movlw	0
  1400   00037A  6E41               	movwf	(___awmod@divisor+1)^0,c
  1401   00037C  0E05               	movlw	5
  1402   00037E  6E40               	movwf	___awmod@divisor^0,c
  1403   000380  EC66  F003         	call	___awmod	;wreg free
  1404   000384  90D8               	bcf	status,0,c
  1405   000386  363E               	rlcf	?___awmod^0,f,c
  1406   000388  363F               	rlcf	(?___awmod+1)^0,f,c
  1407   00038A  503E               	movf	?___awmod^0,w,c
  1408   00038C  2456               	addwf	??_lighton^0,w,c
  1409   00038E  6ED9               	movwf	fsr2l,c
  1410   000390  503F               	movf	(?___awmod+1)^0,w,c
  1411   000392  2057               	addwfc	(??_lighton+1)^0,w,c
  1412   000394  6EDA               	movwf	fsr2h,c
  1413   000396  0E00               	movlw	0
  1414   000398  6EDE               	movwf	postinc2,c
  1415   00039A  0E00               	movlw	0
  1416   00039C  6EDD               	movwf	postdec2,c
  1417   00039E                     l90:
  1418                           
  1419                           ;main.c: 146:     lighton(0, prevx);
  1420   00039E  0E00               	movlw	0
  1421   0003A0  6E47               	movwf	(___awdiv@divisor+1)^0,c
  1422   0003A2  0E05               	movlw	5
  1423   0003A4  6E46               	movwf	___awdiv@divisor^0,c
  1424   0003A6  0E00               	movlw	0
  1425   0003A8  6E41               	movwf	(___awmod@divisor+1)^0,c
  1426   0003AA  0E19               	movlw	25
  1427   0003AC  6E40               	movwf	___awmod@divisor^0,c
  1428   0003AE  C052  F03E         	movff	lighton@x,___awmod@dividend
  1429   0003B2  C053  F03F         	movff	lighton@x+1,___awmod@dividend+1
  1430   0003B6  EC66  F003         	call	___awmod	;wreg free
  1431   0003BA  C03E  F044         	movff	?___awmod,___awdiv@dividend
  1432   0003BE  C03F  F045         	movff	?___awmod+1,___awdiv@dividend+1
  1433   0003C2  EC04  F003         	call	___awdiv	;wreg free
  1434   0003C6  C044  F04C         	movff	?___awdiv,___wmul@multiplier
  1435   0003CA  C045  F04D         	movff	?___awdiv+1,___wmul@multiplier+1
  1436   0003CE  0E00               	movlw	0
  1437   0003D0  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
  1438   0003D2  0E0A               	movlw	10
  1439   0003D4  6E4E               	movwf	___wmul@multiplicand^0,c
  1440   0003D6  EC28  F005         	call	___wmul	;wreg free
  1441   0003DA  0E03               	movlw	low _plane
  1442   0003DC  244C               	addwf	?___wmul^0,w,c
  1443   0003DE  6E56               	movwf	??_lighton^0,c
  1444   0003E0  0E00               	movlw	high _plane
  1445   0003E2  204D               	addwfc	(?___wmul+1)^0,w,c
  1446   0003E4  6E57               	movwf	(??_lighton+1)^0,c
  1447   0003E6  C052  F03E         	movff	lighton@x,___awmod@dividend
  1448   0003EA  C053  F03F         	movff	lighton@x+1,___awmod@dividend+1
  1449   0003EE  0E00               	movlw	0
  1450   0003F0  6E41               	movwf	(___awmod@divisor+1)^0,c
  1451   0003F2  0E05               	movlw	5
  1452   0003F4  6E40               	movwf	___awmod@divisor^0,c
  1453   0003F6  EC66  F003         	call	___awmod	;wreg free
  1454   0003FA  90D8               	bcf	status,0,c
  1455   0003FC  363E               	rlcf	?___awmod^0,f,c
  1456   0003FE  363F               	rlcf	(?___awmod+1)^0,f,c
  1457   000400  503E               	movf	?___awmod^0,w,c
  1458   000402  2456               	addwf	??_lighton^0,w,c
  1459   000404  6ED9               	movwf	fsr2l,c
  1460   000406  503F               	movf	(?___awmod+1)^0,w,c
  1461   000408  2057               	addwfc	(??_lighton+1)^0,w,c
  1462   00040A  6EDA               	movwf	fsr2h,c
  1463   00040C  0E01               	movlw	1
  1464   00040E  6EDE               	movwf	postinc2,c
  1465   000410  0E00               	movlw	0
  1466   000412  6EDD               	movwf	postdec2,c
  1467   000414                     
  1468                           ;main.c: 147:     r = rand() % 6;
  1469   000414  EC0D  F002         	call	_draw_plane	;wreg free
  1470   000418  0012               	return		;funcret
  1471   00041A                     __end_of_lighton:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _set_plane *****************
  1475 ;; Defined at:
  1476 ;;		line 90 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  a               2   19[COMRAM] int 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         2       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0
  1493 ;;      Totals:         4       0       0       0       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_lighton
  1501 ;;		_speedup
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text7
  1507   0008D2                     __ptext7:
  1508                           	callstack 0
  1509   0008D2                     _set_plane:
  1510                           	callstack 28
  1511   0008D2                     
  1512                           ;main.c: 91:             LATAbits.LA7 = 1;
  1513   0008D2  8296               	bsf	150,1,c	;volatile
  1514                           
  1515                           ;main.c: 92:             break;
  1516   0008D4  8496               	bsf	150,2,c	;volatile
  1517                           
  1518                           ;main.c: 93:         case 3:
  1519   0008D6  8E92               	bsf	146,7,c	;volatile
  1520                           
  1521                           ;main.c: 94:             TRISAbits.TRISA6 = 0;
  1522   0008D8  8C92               	bsf	146,6,c	;volatile
  1523                           
  1524                           ;main.c: 95:             LATAbits.LA6 = 1;
  1525   0008DA  8094               	bsf	148,0,c	;volatile
  1526                           
  1527                           ;main.c: 96:             break;
  1528   0008DC  EF8B  F004         	goto	l1376
  1529   0008E0                     l73:
  1530                           
  1531                           ;main.c: 98:             TRISCbits.TRISC0 = 0;
  1532   0008E0  9296               	bcf	150,1,c	;volatile
  1533                           
  1534                           ;main.c: 99:             LATCbits.LC0 = 1 ;
  1535   0008E2  828D               	bsf	141,1,c	;volatile
  1536                           
  1537                           ;main.c: 100:             break;
  1538   0008E4  EFAD  F004         	goto	l80
  1539   0008E8                     l75:
  1540                           
  1541                           ;main.c: 102:             TRISEbits.TRISE1 = 1;
  1542   0008E8  9496               	bcf	150,2,c	;volatile
  1543                           
  1544                           ;main.c: 103:             TRISEbits.TRISE2 = 1;
  1545   0008EA  848D               	bsf	141,2,c	;volatile
  1546                           
  1547                           ;main.c: 104:             TRISAbits.TRISA7 = 1;
  1548   0008EC  EFAD  F004         	goto	l80
  1549   0008F0                     l76:
  1550                           
  1551                           ;main.c: 106:             TRISCbits.TRISC0 = 1;
  1552   0008F0  9E92               	bcf	146,7,c	;volatile
  1553                           
  1554                           ;main.c: 107:             break;
  1555   0008F2  8E89               	bsf	137,7,c	;volatile
  1556                           
  1557                           ;main.c: 108:     }
  1558   0008F4  EFAD  F004         	goto	l80
  1559   0008F8                     l77:
  1560                           
  1561                           ;main.c: 110: 
  1562   0008F8  9C92               	bcf	146,6,c	;volatile
  1563                           
  1564                           ;main.c: 111: void clear_cube(){
  1565   0008FA  8C89               	bsf	137,6,c	;volatile
  1566                           
  1567                           ;main.c: 112:     TRISEbits.TRISE1 = 1;
  1568   0008FC  EFAD  F004         	goto	l80
  1569   000900                     l78:
  1570                           
  1571                           ;main.c: 114:     TRISAbits.TRISA7 = 1;
  1572   000900  9094               	bcf	148,0,c	;volatile
  1573                           
  1574                           ;main.c: 115:     TRISAbits.TRISA6 = 1;
  1575   000902  808B               	bsf	139,0,c	;volatile
  1576                           
  1577                           ;main.c: 116:     TRISCbits.TRISC0 = 1;
  1578   000904  EFAD  F004         	goto	l80
  1579   000908                     l79:
  1580                           
  1581                           ;main.c: 118:     TRISB = 0;
  1582   000908  8296               	bsf	150,1,c	;volatile
  1583                           
  1584                           ;main.c: 119:     TRISC = 0;
  1585   00090A  8496               	bsf	150,2,c	;volatile
  1586                           
  1587                           ;main.c: 120:     TRISD = 0;
  1588   00090C  8E92               	bsf	146,7,c	;volatile
  1589                           
  1590                           ;main.c: 121:     TRISE = 0;
  1591   00090E  8C92               	bsf	146,6,c	;volatile
  1592                           
  1593                           ;main.c: 122:     for(int i = 0; i < 5; i++)
  1594   000910  8094               	bsf	148,0,c	;volatile
  1595                           
  1596                           ;main.c: 123:         for(int j = 0; j < 5; j++)
  1597   000912  EFAD  F004         	goto	l80
  1598   000916                     l1376:
  1599   000916  C04C  F04E         	movff	set_plane@a,??_set_plane
  1600   00091A  C04D  F04F         	movff	set_plane@a+1,??_set_plane+1
  1601                           
  1602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 1, Range of values is 0 to 0
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte            4     3 (average)
  1608                           ;	Chosen strategy is simple_byte
  1609   00091E  504F               	movf	(??_set_plane+1)^0,w,c
  1610   000920  0A00               	xorlw	0	; case 0
  1611   000922  B4D8               	btfsc	status,2,c
  1612   000924  EF96  F004         	goto	l1800
  1613   000928  EF84  F004         	goto	l79
  1614   00092C                     l1800:
  1615                           
  1616                           ; Switch size 1, requested type "simple"
  1617                           ; Number of cases is 5, Range of values is 0 to 4
  1618                           ; switch strategies available:
  1619                           ; Name         Instructions Cycles
  1620                           ; simple_byte           16     9 (average)
  1621                           ;	Chosen strategy is simple_byte
  1622   00092C  504E               	movf	??_set_plane^0,w,c
  1623   00092E  0A00               	xorlw	0	; case 0
  1624   000930  B4D8               	btfsc	status,2,c
  1625   000932  EF70  F004         	goto	l73
  1626   000936  0A01               	xorlw	1	; case 1
  1627   000938  B4D8               	btfsc	status,2,c
  1628   00093A  EF74  F004         	goto	l75
  1629   00093E  0A03               	xorlw	3	; case 2
  1630   000940  B4D8               	btfsc	status,2,c
  1631   000942  EF78  F004         	goto	l76
  1632   000946  0A01               	xorlw	1	; case 3
  1633   000948  B4D8               	btfsc	status,2,c
  1634   00094A  EF7C  F004         	goto	l77
  1635   00094E  0A07               	xorlw	7	; case 4
  1636   000950  B4D8               	btfsc	status,2,c
  1637   000952  EF80  F004         	goto	l78
  1638   000956  EF84  F004         	goto	l79
  1639   00095A                     l80:
  1640   00095A  0012               	return		;funcret
  1641   00095C                     __end_of_set_plane:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _draw_plane *****************
  1645 ;; Defined at:
  1646 ;;		line 51 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		None
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1660 ;;      Params:         0       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_lighton
  1671 ;;		_speedup
  1672 ;;		_clear_plane
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text8
  1677   00041A                     __ptext8:
  1678                           	callstack 0
  1679   00041A                     _draw_plane:
  1680                           	callstack 28
  1681   00041A                     
  1682                           ;main.c: 52:     LATBbits.LB4 = plane[2][4];
  1683   00041A  B003               	btfsc	_plane^0,0,c
  1684   00041C  D002               	bra	u15
  1685   00041E  9089               	bcf	137,0,c	;volatile
  1686   000420  D001               	bra	u16
  1687   000422                     u15:
  1688   000422  8089               	bsf	137,0,c	;volatile
  1689   000424                     u16:
  1690                           
  1691                           ;main.c: 53: 
  1692   000424  B005               	btfsc	(_plane+2)^0,0,c
  1693   000426  D002               	bra	u25
  1694   000428  9289               	bcf	137,1,c	;volatile
  1695   00042A  D001               	bra	u26
  1696   00042C                     u25:
  1697   00042C  8289               	bsf	137,1,c	;volatile
  1698   00042E                     u26:
  1699                           
  1700                           ;main.c: 54:     LATCbits.LC7 = plane[3][0];
  1701   00042E  B007               	btfsc	(_plane+4)^0,0,c
  1702   000430  D002               	bra	u35
  1703   000432  9489               	bcf	137,2,c	;volatile
  1704   000434  D001               	bra	u36
  1705   000436                     u35:
  1706   000436  8489               	bsf	137,2,c	;volatile
  1707   000438                     u36:
  1708                           
  1709                           ;main.c: 55:     LATDbits.LD4 = plane[3][1];
  1710   000438  B009               	btfsc	(_plane+6)^0,0,c
  1711   00043A  D002               	bra	u45
  1712   00043C  9689               	bcf	137,3,c	;volatile
  1713   00043E  D001               	bra	u46
  1714   000440                     u45:
  1715   000440  8689               	bsf	137,3,c	;volatile
  1716   000442                     u46:
  1717                           
  1718                           ;main.c: 56:     LATDbits.LD5 = plane[3][2];
  1719   000442  B00B               	btfsc	(_plane+8)^0,0,c
  1720   000444  D002               	bra	u55
  1721   000446  9889               	bcf	137,4,c	;volatile
  1722   000448  D001               	bra	u56
  1723   00044A                     u55:
  1724   00044A  8889               	bsf	137,4,c	;volatile
  1725   00044C                     u56:
  1726                           
  1727                           ;main.c: 58:     LATDbits.LD7 = plane[3][4];
  1728   00044C  B00D               	btfsc	(_plane+10)^0,0,c
  1729   00044E  D002               	bra	u65
  1730   000450  928B               	bcf	139,1,c	;volatile
  1731   000452  D001               	bra	u66
  1732   000454                     u65:
  1733   000454  828B               	bsf	139,1,c	;volatile
  1734   000456                     u66:
  1735                           
  1736                           ;main.c: 59: 
  1737   000456  B00F               	btfsc	(_plane+12)^0,0,c
  1738   000458  D002               	bra	u75
  1739   00045A  948B               	bcf	139,2,c	;volatile
  1740   00045C  D001               	bra	u76
  1741   00045E                     u75:
  1742   00045E  848B               	bsf	139,2,c	;volatile
  1743   000460                     u76:
  1744                           
  1745                           ;main.c: 60:     LATDbits.LD2 = plane[4][0];
  1746   000460  B011               	btfsc	(_plane+14)^0,0,c
  1747   000462  D002               	bra	u85
  1748   000464  968B               	bcf	139,3,c	;volatile
  1749   000466  D001               	bra	u86
  1750   000468                     u85:
  1751   000468  868B               	bsf	139,3,c	;volatile
  1752   00046A                     u86:
  1753                           
  1754                           ;main.c: 61:     LATDbits.LD3 = plane[4][1];
  1755   00046A  B013               	btfsc	(_plane+16)^0,0,c
  1756   00046C  D002               	bra	u95
  1757   00046E  908C               	bcf	140,0,c	;volatile
  1758   000470  D001               	bra	u96
  1759   000472                     u95:
  1760   000472  808C               	bsf	140,0,c	;volatile
  1761   000474                     u96:
  1762                           
  1763                           ;main.c: 62:     LATCbits.LC4 = plane[4][2];
  1764   000474  B015               	btfsc	(_plane+18)^0,0,c
  1765   000476  D002               	bra	u105
  1766   000478  928C               	bcf	140,1,c	;volatile
  1767   00047A  D001               	bra	u106
  1768   00047C                     u105:
  1769   00047C  828C               	bsf	140,1,c	;volatile
  1770   00047E                     u106:
  1771                           
  1772                           ;main.c: 64:     LATCbits.LC6 = plane[4][4];
  1773   00047E  B017               	btfsc	(_plane+20)^0,0,c
  1774   000480  D002               	bra	u115
  1775   000482  908A               	bcf	138,0,c	;volatile
  1776   000484  D001               	bra	u116
  1777   000486                     u115:
  1778   000486  808A               	bsf	138,0,c	;volatile
  1779   000488                     u116:
  1780                           
  1781                           ;main.c: 65: }
  1782   000488  B019               	btfsc	(_plane+22)^0,0,c
  1783   00048A  D002               	bra	u125
  1784   00048C  928A               	bcf	138,1,c	;volatile
  1785   00048E  D001               	bra	u126
  1786   000490                     u125:
  1787   000490  828A               	bsf	138,1,c	;volatile
  1788   000492                     u126:
  1789                           
  1790                           ;main.c: 66: 
  1791   000492  B01B               	btfsc	(_plane+24)^0,0,c
  1792   000494  D002               	bra	u135
  1793   000496  948A               	bcf	138,2,c	;volatile
  1794   000498  D001               	bra	u136
  1795   00049A                     u135:
  1796   00049A  848A               	bsf	138,2,c	;volatile
  1797   00049C                     u136:
  1798                           
  1799                           ;main.c: 67: void clear_plane(){
  1800   00049C  B01D               	btfsc	(_plane+26)^0,0,c
  1801   00049E  D002               	bra	u145
  1802   0004A0  968A               	bcf	138,3,c	;volatile
  1803   0004A2  D001               	bra	u146
  1804   0004A4                     u145:
  1805   0004A4  868A               	bsf	138,3,c	;volatile
  1806   0004A6                     u146:
  1807                           
  1808                           ;main.c: 68:     for(int i = 0; i < 5; i++)
  1809   0004A6  B01F               	btfsc	(_plane+28)^0,0,c
  1810   0004A8  D002               	bra	u155
  1811   0004AA  988A               	bcf	138,4,c	;volatile
  1812   0004AC  D001               	bra	u156
  1813   0004AE                     u155:
  1814   0004AE  888A               	bsf	138,4,c	;volatile
  1815   0004B0                     u156:
  1816                           
  1817                           ;main.c: 70:             plane[i][j] = 0;
  1818   0004B0  B021               	btfsc	(_plane+30)^0,0,c
  1819   0004B2  D002               	bra	u165
  1820   0004B4  9E8B               	bcf	139,7,c	;volatile
  1821   0004B6  D001               	bra	u166
  1822   0004B8                     u165:
  1823   0004B8  8E8B               	bsf	139,7,c	;volatile
  1824   0004BA                     u166:
  1825                           
  1826                           ;main.c: 71:     draw_plane();
  1827   0004BA  B023               	btfsc	(_plane+32)^0,0,c
  1828   0004BC  D002               	bra	u175
  1829   0004BE  988C               	bcf	140,4,c	;volatile
  1830   0004C0  D001               	bra	u176
  1831   0004C2                     u175:
  1832   0004C2  888C               	bsf	140,4,c	;volatile
  1833   0004C4                     u176:
  1834                           
  1835                           ;main.c: 72: }
  1836   0004C4  B025               	btfsc	(_plane+34)^0,0,c
  1837   0004C6  D002               	bra	u185
  1838   0004C8  9A8C               	bcf	140,5,c	;volatile
  1839   0004CA  D001               	bra	u186
  1840   0004CC                     u185:
  1841   0004CC  8A8C               	bsf	140,5,c	;volatile
  1842   0004CE                     u186:
  1843                           
  1844                           ;main.c: 73: 
  1845   0004CE  B027               	btfsc	(_plane+36)^0,0,c
  1846   0004D0  D002               	bra	u195
  1847   0004D2  9C8C               	bcf	140,6,c	;volatile
  1848   0004D4  D001               	bra	u196
  1849   0004D6                     u195:
  1850   0004D6  8C8C               	bsf	140,6,c	;volatile
  1851   0004D8                     u196:
  1852                           
  1853                           ;main.c: 74: void set_plane(int a){
  1854   0004D8  B029               	btfsc	(_plane+38)^0,0,c
  1855   0004DA  D002               	bra	u205
  1856   0004DC  9E8C               	bcf	140,7,c	;volatile
  1857   0004DE  D001               	bra	u206
  1858   0004E0                     u205:
  1859   0004E0  8E8C               	bsf	140,7,c	;volatile
  1860   0004E2                     u206:
  1861                           
  1862                           ;main.c: 76:     TRISEbits.TRISE2 = 1;
  1863   0004E2  B02B               	btfsc	(_plane+40)^0,0,c
  1864   0004E4  D002               	bra	u215
  1865   0004E6  948C               	bcf	140,2,c	;volatile
  1866   0004E8  D001               	bra	u216
  1867   0004EA                     u215:
  1868   0004EA  848C               	bsf	140,2,c	;volatile
  1869   0004EC                     u216:
  1870                           
  1871                           ;main.c: 77:     TRISAbits.TRISA7 = 1;
  1872   0004EC  B02D               	btfsc	(_plane+42)^0,0,c
  1873   0004EE  D002               	bra	u225
  1874   0004F0  968C               	bcf	140,3,c	;volatile
  1875   0004F2  D001               	bra	u226
  1876   0004F4                     u225:
  1877   0004F4  868C               	bsf	140,3,c	;volatile
  1878   0004F6                     u226:
  1879                           
  1880                           ;main.c: 78:     TRISAbits.TRISA6 = 1;
  1881   0004F6  B02F               	btfsc	(_plane+44)^0,0,c
  1882   0004F8  D002               	bra	u235
  1883   0004FA  988B               	bcf	139,4,c	;volatile
  1884   0004FC  D001               	bra	u236
  1885   0004FE                     u235:
  1886   0004FE  888B               	bsf	139,4,c	;volatile
  1887   000500                     u236:
  1888                           
  1889                           ;main.c: 79:     TRISCbits.TRISC0 = 1;
  1890   000500  B031               	btfsc	(_plane+46)^0,0,c
  1891   000502  D002               	bra	u245
  1892   000504  9A8B               	bcf	139,5,c	;volatile
  1893   000506  D001               	bra	u246
  1894   000508                     u245:
  1895   000508  8A8B               	bsf	139,5,c	;volatile
  1896   00050A                     u246:
  1897                           
  1898                           ;main.c: 80:     switch (a){
  1899   00050A  B033               	btfsc	(_plane+48)^0,0,c
  1900   00050C  D002               	bra	u255
  1901   00050E  9C8B               	bcf	139,6,c	;volatile
  1902   000510  D001               	bra	u256
  1903   000512                     u255:
  1904   000512  8C8B               	bsf	139,6,c	;volatile
  1905   000514                     u256:
  1906   000514  0012               	return		;funcret
  1907   000516                     __end_of_draw_plane:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function ___awmod *****************
  1911 ;; Defined at:
  1912 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  dividend        2    5[COMRAM] int 
  1915 ;;  divisor         2    7[COMRAM] int 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;  sign            1   10[COMRAM] unsigned char 
  1918 ;;  counter         1    9[COMRAM] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2    5[COMRAM] int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1928 ;;      Params:         4       0       0       0       0       0       0
  1929 ;;      Locals:         2       0       0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0
  1931 ;;      Totals:         6       0       0       0       0       0       0
  1932 ;;Total ram usage:        6 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_lighton
  1939 ;;		_speedup
  1940 ;;		_move
  1941 ;;		_random_pattern
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text9
  1946   0006CC                     __ptext9:
  1947                           	callstack 0
  1948   0006CC                     ___awmod:
  1949                           	callstack 28
  1950   0006CC  0E00               	movlw	0
  1951   0006CE  6E43               	movwf	___awmod@sign^0,c
  1952   0006D0  BE3F               	btfsc	(___awmod@dividend+1)^0,7,c
  1953   0006D2  EF6F  F003         	goto	u870
  1954   0006D6  EF6D  F003         	goto	u871
  1955   0006DA                     u871:
  1956   0006DA  EF75  F003         	goto	l1440
  1957   0006DE                     u870:
  1958   0006DE  6C3E               	negf	___awmod@dividend^0,c
  1959   0006E0  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  1960   0006E2  B0D8               	btfsc	status,0,c
  1961   0006E4  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  1962   0006E6  0E01               	movlw	1
  1963   0006E8  6E43               	movwf	___awmod@sign^0,c
  1964   0006EA                     l1440:
  1965   0006EA  BE41               	btfsc	(___awmod@divisor+1)^0,7,c
  1966   0006EC  EF7C  F003         	goto	u880
  1967   0006F0  EF7A  F003         	goto	u881
  1968   0006F4                     u881:
  1969   0006F4  EF80  F003         	goto	l1444
  1970   0006F8                     u880:
  1971   0006F8  6C40               	negf	___awmod@divisor^0,c
  1972   0006FA  1E41               	comf	(___awmod@divisor+1)^0,f,c
  1973   0006FC  B0D8               	btfsc	status,0,c
  1974   0006FE  2A41               	incf	(___awmod@divisor+1)^0,f,c
  1975   000700                     l1444:
  1976   000700  5040               	movf	___awmod@divisor^0,w,c
  1977   000702  1041               	iorwf	(___awmod@divisor+1)^0,w,c
  1978   000704  B4D8               	btfsc	status,2,c
  1979   000706  EF87  F003         	goto	u891
  1980   00070A  EF89  F003         	goto	u890
  1981   00070E                     u891:
  1982   00070E  EFAD  F003         	goto	l1460
  1983   000712                     u890:
  1984   000712  0E01               	movlw	1
  1985   000714  6E42               	movwf	___awmod@counter^0,c
  1986   000716  EF91  F003         	goto	l1450
  1987   00071A                     l1448:
  1988   00071A  90D8               	bcf	status,0,c
  1989   00071C  3640               	rlcf	___awmod@divisor^0,f,c
  1990   00071E  3641               	rlcf	(___awmod@divisor+1)^0,f,c
  1991   000720  2A42               	incf	___awmod@counter^0,f,c
  1992   000722                     l1450:
  1993   000722  AE41               	btfss	(___awmod@divisor+1)^0,7,c
  1994   000724  EF96  F003         	goto	u901
  1995   000728  EF98  F003         	goto	u900
  1996   00072C                     u901:
  1997   00072C  EF8D  F003         	goto	l1448
  1998   000730                     u900:
  1999   000730                     l1452:
  2000   000730  5040               	movf	___awmod@divisor^0,w,c
  2001   000732  5C3E               	subwf	___awmod@dividend^0,w,c
  2002   000734  5041               	movf	(___awmod@divisor+1)^0,w,c
  2003   000736  583F               	subwfb	(___awmod@dividend+1)^0,w,c
  2004   000738  A0D8               	btfss	status,0,c
  2005   00073A  EFA1  F003         	goto	u911
  2006   00073E  EFA3  F003         	goto	u910
  2007   000742                     u911:
  2008   000742  EFA7  F003         	goto	l1456
  2009   000746                     u910:
  2010   000746  5040               	movf	___awmod@divisor^0,w,c
  2011   000748  5E3E               	subwf	___awmod@dividend^0,f,c
  2012   00074A  5041               	movf	(___awmod@divisor+1)^0,w,c
  2013   00074C  5A3F               	subwfb	(___awmod@dividend+1)^0,f,c
  2014   00074E                     l1456:
  2015   00074E  90D8               	bcf	status,0,c
  2016   000750  3241               	rrcf	(___awmod@divisor+1)^0,f,c
  2017   000752  3240               	rrcf	___awmod@divisor^0,f,c
  2018   000754  2E42               	decfsz	___awmod@counter^0,f,c
  2019   000756  EF98  F003         	goto	l1452
  2020   00075A                     l1460:
  2021   00075A  5043               	movf	___awmod@sign^0,w,c
  2022   00075C  B4D8               	btfsc	status,2,c
  2023   00075E  EFB3  F003         	goto	u921
  2024   000762  EFB5  F003         	goto	u920
  2025   000766                     u921:
  2026   000766  EFB9  F003         	goto	l1464
  2027   00076A                     u920:
  2028   00076A  6C3E               	negf	___awmod@dividend^0,c
  2029   00076C  1E3F               	comf	(___awmod@dividend+1)^0,f,c
  2030   00076E  B0D8               	btfsc	status,0,c
  2031   000770  2A3F               	incf	(___awmod@dividend+1)^0,f,c
  2032   000772                     l1464:
  2033   000772  C03E  F03E         	movff	___awmod@dividend,?___awmod
  2034   000776  C03F  F03F         	movff	___awmod@dividend+1,?___awmod+1
  2035   00077A  0012               	return		;funcret
  2036   00077C                     __end_of___awmod:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function ___awdiv *****************
  2040 ;; Defined at:
  2041 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  dividend        2   11[COMRAM] int 
  2044 ;;  divisor         2   13[COMRAM] int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  quotient        2   17[COMRAM] int 
  2047 ;;  sign            1   16[COMRAM] unsigned char 
  2048 ;;  counter         1   15[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2   11[COMRAM] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2058 ;;      Params:         4       0       0       0       0       0       0
  2059 ;;      Locals:         4       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0
  2061 ;;      Totals:         8       0       0       0       0       0       0
  2062 ;;Total ram usage:        8 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_lighton
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text10
  2073   000608                     __ptext10:
  2074                           	callstack 0
  2075   000608                     ___awdiv:
  2076                           	callstack 27
  2077   000608  0E00               	movlw	0
  2078   00060A  6E49               	movwf	___awdiv@sign^0,c
  2079   00060C  BE47               	btfsc	(___awdiv@divisor+1)^0,7,c
  2080   00060E  EF0D  F003         	goto	u810
  2081   000612  EF0B  F003         	goto	u811
  2082   000616                     u811:
  2083   000616  EF13  F003         	goto	l1396
  2084   00061A                     u810:
  2085   00061A  6C46               	negf	___awdiv@divisor^0,c
  2086   00061C  1E47               	comf	(___awdiv@divisor+1)^0,f,c
  2087   00061E  B0D8               	btfsc	status,0,c
  2088   000620  2A47               	incf	(___awdiv@divisor+1)^0,f,c
  2089   000622  0E01               	movlw	1
  2090   000624  6E49               	movwf	___awdiv@sign^0,c
  2091   000626                     l1396:
  2092   000626  BE45               	btfsc	(___awdiv@dividend+1)^0,7,c
  2093   000628  EF1A  F003         	goto	u820
  2094   00062C  EF18  F003         	goto	u821
  2095   000630                     u821:
  2096   000630  EF20  F003         	goto	l1402
  2097   000634                     u820:
  2098   000634  6C44               	negf	___awdiv@dividend^0,c
  2099   000636  1E45               	comf	(___awdiv@dividend+1)^0,f,c
  2100   000638  B0D8               	btfsc	status,0,c
  2101   00063A  2A45               	incf	(___awdiv@dividend+1)^0,f,c
  2102   00063C  0E01               	movlw	1
  2103   00063E  1A49               	xorwf	___awdiv@sign^0,f,c
  2104   000640                     l1402:
  2105   000640  0E00               	movlw	0
  2106   000642  6E4B               	movwf	(___awdiv@quotient+1)^0,c
  2107   000644  0E00               	movlw	0
  2108   000646  6E4A               	movwf	___awdiv@quotient^0,c
  2109   000648  5046               	movf	___awdiv@divisor^0,w,c
  2110   00064A  1047               	iorwf	(___awdiv@divisor+1)^0,w,c
  2111   00064C  B4D8               	btfsc	status,2,c
  2112   00064E  EF2B  F003         	goto	u831
  2113   000652  EF2D  F003         	goto	u830
  2114   000656                     u831:
  2115   000656  EF55  F003         	goto	l1424
  2116   00065A                     u830:
  2117   00065A  0E01               	movlw	1
  2118   00065C  6E48               	movwf	___awdiv@counter^0,c
  2119   00065E  EF35  F003         	goto	l1410
  2120   000662                     l1408:
  2121   000662  90D8               	bcf	status,0,c
  2122   000664  3646               	rlcf	___awdiv@divisor^0,f,c
  2123   000666  3647               	rlcf	(___awdiv@divisor+1)^0,f,c
  2124   000668  2A48               	incf	___awdiv@counter^0,f,c
  2125   00066A                     l1410:
  2126   00066A  AE47               	btfss	(___awdiv@divisor+1)^0,7,c
  2127   00066C  EF3A  F003         	goto	u841
  2128   000670  EF3C  F003         	goto	u840
  2129   000674                     u841:
  2130   000674  EF31  F003         	goto	l1408
  2131   000678                     u840:
  2132   000678                     l1412:
  2133   000678  90D8               	bcf	status,0,c
  2134   00067A  364A               	rlcf	___awdiv@quotient^0,f,c
  2135   00067C  364B               	rlcf	(___awdiv@quotient+1)^0,f,c
  2136   00067E  5046               	movf	___awdiv@divisor^0,w,c
  2137   000680  5C44               	subwf	___awdiv@dividend^0,w,c
  2138   000682  5047               	movf	(___awdiv@divisor+1)^0,w,c
  2139   000684  5845               	subwfb	(___awdiv@dividend+1)^0,w,c
  2140   000686  A0D8               	btfss	status,0,c
  2141   000688  EF48  F003         	goto	u851
  2142   00068C  EF4A  F003         	goto	u850
  2143   000690                     u851:
  2144   000690  EF4F  F003         	goto	l1420
  2145   000694                     u850:
  2146   000694  5046               	movf	___awdiv@divisor^0,w,c
  2147   000696  5E44               	subwf	___awdiv@dividend^0,f,c
  2148   000698  5047               	movf	(___awdiv@divisor+1)^0,w,c
  2149   00069A  5A45               	subwfb	(___awdiv@dividend+1)^0,f,c
  2150   00069C  804A               	bsf	___awdiv@quotient^0,0,c
  2151   00069E                     l1420:
  2152   00069E  90D8               	bcf	status,0,c
  2153   0006A0  3247               	rrcf	(___awdiv@divisor+1)^0,f,c
  2154   0006A2  3246               	rrcf	___awdiv@divisor^0,f,c
  2155   0006A4  2E48               	decfsz	___awdiv@counter^0,f,c
  2156   0006A6  EF3C  F003         	goto	l1412
  2157   0006AA                     l1424:
  2158   0006AA  5049               	movf	___awdiv@sign^0,w,c
  2159   0006AC  B4D8               	btfsc	status,2,c
  2160   0006AE  EF5B  F003         	goto	u861
  2161   0006B2  EF5D  F003         	goto	u860
  2162   0006B6                     u861:
  2163   0006B6  EF61  F003         	goto	l1428
  2164   0006BA                     u860:
  2165   0006BA  6C4A               	negf	___awdiv@quotient^0,c
  2166   0006BC  1E4B               	comf	(___awdiv@quotient+1)^0,f,c
  2167   0006BE  B0D8               	btfsc	status,0,c
  2168   0006C0  2A4B               	incf	(___awdiv@quotient+1)^0,f,c
  2169   0006C2                     l1428:
  2170   0006C2  C04A  F044         	movff	___awdiv@quotient,?___awdiv
  2171   0006C6  C04B  F045         	movff	___awdiv@quotient+1,?___awdiv+1
  2172   0006CA  0012               	return		;funcret
  2173   0006CC                     __end_of___awdiv:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _clear_cube *****************
  2177 ;; Defined at:
  2178 ;;		line 127 in file "main.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  j               2   29[COMRAM] int 
  2183 ;;  i               2   27[COMRAM] int 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         0       0       0       0       0       0       0
  2194 ;;      Locals:         4       0       0       0       0       0       0
  2195 ;;      Temps:          2       0       0       0       0       0       0
  2196 ;;      Totals:         6       0       0       0       0       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 2
  2200 ;; This function calls:
  2201 ;;		___wmul
  2202 ;; This function is called by:
  2203 ;;		_speedup
  2204 ;;		_cubeidle
  2205 ;;		_pulsing
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210   000828                     __ptext11:
  2211                           	callstack 0
  2212   000828                     _clear_cube:
  2213                           	callstack 27
  2214   000828                     
  2215                           ;main.c: 128:     set_plane(x/25);
  2216   000828  8296               	bsf	150,1,c	;volatile
  2217                           
  2218                           ;main.c: 129:     if(prev != -1)plane[(prev%25)/5][prev%5] = 0;
  2219   00082A  8496               	bsf	150,2,c	;volatile
  2220                           
  2221                           ;main.c: 130:     plane[(x%25)/5][x%5] = 1;
  2222   00082C  8E92               	bsf	146,7,c	;volatile
  2223                           
  2224                           ;main.c: 131:     draw_plane();
  2225   00082E  8C92               	bsf	146,6,c	;volatile
  2226                           
  2227                           ;main.c: 132: }
  2228   000830  8094               	bsf	148,0,c	;volatile
  2229   000832                     
  2230                           ;main.c: 133: int move(int x, int r){
  2231   000832  0E00               	movlw	0
  2232   000834  6E92               	movwf	146,c	;volatile
  2233                           
  2234                           ;main.c: 134:     if(r == 0)x = (x%5 == 4) ? x-4 : x+1;
  2235   000836  0E00               	movlw	0
  2236   000838  6E93               	movwf	147,c	;volatile
  2237                           
  2238                           ;main.c: 135:     else if(r == 1)x = (x%5 == 0) ? x+4 : x-1;
  2239   00083A  0E00               	movlw	0
  2240   00083C  6E94               	movwf	148,c	;volatile
  2241                           
  2242                           ;main.c: 136:     else if(r == 2)x = (x%25 >= 20) ? x-20 : x+5;
  2243   00083E  0E00               	movlw	0
  2244   000840  6E95               	movwf	149,c	;volatile
  2245                           
  2246                           ;main.c: 137:     else if(r == 3)x = (x%25 < 5) ? x+20 : x-5;
  2247   000842  0E00               	movlw	0
  2248   000844  6E96               	movwf	150,c	;volatile
  2249                           
  2250                           ;main.c: 138:     else if(r == 4)x = (x >= 100) ? x-100 : x+25;
  2251   000846  0E00               	movlw	0
  2252   000848  6E55               	movwf	(clear_cube@i+1)^0,c
  2253   00084A  0E00               	movlw	0
  2254   00084C  6E54               	movwf	clear_cube@i^0,c
  2255   00084E                     l1476:
  2256                           
  2257                           ;main.c: 139:     else if(r == 5)x = (x<25) ? x+100 : x-25;
  2258   00084E  0E00               	movlw	0
  2259   000850  6E57               	movwf	(clear_cube@j+1)^0,c
  2260   000852  0E00               	movlw	0
  2261   000854  6E56               	movwf	clear_cube@j^0,c
  2262   000856                     l1482:
  2263                           
  2264                           ;main.c: 140:     return x;
  2265   000856  C054  F04C         	movff	clear_cube@i,___wmul@multiplier
  2266   00085A  C055  F04D         	movff	clear_cube@i+1,___wmul@multiplier+1
  2267   00085E  0E00               	movlw	0
  2268   000860  6E4F               	movwf	(___wmul@multiplicand+1)^0,c
  2269   000862  0E0A               	movlw	10
  2270   000864  6E4E               	movwf	___wmul@multiplicand^0,c
  2271   000866  EC28  F005         	call	___wmul	;wreg free
  2272   00086A  0E03               	movlw	low _plane
  2273   00086C  244C               	addwf	?___wmul^0,w,c
  2274   00086E  6E52               	movwf	??_clear_cube^0,c
  2275   000870  0E00               	movlw	high _plane
  2276   000872  204D               	addwfc	(?___wmul+1)^0,w,c
  2277   000874  6E53               	movwf	(??_clear_cube+1)^0,c
  2278   000876  90D8               	bcf	status,0,c
  2279   000878  3456               	rlcf	clear_cube@j^0,w,c
  2280   00087A  6ED9               	movwf	fsr2l,c
  2281   00087C  3457               	rlcf	(clear_cube@j+1)^0,w,c
  2282   00087E  6EDA               	movwf	fsr2h,c
  2283   000880  5052               	movf	??_clear_cube^0,w,c
  2284   000882  26D9               	addwf	fsr2l,f,c
  2285   000884  5053               	movf	(??_clear_cube+1)^0,w,c
  2286   000886  22DA               	addwfc	fsr2h,f,c
  2287   000888  0E00               	movlw	0
  2288   00088A  6EDE               	movwf	postinc2,c
  2289   00088C  0E00               	movlw	0
  2290   00088E  6EDD               	movwf	postdec2,c
  2291   000890  4A56               	infsnz	clear_cube@j^0,f,c
  2292   000892  2A57               	incf	(clear_cube@j+1)^0,f,c
  2293   000894  BE57               	btfsc	(clear_cube@j+1)^0,7,c
  2294   000896  EF56  F004         	goto	u931
  2295   00089A  5057               	movf	(clear_cube@j+1)^0,w,c
  2296   00089C  E109               	bnz	u930
  2297   00089E  0E05               	movlw	5
  2298   0008A0  5C56               	subwf	clear_cube@j^0,w,c
  2299   0008A2  A0D8               	btfss	status,0,c
  2300   0008A4  EF56  F004         	goto	u931
  2301   0008A8  EF58  F004         	goto	u930
  2302   0008AC                     u931:
  2303   0008AC  EF2B  F004         	goto	l1482
  2304   0008B0                     u930:
  2305   0008B0  4A54               	infsnz	clear_cube@i^0,f,c
  2306   0008B2  2A55               	incf	(clear_cube@i+1)^0,f,c
  2307   0008B4  BE55               	btfsc	(clear_cube@i+1)^0,7,c
  2308   0008B6  EF66  F004         	goto	u941
  2309   0008BA  5055               	movf	(clear_cube@i+1)^0,w,c
  2310   0008BC  E109               	bnz	u940
  2311   0008BE  0E05               	movlw	5
  2312   0008C0  5C54               	subwf	clear_cube@i^0,w,c
  2313   0008C2  A0D8               	btfss	status,0,c
  2314   0008C4  EF66  F004         	goto	u941
  2315   0008C8  EF68  F004         	goto	u940
  2316   0008CC                     u941:
  2317   0008CC  EF27  F004         	goto	l1476
  2318   0008D0                     u940:
  2319   0008D0  0012               	return		;funcret
  2320   0008D2                     __end_of_clear_cube:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function ___wmul *****************
  2324 ;; Defined at:
  2325 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  multiplier      2   19[COMRAM] unsigned int 
  2328 ;;  multiplicand    2   21[COMRAM] unsigned int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  product         2   23[COMRAM] unsigned int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2   19[COMRAM] unsigned int 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, prodl, prodh
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         4       0       0       0       0       0       0
  2341 ;;      Locals:         2       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0
  2343 ;;      Totals:         6       0       0       0       0       0       0
  2344 ;;Total ram usage:        6 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_clear_cube
  2351 ;;		_lighton
  2352 ;;		_speedup
  2353 ;;		_clear_plane
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text12
  2358   000A50                     __ptext12:
  2359                           	callstack 0
  2360   000A50                     ___wmul:
  2361                           	callstack 27
  2362   000A50  504C               	movf	___wmul@multiplier^0,w,c
  2363   000A52  024E               	mulwf	___wmul@multiplicand^0,c
  2364   000A54  CFF3 F050          	movff	prodl,___wmul@product
  2365   000A58  CFF4 F051          	movff	prodh,___wmul@product+1
  2366   000A5C  504C               	movf	___wmul@multiplier^0,w,c
  2367   000A5E  024F               	mulwf	(___wmul@multiplicand+1)^0,c
  2368   000A60  50F3               	movf	243,w,c
  2369   000A62  2651               	addwf	(___wmul@product+1)^0,f,c
  2370   000A64  504D               	movf	(___wmul@multiplier+1)^0,w,c
  2371   000A66  024E               	mulwf	___wmul@multiplicand^0,c
  2372   000A68  50F3               	movf	243,w,c
  2373   000A6A  2651               	addwf	(___wmul@product+1)^0,f,c
  2374   000A6C  C050  F04C         	movff	___wmul@product,?___wmul
  2375   000A70  C051  F04D         	movff	___wmul@product+1,?___wmul+1
  2376   000A74  0012               	return		;funcret
  2377   000A76                     __end_of___wmul:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _H_ISR *****************
  2381 ;; Defined at:
  2382 ;;		line 286 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  value           2    2[COMRAM] int 
  2387 ;;  mapResult       1    4[COMRAM] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2397 ;;      Params:         0       0       0       0       0       0       0
  2398 ;;      Locals:         3       0       0       0       0       0       0
  2399 ;;      Temps:          2       0       0       0       0       0       0
  2400 ;;      Totals:         5       0       0       0       0       0       0
  2401 ;;Total ram usage:        5 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		Interrupt level 2
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	intcode
  2411   000008                     __pintcode:
  2412                           	callstack 0
  2413   000008                     _H_ISR:
  2414                           	callstack 27
  2415                           
  2416                           ;incstack = 0
  2417   000008  8269               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2418   00000A  EDD8  F004         	call	int_func,f	;refresh shadow registers
  2419                           
  2420                           	psect	intcode_body
  2421   0009B0                     __pintcode_body:
  2422                           	callstack 27
  2423   0009B0                     int_func:
  2424                           	callstack 27
  2425   0009B0  0006               	pop		; remove dummy address from shadow register refresh
  2426   0009B2                     
  2427                           ;main.c: 288: 
  2428   0009B2  50C4               	movf	196,w,c	;volatile
  2429   0009B4  6E3A               	movwf	(??_H_ISR+1)^0,c
  2430   0009B6  6A39               	clrf	??_H_ISR^0,c
  2431   0009B8  50C3               	movf	195,w,c	;volatile
  2432   0009BA  2439               	addwf	??_H_ISR^0,w,c
  2433   0009BC  6E3B               	movwf	H_ISR@value^0,c
  2434   0009BE  0E00               	movlw	0
  2435   0009C0  203A               	addwfc	(??_H_ISR+1)^0,w,c
  2436   0009C2  6E3C               	movwf	(H_ISR@value+1)^0,c
  2437   0009C4                     
  2438                           ;main.c: 291:     ADCON0bits.GO = 1;
  2439   0009C4  0E00               	movlw	0
  2440   0009C6  6E3D               	movwf	H_ISR@mapResult^0,c
  2441                           
  2442                           ;main.c: 293:     return;
  2443   0009C8  EFEB  F004         	goto	i2l1362
  2444   0009CC                     i2l1358:
  2445                           
  2446                           ;main.c: 294: }
  2447   0009CC  0E33               	movlw	51
  2448   0009CE  263B               	addwf	H_ISR@value^0,f,c
  2449   0009D0  0EFF               	movlw	255
  2450   0009D2  223C               	addwfc	(H_ISR@value+1)^0,f,c
  2451   0009D4  2A3D               	incf	H_ISR@mapResult^0,f,c
  2452   0009D6                     i2l1362:
  2453                           
  2454                           ;main.c: 293:     return;
  2455   0009D6  BE3C               	btfsc	(H_ISR@value+1)^0,7,c
  2456   0009D8  EFF9  F004         	goto	i2u80_40
  2457   0009DC  503C               	movf	(H_ISR@value+1)^0,w,c
  2458   0009DE  E107               	bnz	i2u80_41
  2459   0009E0  0ECE               	movlw	206
  2460   0009E2  5C3B               	subwf	H_ISR@value^0,w,c
  2461   0009E4  B0D8               	btfsc	status,0,c
  2462   0009E6  EFF7  F004         	goto	i2u80_41
  2463   0009EA  EFF9  F004         	goto	i2u80_40
  2464   0009EE                     i2u80_41:
  2465   0009EE  EFE6  F004         	goto	i2l1358
  2466   0009F2                     i2u80_40:
  2467   0009F2  C03D  F001         	movff	H_ISR@mapResult,_mode
  2468   0009F6  6A02               	clrf	(_mode+1)^0,c
  2469   0009F8  9C9E               	bcf	158,6,c	;volatile
  2470   0009FA  D000               	nop2		;2 cycle nop
  2471   0009FC  D000               	nop2		;2 cycle nop
  2472   0009FE  82C2               	bsf	194,1,c	;volatile
  2473   000A00  9269               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2474   000A02  0011               	retfie		f
  2475   000A04                     __end_of_H_ISR:
  2476                           	callstack 0
  2477   000000                     
  2478                           	psect	rparam
  2479   000000                     
  2480                           	psect	temp
  2481   000069                     btemp:
  2482                           	callstack 0
  2483   000069                     	ds	1
  2484   000000                     int$flags	set	btemp
  2485   000000                     wtemp8	set	btemp+1
  2486   000000                     ttemp5	set	btemp+1
  2487   000000                     ttemp6	set	btemp+4
  2488   000000                     ttemp7	set	btemp+8
  2489                           
  2490                           	psect	idloc
  2491                           
  2492                           ;Config register IDLOC0 @ 0x200000
  2493                           ;	unspecified, using default values
  2494   200000                     	org	2097152
  2495   200000  FF                 	db	255
  2496                           
  2497                           ;Config register IDLOC1 @ 0x200001
  2498                           ;	unspecified, using default values
  2499   200001                     	org	2097153
  2500   200001  FF                 	db	255
  2501                           
  2502                           ;Config register IDLOC2 @ 0x200002
  2503                           ;	unspecified, using default values
  2504   200002                     	org	2097154
  2505   200002  FF                 	db	255
  2506                           
  2507                           ;Config register IDLOC3 @ 0x200003
  2508                           ;	unspecified, using default values
  2509   200003                     	org	2097155
  2510   200003  FF                 	db	255
  2511                           
  2512                           ;Config register IDLOC4 @ 0x200004
  2513                           ;	unspecified, using default values
  2514   200004                     	org	2097156
  2515   200004  FF                 	db	255
  2516                           
  2517                           ;Config register IDLOC5 @ 0x200005
  2518                           ;	unspecified, using default values
  2519   200005                     	org	2097157
  2520   200005  FF                 	db	255
  2521                           
  2522                           ;Config register IDLOC6 @ 0x200006
  2523                           ;	unspecified, using default values
  2524   200006                     	org	2097158
  2525   200006  FF                 	db	255
  2526                           
  2527                           ;Config register IDLOC7 @ 0x200007
  2528                           ;	unspecified, using default values
  2529   200007                     	org	2097159
  2530   200007  FF                 	db	255
  2531                           
  2532                           	psect	config
  2533                           
  2534                           ; Padding undefined space
  2535   300000                     	org	3145728
  2536   300000  FF                 	db	255
  2537                           
  2538                           ;Config register CONFIG1H @ 0x300001
  2539                           ;	Oscillator Selection bits
  2540                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2541                           ;	Fail-Safe Clock Monitor Enable bit
  2542                           ;	FCMEN = 0x0, unprogrammed default
  2543                           ;	Internal/External Oscillator Switchover bit
  2544                           ;	IESO = 0x0, unprogrammed default
  2545   300001                     	org	3145729
  2546   300001  08                 	db	8
  2547                           
  2548                           ;Config register CONFIG2L @ 0x300002
  2549                           ;	Power-up Timer Enable bit
  2550                           ;	PWRT = OFF, PWRT disabled
  2551                           ;	Brown-out Reset Enable bits
  2552                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  2553                           ;	Brown Out Reset Voltage bits
  2554                           ;	BORV = 0x3, unprogrammed default
  2555   300002                     	org	3145730
  2556   300002  1B                 	db	27
  2557                           
  2558                           ;Config register CONFIG2H @ 0x300003
  2559                           ;	Watchdog Timer Enable bit
  2560                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2561                           ;	Watchdog Timer Postscale Select bits
  2562                           ;	WDTPS = 0xF, unprogrammed default
  2563   300003                     	org	3145731
  2564   300003  1E                 	db	30
  2565                           
  2566                           ; Padding undefined space
  2567   300004                     	org	3145732
  2568   300004  FF                 	db	255
  2569                           
  2570                           ;Config register CONFIG3H @ 0x300005
  2571                           ;	CCP2 MUX bit
  2572                           ;	CCP2MX = 0x1, unprogrammed default
  2573                           ;	PORTB A/D Enable bit
  2574                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2575                           ;	Low-Power Timer1 Oscillator Enable bit
  2576                           ;	LPT1OSC = 0x0, unprogrammed default
  2577                           ;	MCLR Pin Enable bit
  2578                           ;	MCLRE = 0x1, unprogrammed default
  2579   300005                     	org	3145733
  2580   300005  81                 	db	129
  2581                           
  2582                           ;Config register CONFIG4L @ 0x300006
  2583                           ;	Stack Full/Underflow Reset Enable bit
  2584                           ;	STVREN = 0x1, unprogrammed default
  2585                           ;	Single-Supply ICSP Enable bit
  2586                           ;	LVP = OFF, Single-Supply ICSP disabled
  2587                           ;	Extended Instruction Set Enable bit
  2588                           ;	XINST = 0x0, unprogrammed default
  2589                           ;	Background Debugger Enable bit
  2590                           ;	DEBUG = 0x1, unprogrammed default
  2591   300006                     	org	3145734
  2592   300006  81                 	db	129
  2593                           
  2594                           ; Padding undefined space
  2595   300007                     	org	3145735
  2596   300007  FF                 	db	255
  2597                           
  2598                           ;Config register CONFIG5L @ 0x300008
  2599                           ;	unspecified, using default values
  2600                           ;	Code Protection bit
  2601                           ;	CP0 = 0x1, unprogrammed default
  2602                           ;	Code Protection bit
  2603                           ;	CP1 = 0x1, unprogrammed default
  2604                           ;	Code Protection bit
  2605                           ;	CP2 = 0x1, unprogrammed default
  2606                           ;	Code Protection bit
  2607                           ;	CP3 = 0x1, unprogrammed default
  2608   300008                     	org	3145736
  2609   300008  0F                 	db	15
  2610                           
  2611                           ;Config register CONFIG5H @ 0x300009
  2612                           ;	Boot Block Code Protection bit
  2613                           ;	CPB = 0x1, unprogrammed default
  2614                           ;	Data EEPROM Code Protection bit
  2615                           ;	CPD = OFF, Data EEPROM not code-protected
  2616   300009                     	org	3145737
  2617   300009  C0                 	db	192
  2618                           
  2619                           ;Config register CONFIG6L @ 0x30000A
  2620                           ;	unspecified, using default values
  2621                           ;	Write Protection bit
  2622                           ;	WRT0 = 0x1, unprogrammed default
  2623                           ;	Write Protection bit
  2624                           ;	WRT1 = 0x1, unprogrammed default
  2625                           ;	Write Protection bit
  2626                           ;	WRT2 = 0x1, unprogrammed default
  2627                           ;	Write Protection bit
  2628                           ;	WRT3 = 0x1, unprogrammed default
  2629   30000A                     	org	3145738
  2630   30000A  0F                 	db	15
  2631                           
  2632                           ;Config register CONFIG6H @ 0x30000B
  2633                           ;	unspecified, using default values
  2634                           ;	Configuration Register Write Protection bit
  2635                           ;	WRTC = 0x1, unprogrammed default
  2636                           ;	Boot Block Write Protection bit
  2637                           ;	WRTB = 0x1, unprogrammed default
  2638                           ;	Data EEPROM Write Protection bit
  2639                           ;	WRTD = 0x1, unprogrammed default
  2640   30000B                     	org	3145739
  2641   30000B  E0                 	db	224
  2642                           
  2643                           ;Config register CONFIG7L @ 0x30000C
  2644                           ;	unspecified, using default values
  2645                           ;	Table Read Protection bit
  2646                           ;	EBTR0 = 0x1, unprogrammed default
  2647                           ;	Table Read Protection bit
  2648                           ;	EBTR1 = 0x1, unprogrammed default
  2649                           ;	Table Read Protection bit
  2650                           ;	EBTR2 = 0x1, unprogrammed default
  2651                           ;	Table Read Protection bit
  2652                           ;	EBTR3 = 0x1, unprogrammed default
  2653   30000C                     	org	3145740
  2654   30000C  0F                 	db	15
  2655                           
  2656                           ;Config register CONFIG7H @ 0x30000D
  2657                           ;	unspecified, using default values
  2658                           ;	Boot Block Table Read Protection bit
  2659                           ;	EBTRB = 0x1, unprogrammed default
  2660   30000D                     	org	3145741
  2661   30000D  40                 	db	64
  2662                           tosu	equ	0xFFF
  2663                           tosh	equ	0xFFE
  2664                           tosl	equ	0xFFD
  2665                           stkptr	equ	0xFFC
  2666                           pclatu	equ	0xFFB
  2667                           pclath	equ	0xFFA
  2668                           pcl	equ	0xFF9
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           indf0	equ	0xFEF
  2676                           postinc0	equ	0xFEE
  2677                           postdec0	equ	0xFED
  2678                           preinc0	equ	0xFEC
  2679                           plusw0	equ	0xFEB
  2680                           fsr0h	equ	0xFEA
  2681                           fsr0l	equ	0xFE9
  2682                           wreg	equ	0xFE8
  2683                           indf1	equ	0xFE7
  2684                           postinc1	equ	0xFE6
  2685                           postdec1	equ	0xFE5
  2686                           preinc1	equ	0xFE4
  2687                           plusw1	equ	0xFE3
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           bsr	equ	0xFE0
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           preinc2	equ	0xFDC
  2695                           plusw2	equ	0xFDB
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48     104
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_speedup
    _speedup->_clear_cube
    _cubeidle->_clear_cube
    _cubeidle->_lighton
    _srand->_time
    _lighton->___wmul
    _set_plane->___awdiv
    ___awdiv->___awmod
    _clear_cube->___wmul
    ___wmul->___awdiv

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15845
                                             46 COMRAM     2     2      0
                           _cubeidle
                               _init
                          _set_plane
                            _speedup
 ---------------------------------------------------------------------------------
 (1) _speedup                                             15    13      2    6635
                                             31 COMRAM    15    13      2
                            ___awmod
                             ___wmul
                         _clear_cube
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cubeidle                                            12    10      2    8656
                                             31 COMRAM    12    10      2
                         _clear_cube
                            _lighton
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     196
                                              5 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2     174
                                             13 COMRAM     4     2      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _lighton                                              6     2      4    6609
                                             25 COMRAM     6     2      4
                            ___awdiv
                            ___awmod
                             ___wmul
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (2) _set_plane                                            4     2      2     554
                                             19 COMRAM     4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _draw_plane                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2576
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                             11 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _clear_cube                                           6     6      0    1511
                                             25 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1375
                                             19 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _H_ISR                                                5     5      0      30
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cubeidle
     _clear_cube
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _lighton
       ___awdiv
       ___awmod
       ___wmul
       _draw_plane
       _set_plane
         ___awdiv (ARG)
     _srand
       _time (ARG)
     _time
   _init
   _set_plane
   _speedup
     ___awmod
     ___wmul
     _clear_cube
     _draw_plane
     _set_plane

 _H_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      68       1       82.5%
BITBIGSFR_1l        21      0       0      21        0.0%
BITBIGSFR_1hh        E      0       0      20        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRll          9      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRh           5      0       0      22        0.0%
BITBIGSFRlhh         4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      25        0.0%
DATA                 0      0      68      27        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 12 04:14:59 2023

                     l62 0514                       l80 095A                       l73 08E0  
                     l90 039E                       l75 08E8                       l91 0418  
                     l59 09AE                       l76 08F0                       l77 08F8  
                     l78 0900                       l87 08D0                       l79 0908  
                     u15 0422                       u16 0424                       u25 042C  
                     u26 042E                       u35 0436                       u36 0438  
                     u45 0440                       u46 0442                       u55 044A  
                     u56 044C                       u65 0454                       u66 0456  
                     u75 045E                       u76 0460                       u85 0468  
                     u86 046A                       u95 0472                       u96 0474  
           ___awdiv@sign 0049      ___wmul@multiplicand 004E             speedup@j_718 0065  
           speedup@j_719 005B                      l221 0A74                      l168 0208  
                    l177 02F2                      l452 06CA                      l188 0606  
                    l465 077A                      l904 0A4E                      l906 041A  
                    l897 0AA8                      u105 047C                      u106 047E  
                    u115 0486                      u116 0488                      u205 04E0  
                    u125 0490                      u206 04E2                      u126 0492  
                    u215 04EA                      u135 049A                      u216 04EC  
                    u136 049C                      u225 04F4                      u145 04A4  
                    u226 04F6                      u146 04A6                      u235 04FE  
                    u155 04AE                      u236 0500                      u156 04B0  
                    u245 0508                      u165 04B8                      u246 050A  
                    u166 04BA                      u255 0512                      u175 04C2  
                    u256 0514                      u176 04C4                      u185 04CC  
                    u186 04CE                      u195 04D6                      u196 04D8  
                    u810 061A                      u811 0616                      u820 0634  
                    u900 0730                      u821 0630                      u901 072C  
                    u830 065A                      u910 0746                      u831 0656  
                    u911 0742                      u840 0678                      u920 076A  
                    u841 0674                      u921 0766                      u930 08B0  
                    u850 0694                      u931 08AC                      u851 0690  
                    u940 08D0                      u860 06BA                      u941 08CC  
                    u861 06B6                      u870 06DE                      u950 0328  
                    u871 06DA                      u951 0324                      u880 06F8  
                    u960 0A16                      u881 06F4                      u961 0A12  
                    u890 0712                      u891 070E             ___awmod@sign 0043  
                    wreg 000FE8                     l1050 0972                     l1060 09A0  
                   l1052 0974                     l1070 09AA                     l1062 09A2  
                   l1054 0976                     l1046 095C                     l1400 063C  
                   l1072 09AC                     l1064 09A4                     l1056 0978  
                   l1048 0970                     l1410 066A                     l1402 0640  
                   l1066 09A6                     l1058 0982                     l1420 069E  
                   l1412 0678                     l1404 0648                     l1500 0A04  
                   l1068 09A8                     l1422 06A4                     l1414 067E  
                   l1406 065A                     l1502 0A16                     l1416 0694  
                   l1408 0662                     l1424 06AA                     l1440 06EA  
                   l1432 06CC                     l1504 0A3E                     l1426 06BA  
                   l1418 069C                     l1450 0722                     l1442 06F8  
                   l1434 06D0                     l1610 01B4                     l1428 06C2  
                   l1452 0730                     l1460 075A                     l1444 0700  
                   l1436 06DE                     l1372 08D2                     l1508 0A90  
                   l1620 01F0                     l1612 01B8                     l1604 0130  
                   l1382 0A50                     l1470 0832                     l1390 060C  
                   l1462 076A                     l1454 0746                     l1446 0712  
                   l1438 06E6                     l1630 0242                     l1622 01FC  
                   l1606 0180                     l1614 01D4                     l1384 0A6C  
                   l1392 061A                     l1464 0772                     l1456 074E  
                   l1448 071A                     l1800 092C                     l1376 0916  
                   l1640 029E                     l1632 025E                     l1624 0204  
                   l1616 01E0                     l1608 019A                     l1490 08B4  
                   l1482 0856                     l1394 0622                     l1458 0754  
                   l1650 0552                     l1642 02BA                     l1634 026A  
                   l1626 0226                     l1618 01E4                     l1570 002E  
                   l1562 0012                     l1484 0890                     l1476 084E  
                   l1468 0828                     l1396 0626                     l1388 0608  
                   l1492 02F4                     l1660 059E                     l1652 0568  
                   l1636 0284                     l1628 023E                     l1580 0064  
                   l1644 02DA                     l1572 0036                     l1564 0016  
                   l1486 0894                     l1398 0634                     l1494 0314  
                   l1662 05BA                     l1654 0574                     l1646 0516  
                   l1638 0298                     l1590 00D0                     l1582 0078  
                   l1574 003E                     l1566 001E                     l1488 08B0  
                   l1496 0328                     l1664 05CC                     l1656 058C  
                   l1648 054E                     l1592 00EA                     l1576 0046  
                   l1568 0026                     l1498 0414                     l1666 05E0  
                   l1658 059A                     l1594 0104                     l1578 0052  
                   l1770 0784                     l1668 05EE                     l1596 0108  
                   l1588 0080                     l1780 07D4                     l1772 0794  
                   l1598 0128                     l1774 07A4                     l1776 07B4  
                   l1784 07E0                     l1768 077C                     l1778 07C4  
                   l1798 07F6                     u1100 0078                     u1101 0074  
                   u1110 0124                     u1111 0120                     u1200 05CC  
                   u1120 01D4                     u1201 05C8                     u1121 01D0  
                   u1210 0606                     u1130 0226                     u1211 0602  
                   u1131 0222                     u1140 023E                     u1141 023A  
                   u1150 025E                     u1151 025A                     u1160 0284  
                   u1161 0280                     u1170 0298                     u1090 0064  
                   u1171 0294                     u1091 0060                     u1180 02F2  
                   u1181 02EE                     u1190 05BA                     u1191 05B6  
                   u1357 01FE                     u1367 0592                     u1377 05E6  
                   _main 077C                     _init 095C                     _mode 0001  
                   _seed 0035                     _time 0A04                     fsr2h 000FDA  
                   fsr2l 000FD9                     btemp 0069                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ?_main 0039                    ?_init 0039          __end_of___awdiv 06CC  
        __end_of___awmod 077C                    ?_time 003E          ___awdiv@divisor 0046  
                  i2l217 09F2                    i2l218 0A00          ___awdiv@counter 0048  
                  _H_ISR 0008                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lighton 041A                    _plane 0003                    _srand 0A90  
                  time@t 003E          __end_of_speedup 02F4                    ttemp5 006A  
                  ttemp6 006D                    ttemp7 0071                    status 000FD8  
                  wtemp8 006A          __initialization 0A76             __end_of_main 0828  
           __end_of_init 09B0             __end_of_time 0A50                   ??_main 0067  
                 ??_init 003E                   ??_time 0046            __activetblptr 000002  
                 ?_H_ISR 0039                   _ADCON1 000FC1                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0044                   ?_srand 0046  
                 i2l1360 09D4                   i2l1362 09D6                   i2l1354 09B2  
                 i2l1356 09C4                   i2l1358 09CC         __end_of_cubeidle 0608  
                 ___wmul 0A50                ??___awdiv 0048                ??___awmod 0042  
            lighton@prev 0054                   clear_0 0A7C         ___awdiv@quotient 004A  
        ___awmod@divisor 0040                   isa$std 000001          ___awmod@counter 0042  
              ??_lighton 0056                   tblptru 000FF8                   srand@s 0046  
              ??_speedup 005A               __accesstop 0080  __end_of__initialization 0A82  
          ___rparam_used 000001            __end_of_H_ISR 0A04           __pcstackCOMRAM 0039  
          __end_of_srand 0AAA                  ??_H_ISR 0039                  ??_srand 0048  
             _clear_cube 0828                  ?___wmul 004C                  i2u80_40 09F2  
                i2u80_41 09EE                ?_cubeidle 0058               _draw_plane 041A  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0608  
                ___awmod 06CC                  __pcinit 0A76                  __ramtop 0600  
                __ptext0 077C                  __ptext1 0012                  __ptext2 095C  
                __ptext3 0516                  __ptext4 0A04                  __ptext5 0A90  
                __ptext6 02F4                  __ptext7 08D2                  __ptext8 041A  
                __ptext9 06CC                  _lighton 02F4         ___awmod@dividend 003E  
                _speedup 0012               ??_cubeidle 005A           __pintcode_body 09B0  
   end_of_initialization 0A82            __Lmediumconst 0000                  int_func 09B0  
      __end_of_set_plane 095C              ?_clear_cube 0039                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISAbits 000F92  
              _TRISCbits 000F94                _TRISEbits 000F96              ?_draw_plane 0039  
            speedup@dcnt 005D               cubeidle@id 0058           __end_of___wmul 0A76  
    start_initialization 0A76                 ??___wmul 0050              __pbssCOMRAM 0001  
              __pintcode 0008                 ?___awdiv 0044                 ?___awmod 003E  
             H_ISR@value 003B                 ?_lighton 0052                 ?_speedup 0058  
         ___wmul@product 0050                 _LATAbits 000F89                 _LATBbits 000F8A  
               _LATCbits 000F8B               set_plane@a 004C                 _LATDbits 000F8C  
               _LATEbits 000F8D                 _PIE1bits 000F9D             ??_clear_cube 0052  
               _PIR1bits 000F9E                _set_plane 08D2               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0        ___wmul@multiplier 004C               speedup@del 005F  
              cubeidle@i 0062       __end_of_clear_cube 08D2             ??_draw_plane 003E  
               __Hrparam 0000                 __Lrparam 0000               ?_set_plane 004C  
     __end_of_draw_plane 0516                 __ptext10 0608                 __ptext11 0828  
               __ptext12 0A50                 _cubeidle 0516                 isa$xinst 000000  
               int$flags 0069                speedup@id 0058               _INTCONbits 000FF2  
            clear_cube@i 0054              clear_cube@j 0056                 lighton@x 0052  
               intlevel2 0000               _OSCCONbits 000FD3           H_ISR@mapResult 003D  
            ??_set_plane 004E                 speedup@i 0061                 speedup@j 0063  
