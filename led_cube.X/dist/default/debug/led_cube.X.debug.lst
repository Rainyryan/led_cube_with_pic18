

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 12 04:03:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Version 2.40
    33                           ; Generated 04/07/2022 GMT
    34                           ; 
    35                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4520 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   000AAA                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _bounds
    73   000AAA  0066               	dw	102
    74   000AAC  0066               	dw	102
    75   000AAE  0066               	dw	102
    76   000AB0  0066               	dw	102
    77   000AB2  0066               	dw	102
    78   000AB4  0066               	dw	102
    79   000AB6  0066               	dw	102
    80   000AB8  0066               	dw	102
    81   000ABA  0066               	dw	102
    82   000000                     _ADRESL	set	4035
    83   000000                     _ADRESH	set	4036
    84   000000                     _LATBbits	set	3978
    85   000000                     _LATCbits	set	3979
    86   000000                     _ADCON0bits	set	4034
    87   000000                     _TRISCbits	set	3988
    88   000000                     _TRISAbits	set	3986
    89   000000                     _TRISEbits	set	3990
    90   000000                     _LATAbits	set	3977
    91   000000                     _TRISA	set	3986
    92   000000                     _PIR1bits	set	3998
    93   000000                     _PIE1bits	set	3997
    94   000000                     _ADCON2bits	set	4032
    95   000000                     _ADCON1	set	4033
    96   000000                     _OSCCONbits	set	4051
    97   000000                     _INTCONbits	set	4082
    98   000000                     _TRISE	set	3990
    99   000000                     _TRISD	set	3989
   100   000000                     _TRISC	set	3988
   101   000000                     _TRISB	set	3987
   102   000000                     _LATEbits	set	3981
   103   000000                     _LATDbits	set	3980
   104                           
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108   000A30                     __pcinit:
   109                           	callstack 0
   110   000A30                     start_initialization:
   111                           	callstack 0
   112   000A30                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (18 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117   000A30  0EAA               	movlw	low __pidataCOMRAM
   118   000A32  6EF6               	movwf	tblptrl,c
   119   000A34  0E0A               	movlw	high __pidataCOMRAM
   120   000A36  6EF7               	movwf	tblptrh,c
   121   000A38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122   000A3A  6EF8               	movwf	tblptru,c
   123   000A3C  EE00  F067         	lfsr	0,__pdataCOMRAM
   124   000A40  EE10 F012          	lfsr	1,18
   125   000A44                     copy_data0:
   126   000A44  0009               	tblrd		*+
   127   000A46  CFF5 FFEE          	movff	tablat,postinc0
   128   000A4A  50E5               	movf	postdec1,w,c
   129   000A4C  50E1               	movf	fsr1l,w,c
   130   000A4E  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to COMRAM (58 bytes)
   133   000A50  EE00  F001         	lfsr	0,__pbssCOMRAM
   134   000A54  0E3A               	movlw	58
   135   000A56                     clear_0:
   136   000A56  6AEE               	clrf	postinc0,c
   137   000A58  06E8               	decf	wreg,f,c
   138   000A5A  E1FD               	bnz	clear_0
   139   000A5C                     end_of_initialization:
   140                           	callstack 0
   141   000A5C                     __end_of__initialization:
   142                           	callstack 0
   143   000A5C  9079               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144   000A5E  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145   000A60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146   000A62  6EF8               	movwf	tblptru,c
   147   000A64  0100               	movlb	0
   148   000A66  EF0A  F004         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151   000001                     __pbssCOMRAM:
   152                           	callstack 0
   153   000001                     _count:
   154                           	callstack 0
   155   000001                     	ds	2
   156   000003                     _mode:
   157                           	callstack 0
   158   000003                     	ds	2
   159   000005                     _plane:
   160                           	callstack 0
   161   000005                     	ds	50
   162   000037                     _seed:
   163                           	callstack 0
   164   000037                     	ds	4
   165                           
   166                           	psect	dataCOMRAM
   167   000067                     __pdataCOMRAM:
   168                           	callstack 0
   169   000067                     _bounds:
   170                           	callstack 0
   171   000067                     	ds	18
   172                           
   173                           	psect	cstackBANK0
   174   000080                     __pcstackBANK0:
   175                           	callstack 0
   176   000080                     ??_main:
   177                           
   178                           ; 1 bytes @ 0x0
   179   000080                     	ds	2
   180                           
   181                           	psect	cstackCOMRAM
   182   00003B                     __pcstackCOMRAM:
   183                           	callstack 0
   184   00003B                     ??_H_ISR:
   185                           
   186                           ; 1 bytes @ 0x0
   187   00003B                     	ds	2
   188   00003D                     H_ISR@value:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192   00003D                     	ds	2
   193   00003F                     H_ISR@mapResult:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x4
   197   00003F                     	ds	1
   198   000040                     ?___awmod:
   199                           	callstack 0
   200   000040                     ?_time:
   201                           	callstack 0
   202   000040                     ___awmod@dividend:
   203                           	callstack 0
   204   000040                     time@t:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x5
   208   000040                     	ds	2
   209   000042                     ___awmod@divisor:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x7
   213   000042                     	ds	2
   214   000044                     ___awmod@counter:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x9
   218   000044                     	ds	1
   219   000045                     ___awmod@sign:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0xA
   223   000045                     	ds	1
   224   000046                     ?___awdiv:
   225                           	callstack 0
   226   000046                     ___awdiv@dividend:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0xB
   230   000046                     	ds	2
   231   000048                     ___awdiv@divisor:
   232                           	callstack 0
   233   000048                     srand@s:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xD
   237   000048                     	ds	2
   238   00004A                     ??_srand:
   239   00004A                     ___awdiv@counter:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0xF
   243   00004A                     	ds	1
   244   00004B                     ___awdiv@sign:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x10
   248   00004B                     	ds	1
   249   00004C                     ___awdiv@quotient:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x11
   253   00004C                     	ds	2
   254   00004E                     ?___wmul:
   255                           	callstack 0
   256   00004E                     set_plane@a:
   257                           	callstack 0
   258   00004E                     ___wmul@multiplier:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x13
   262   00004E                     	ds	2
   263   000050                     ??_set_plane:
   264   000050                     ___wmul@multiplicand:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x15
   268   000050                     	ds	2
   269   000052                     ___wmul@product:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x17
   273   000052                     	ds	2
   274   000054                     ??_clear_cube:
   275   000054                     lighton@x:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x19
   279   000054                     	ds	2
   280   000056                     clear_cube@i:
   281                           	callstack 0
   282   000056                     lighton@prev:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x1B
   286   000056                     	ds	2
   287   000058                     ??_lighton:
   288   000058                     clear_cube@j:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x1D
   292   000058                     	ds	2
   293   00005A                     ??_speedup:
   294   00005A                     ??_cubeidle:
   295                           
   296                           ; 1 bytes @ 0x1F
   297   00005A                     	ds	1
   298   00005B                     speedup@j_720:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x20
   302   00005B                     	ds	2
   303   00005D                     speedup@dcnt:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x22
   307   00005D                     	ds	2
   308   00005F                     speedup@del:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x24
   312   00005F                     	ds	2
   313   000061                     speedup@i:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x26
   317   000061                     	ds	1
   318   000062                     cubeidle@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x27
   322   000062                     	ds	1
   323   000063                     speedup@j:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x28
   327   000063                     	ds	2
   328   000065                     speedup@j_719:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2A
   332   000065                     	ds	2
   333                           
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 249 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   353 ;;      Params:         0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0
   355 ;;      Temps:          0       2       0       0       0       0       0
   356 ;;      Totals:         0       2       0       0       0       0       0
   357 ;;Total ram usage:        2 bytes
   358 ;; Hardware stack levels required when called: 4
   359 ;; This function calls:
   360 ;;		_cubeidle
   361 ;;		_init
   362 ;;		_set_plane
   363 ;;		_speedup
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370   000814                     __ptext0:
   371                           	callstack 0
   372   000814                     _main:
   373                           	callstack 27
   374   000814                     
   375                           ;main.c: 250:                 set_plane(2);
   376   000814  EC9E  F004         	call	_init	;wreg free
   377   000818  EF34  F004         	goto	l1804
   378   00081C                     l1790:
   379                           
   380                           ; BSR set to: 0
   381                           ;main.c: 260:                 break;
   382   00081C  EC85  F002         	call	_cubeidle	;wreg free
   383                           
   384                           ;main.c: 261:         }
   385   000820  EF34  F004         	goto	l1804
   386   000824                     l1792:
   387                           
   388                           ; BSR set to: 0
   389                           ;main.c: 263:     };
   390   000824  EC09  F000         	call	_speedup	;wreg free
   391                           
   392                           ;main.c: 264:     return;
   393   000828  EF34  F004         	goto	l1804
   394   00082C                     l1794:
   395                           
   396                           ; BSR set to: 0
   397                           ;main.c: 266: 
   398   00082C  0E00               	movlw	0
   399   00082E  6E4F               	movwf	(set_plane@a+1)^0,c
   400   000830  0E02               	movlw	2
   401   000832  6E4E               	movwf	set_plane@a^0,c
   402   000834  EC59  F004         	call	_set_plane	;wreg free
   403                           
   404                           ;main.c: 267: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
   405   000838  EF34  F004         	goto	l1804
   406   00083C                     l1796:
   407                           
   408                           ; BSR set to: 0
   409                           ;main.c: 269:     int value = ((ADRESH<<8) + ADRESL);
   410   00083C  0E00               	movlw	0
   411   00083E  6E4F               	movwf	(set_plane@a+1)^0,c
   412   000840  0E03               	movlw	3
   413   000842  6E4E               	movwf	set_plane@a^0,c
   414   000844  EC59  F004         	call	_set_plane	;wreg free
   415                           
   416                           ;main.c: 270: 
   417   000848  EF34  F004         	goto	l1804
   418   00084C                     l1798:
   419                           
   420                           ; BSR set to: 0
   421                           ;main.c: 272:     unsigned char mapResult = 0;
   422   00084C  0E00               	movlw	0
   423   00084E  6E4F               	movwf	(set_plane@a+1)^0,c
   424   000850  0E04               	movlw	4
   425   000852  6E4E               	movwf	set_plane@a^0,c
   426   000854  EC59  F004         	call	_set_plane	;wreg free
   427                           
   428                           ;main.c: 273: 
   429   000858  EF34  F004         	goto	l1804
   430   00085C                     l1800:
   431                           
   432                           ; BSR set to: 0
   433                           ;main.c: 275:         value -= 205;
   434   00085C  0E00               	movlw	0
   435   00085E  6E4F               	movwf	(set_plane@a+1)^0,c
   436   000860  0E00               	movlw	0
   437   000862  6E4E               	movwf	set_plane@a^0,c
   438   000864  EC59  F004         	call	_set_plane	;wreg free
   439   000868                     l1804:
   440   000868  C003  F080         	movff	_mode,??_main
   441   00086C  C004  F081         	movff	_mode+1,??_main+1
   442                           
   443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   444                           ; Switch size 1, requested type "simple"
   445                           ; Number of cases is 1, Range of values is 0 to 0
   446                           ; switch strategies available:
   447                           ; Name         Instructions Cycles
   448                           ; simple_byte            4     3 (average)
   449                           ;	Chosen strategy is simple_byte
   450   000870  0100               	movlb	0	; () banked
   451   000872  5181               	movf	(??_main+1)& (0+255),w,b
   452   000874  0A00               	xorlw	0	; case 0
   453   000876  B4D8               	btfsc	status,2,c
   454   000878  EF40  F004         	goto	l1850
   455   00087C  EF2E  F004         	goto	l1800
   456   000880                     l1850:
   457                           
   458                           ; BSR set to: 0
   459                           ; Switch size 1, requested type "simple"
   460                           ; Number of cases is 5, Range of values is 0 to 4
   461                           ; switch strategies available:
   462                           ; Name         Instructions Cycles
   463                           ; simple_byte           16     9 (average)
   464                           ;	Chosen strategy is simple_byte
   465   000880  5180               	movf	??_main& (0+255),w,b
   466   000882  0A00               	xorlw	0	; case 0
   467   000884  B4D8               	btfsc	status,2,c
   468   000886  EF0E  F004         	goto	l1790
   469   00088A  0A01               	xorlw	1	; case 1
   470   00088C  B4D8               	btfsc	status,2,c
   471   00088E  EF12  F004         	goto	l1792
   472   000892  0A03               	xorlw	3	; case 2
   473   000894  B4D8               	btfsc	status,2,c
   474   000896  EF16  F004         	goto	l1794
   475   00089A  0A01               	xorlw	1	; case 3
   476   00089C  B4D8               	btfsc	status,2,c
   477   00089E  EF1E  F004         	goto	l1796
   478   0008A2  0A07               	xorlw	7	; case 4
   479   0008A4  B4D8               	btfsc	status,2,c
   480   0008A6  EF26  F004         	goto	l1798
   481   0008AA  EF2E  F004         	goto	l1800
   482   0008AE  EF07  F000         	goto	start
   483   0008B2                     __end_of_main:
   484                           	callstack 0
   485                           
   486 ;; *************** function _speedup *****************
   487 ;; Defined at:
   488 ;;		line 192 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  j               2   42[COMRAM] int 
   493 ;;  j               2   40[COMRAM] int 
   494 ;;  j               2   32[COMRAM] int 
   495 ;;  i               2   38[COMRAM] int 
   496 ;;  del             2   36[COMRAM] int 
   497 ;;  dcnt            2   34[COMRAM] int 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   507 ;;      Params:         0       0       0       0       0       0       0
   508 ;;      Locals:        12       0       0       0       0       0       0
   509 ;;      Temps:          1       0       0       0       0       0       0
   510 ;;      Totals:        13       0       0       0       0       0       0
   511 ;;Total ram usage:       13 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 3
   514 ;; This function calls:
   515 ;;		___awmod
   516 ;;		___wmul
   517 ;;		_clear_cube
   518 ;;		_draw_plane
   519 ;;		_set_plane
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text1
   526   000012                     __ptext1:
   527                           	callstack 0
   528   000012                     _speedup:
   529                           	callstack 27
   530   000012                     
   531                           ;main.c: 193:                 plane[j][0] = 0;
   532   000012  ECB5  F003         	call	_clear_cube	;wreg free
   533   000016                     
   534                           ;main.c: 194:                 plane[j][4] = 0;
   535   000016  0E00               	movlw	0
   536   000018  6E62               	movwf	(speedup@i+1)^0,c
   537   00001A  0E00               	movlw	0
   538   00001C  6E61               	movwf	speedup@i^0,c
   539   00001E  0E00               	movlw	0
   540   000020  6E5E               	movwf	(speedup@dcnt+1)^0,c
   541   000022  0E00               	movlw	0
   542   000024  6E5D               	movwf	speedup@dcnt^0,c
   543   000026  0E00               	movlw	0
   544   000028  6E60               	movwf	(speedup@del+1)^0,c
   545   00002A  0E32               	movlw	50
   546   00002C  6E5F               	movwf	speedup@del^0,c
   547   00002E                     
   548                           ;main.c: 195:                 plane[0][j] = 0;
   549   00002E  0E00               	movlw	0
   550   000030  6E06               	movwf	(_plane+1)^0,c
   551   000032  0E01               	movlw	1
   552   000034  6E05               	movwf	_plane^0,c
   553   000036                     
   554                           ;main.c: 196:                 plane[4][j] = 0;
   555   000036  0E00               	movlw	0
   556   000038  6E0E               	movwf	(_plane+9)^0,c
   557   00003A  0E01               	movlw	1
   558   00003C  6E0D               	movwf	(_plane+8)^0,c
   559   00003E                     
   560                           ;main.c: 197:             }
   561   00003E  0E00               	movlw	0
   562   000040  6E2E               	movwf	(_plane+41)^0,c
   563   000042  0E01               	movlw	1
   564   000044  6E2D               	movwf	(_plane+40)^0,c
   565   000046                     
   566                           ;main.c: 198:         }
   567   000046  0E00               	movlw	0
   568   000048  6E36               	movwf	(_plane+49)^0,c
   569   00004A  0E01               	movlw	1
   570   00004C  6E35               	movwf	(_plane+48)^0,c
   571                           
   572                           ;main.c: 199: 
   573   00004E  EF6A  F001         	goto	l1638
   574   000052                     l1572:
   575                           
   576                           ;main.c: 200:         set_plane(5);
   577   000052  5061               	movf	speedup@i^0,w,c
   578   000054  1062               	iorwf	(speedup@i+1)^0,w,c
   579   000056  B4D8               	btfsc	status,2,c
   580   000058  EF30  F000         	goto	u1081
   581   00005C  EF32  F000         	goto	u1080
   582   000060                     u1081:
   583   000060  EF3C  F000         	goto	l1576
   584   000064                     u1080:
   585   000064  0E04               	movlw	4
   586   000066  1861               	xorwf	speedup@i^0,w,c
   587   000068  1062               	iorwf	(speedup@i+1)^0,w,c
   588   00006A  A4D8               	btfss	status,2,c
   589   00006C  EF3A  F000         	goto	u1091
   590   000070  EF3C  F000         	goto	u1090
   591   000074                     u1091:
   592   000074  EF94  F000         	goto	l1592
   593   000078                     u1090:
   594   000078                     l1576:
   595                           
   596                           ;main.c: 201:         draw_plane();
   597   000078  0E00               	movlw	0
   598   00007A  6E64               	movwf	(speedup@j+1)^0,c
   599   00007C  0E01               	movlw	1
   600   00007E  6E63               	movwf	speedup@j^0,c
   601   000080                     l1582:
   602                           
   603                           ;main.c: 202:         set_plane(i);
   604   000080  C063  F04E         	movff	speedup@j,___wmul@multiplier
   605   000084  C064  F04F         	movff	speedup@j+1,___wmul@multiplier+1
   606   000088  0E00               	movlw	0
   607   00008A  6E51               	movwf	(___wmul@multiplicand+1)^0,c
   608   00008C  0E0A               	movlw	10
   609   00008E  6E50               	movwf	___wmul@multiplicand^0,c
   610   000090  EC35  F005         	call	___wmul	;wreg free
   611   000094  0E05               	movlw	low _plane
   612   000096  244E               	addwf	?___wmul^0,w,c
   613   000098  6ED9               	movwf	fsr2l,c
   614   00009A  0E00               	movlw	high _plane
   615   00009C  204F               	addwfc	(?___wmul+1)^0,w,c
   616   00009E  6EDA               	movwf	fsr2h,c
   617   0000A0  0E01               	movlw	1
   618   0000A2  6EDE               	movwf	postinc2,c
   619   0000A4  0E00               	movlw	0
   620   0000A6  6EDD               	movwf	postdec2,c
   621                           
   622                           ;main.c: 203:         for(int j=0;j<del && mode == 1;j++)_delay((unsigned long)((1)*(400
      +                          0000/4000.0)));
   623   0000A8  C063  F04E         	movff	speedup@j,___wmul@multiplier
   624   0000AC  C064  F04F         	movff	speedup@j+1,___wmul@multiplier+1
   625   0000B0  0E00               	movlw	0
   626   0000B2  6E51               	movwf	(___wmul@multiplicand+1)^0,c
   627   0000B4  0E0A               	movlw	10
   628   0000B6  6E50               	movwf	___wmul@multiplicand^0,c
   629   0000B8  EC35  F005         	call	___wmul	;wreg free
   630   0000BC  0E0D               	movlw	low (_plane+8)
   631   0000BE  244E               	addwf	?___wmul^0,w,c
   632   0000C0  6ED9               	movwf	fsr2l,c
   633   0000C2  0E00               	movlw	high (_plane+8)
   634   0000C4  204F               	addwfc	(?___wmul+1)^0,w,c
   635   0000C6  6EDA               	movwf	fsr2h,c
   636   0000C8  0E01               	movlw	1
   637   0000CA  6EDE               	movwf	postinc2,c
   638   0000CC  0E00               	movlw	0
   639   0000CE  6EDD               	movwf	postdec2,c
   640   0000D0                     
   641                           ;main.c: 204:         dcnt++;
   642   0000D0  90D8               	bcf	status,0,c
   643   0000D2  3463               	rlcf	speedup@j^0,w,c
   644   0000D4  6ED9               	movwf	fsr2l,c
   645   0000D6  3464               	rlcf	(speedup@j+1)^0,w,c
   646   0000D8  6EDA               	movwf	fsr2h,c
   647   0000DA  0E05               	movlw	low _plane
   648   0000DC  26D9               	addwf	fsr2l,f,c
   649   0000DE  0E00               	movlw	high _plane
   650   0000E0  22DA               	addwfc	fsr2h,f,c
   651   0000E2  0E01               	movlw	1
   652   0000E4  6EDE               	movwf	postinc2,c
   653   0000E6  0E00               	movlw	0
   654   0000E8  6EDD               	movwf	postdec2,c
   655   0000EA                     
   656                           ;main.c: 205:         if(del>10)del-=2;
   657   0000EA  90D8               	bcf	status,0,c
   658   0000EC  3463               	rlcf	speedup@j^0,w,c
   659   0000EE  6ED9               	movwf	fsr2l,c
   660   0000F0  3464               	rlcf	(speedup@j+1)^0,w,c
   661   0000F2  6EDA               	movwf	fsr2h,c
   662   0000F4  0E2D               	movlw	low (_plane+40)
   663   0000F6  26D9               	addwf	fsr2l,f,c
   664   0000F8  0E00               	movlw	high (_plane+40)
   665   0000FA  22DA               	addwfc	fsr2h,f,c
   666   0000FC  0E01               	movlw	1
   667   0000FE  6EDE               	movwf	postinc2,c
   668   000100  0E00               	movlw	0
   669   000102  6EDD               	movwf	postdec2,c
   670   000104                     
   671                           ;main.c: 206:         else if(del>0 && dcnt == 10)del-=1;
   672   000104  4A63               	infsnz	speedup@j^0,f,c
   673   000106  2A64               	incf	(speedup@j+1)^0,f,c
   674   000108  BE64               	btfsc	(speedup@j+1)^0,7,c
   675   00010A  EF90  F000         	goto	u1101
   676   00010E  5064               	movf	(speedup@j+1)^0,w,c
   677   000110  E109               	bnz	u1100
   678   000112  0E04               	movlw	4
   679   000114  5C63               	subwf	speedup@j^0,w,c
   680   000116  A0D8               	btfss	status,0,c
   681   000118  EF90  F000         	goto	u1101
   682   00011C  EF92  F000         	goto	u1100
   683   000120                     u1101:
   684   000120  EF40  F000         	goto	l1582
   685   000124                     u1100:
   686   000124  EFEA  F000         	goto	l1608
   687   000128                     l1592:
   688                           
   689                           ;main.c: 208:         i++;
   690   000128  0E00               	movlw	0
   691   00012A  6E66               	movwf	(speedup@j_719+1)^0,c
   692   00012C  0E01               	movlw	1
   693   00012E  6E65               	movwf	speedup@j_719^0,c
   694   000130                     l1598:
   695                           
   696                           ;main.c: 209:         i%=5;
   697   000130  C065  F04E         	movff	speedup@j_719,___wmul@multiplier
   698   000134  C066  F04F         	movff	speedup@j_719+1,___wmul@multiplier+1
   699   000138  0E00               	movlw	0
   700   00013A  6E51               	movwf	(___wmul@multiplicand+1)^0,c
   701   00013C  0E0A               	movlw	10
   702   00013E  6E50               	movwf	___wmul@multiplicand^0,c
   703   000140  EC35  F005         	call	___wmul	;wreg free
   704   000144  0E05               	movlw	low _plane
   705   000146  244E               	addwf	?___wmul^0,w,c
   706   000148  6ED9               	movwf	fsr2l,c
   707   00014A  0E00               	movlw	high _plane
   708   00014C  204F               	addwfc	(?___wmul+1)^0,w,c
   709   00014E  6EDA               	movwf	fsr2h,c
   710   000150  0E00               	movlw	0
   711   000152  6EDE               	movwf	postinc2,c
   712   000154  0E00               	movlw	0
   713   000156  6EDD               	movwf	postdec2,c
   714                           
   715                           ;main.c: 210:     }
   716   000158  C065  F04E         	movff	speedup@j_719,___wmul@multiplier
   717   00015C  C066  F04F         	movff	speedup@j_719+1,___wmul@multiplier+1
   718   000160  0E00               	movlw	0
   719   000162  6E51               	movwf	(___wmul@multiplicand+1)^0,c
   720   000164  0E0A               	movlw	10
   721   000166  6E50               	movwf	___wmul@multiplicand^0,c
   722   000168  EC35  F005         	call	___wmul	;wreg free
   723   00016C  0E0D               	movlw	low (_plane+8)
   724   00016E  244E               	addwf	?___wmul^0,w,c
   725   000170  6ED9               	movwf	fsr2l,c
   726   000172  0E00               	movlw	high (_plane+8)
   727   000174  204F               	addwfc	(?___wmul+1)^0,w,c
   728   000176  6EDA               	movwf	fsr2h,c
   729   000178  0E00               	movlw	0
   730   00017A  6EDE               	movwf	postinc2,c
   731   00017C  0E00               	movlw	0
   732   00017E  6EDD               	movwf	postdec2,c
   733   000180                     
   734                           ;main.c: 211: }
   735   000180  90D8               	bcf	status,0,c
   736   000182  3465               	rlcf	speedup@j_719^0,w,c
   737   000184  6ED9               	movwf	fsr2l,c
   738   000186  3466               	rlcf	(speedup@j_719+1)^0,w,c
   739   000188  6EDA               	movwf	fsr2h,c
   740   00018A  0E05               	movlw	low _plane
   741   00018C  26D9               	addwf	fsr2l,f,c
   742   00018E  0E00               	movlw	high _plane
   743   000190  22DA               	addwfc	fsr2h,f,c
   744   000192  0E00               	movlw	0
   745   000194  6EDE               	movwf	postinc2,c
   746   000196  0E00               	movlw	0
   747   000198  6EDD               	movwf	postdec2,c
   748   00019A                     
   749                           ;main.c: 212: 
   750   00019A  90D8               	bcf	status,0,c
   751   00019C  3465               	rlcf	speedup@j_719^0,w,c
   752   00019E  6ED9               	movwf	fsr2l,c
   753   0001A0  3466               	rlcf	(speedup@j_719+1)^0,w,c
   754   0001A2  6EDA               	movwf	fsr2h,c
   755   0001A4  0E2D               	movlw	low (_plane+40)
   756   0001A6  26D9               	addwf	fsr2l,f,c
   757   0001A8  0E00               	movlw	high (_plane+40)
   758   0001AA  22DA               	addwfc	fsr2h,f,c
   759   0001AC  0E00               	movlw	0
   760   0001AE  6EDE               	movwf	postinc2,c
   761   0001B0  0E00               	movlw	0
   762   0001B2  6EDD               	movwf	postdec2,c
   763   0001B4                     
   764                           ;main.c: 213: void cubeidle(){
   765   0001B4  4A65               	infsnz	speedup@j_719^0,f,c
   766   0001B6  2A66               	incf	(speedup@j_719+1)^0,f,c
   767   0001B8  BE66               	btfsc	(speedup@j_719+1)^0,7,c
   768   0001BA  EFE8  F000         	goto	u1111
   769   0001BE  5066               	movf	(speedup@j_719+1)^0,w,c
   770   0001C0  E109               	bnz	u1110
   771   0001C2  0E04               	movlw	4
   772   0001C4  5C65               	subwf	speedup@j_719^0,w,c
   773   0001C6  A0D8               	btfss	status,0,c
   774   0001C8  EFE8  F000         	goto	u1111
   775   0001CC  EFEA  F000         	goto	u1110
   776   0001D0                     u1111:
   777   0001D0  EF98  F000         	goto	l1598
   778   0001D4                     u1110:
   779   0001D4                     l1608:
   780                           
   781                           ;main.c: 216:     lighton(0,-1);
   782   0001D4  0E00               	movlw	0
   783   0001D6  6E4F               	movwf	(set_plane@a+1)^0,c
   784   0001D8  0E05               	movlw	5
   785   0001DA  6E4E               	movwf	set_plane@a^0,c
   786   0001DC  EC59  F004         	call	_set_plane	;wreg free
   787   0001E0                     
   788                           ;main.c: 217:     while(mode == 0){
   789   0001E0  EC07  F002         	call	_draw_plane	;wreg free
   790   0001E4                     
   791                           ;main.c: 218:         for(int i=1;i<125 && mode == 0;i++){
   792   0001E4  C061  F04E         	movff	speedup@i,set_plane@a
   793   0001E8  C062  F04F         	movff	speedup@i+1,set_plane@a+1
   794   0001EC  EC59  F004         	call	_set_plane	;wreg free
   795   0001F0                     
   796                           ;main.c: 219:             lighton(i,i-1);
   797   0001F0  0E00               	movlw	0
   798   0001F2  6E5C               	movwf	(speedup@j_720+1)^0,c
   799   0001F4  0E00               	movlw	0
   800   0001F6  6E5B               	movwf	speedup@j_720^0,c
   801   0001F8  EF04  F001         	goto	l172
   802   0001FC                     l1616:
   803   0001FC  0EC8               	movlw	200
   804   0001FE                     u1337:
   805   0001FE  D000               	nop2	
   806   000200  2EE8               	decfsz	wreg,f,c
   807   000202  D7FD               	bra	u1337
   808   000204  4A5B               	infsnz	speedup@j_720^0,f,c
   809   000206  2A5C               	incf	(speedup@j_720+1)^0,f,c
   810   000208                     l172:
   811   000208  505F               	movf	speedup@del^0,w,c
   812   00020A  5C5B               	subwf	speedup@j_720^0,w,c
   813   00020C  505C               	movf	(speedup@j_720+1)^0,w,c
   814   00020E  0A80               	xorlw	128
   815   000210  6E5A               	movwf	??_speedup^0,c
   816   000212  5060               	movf	(speedup@del+1)^0,w,c
   817   000214  0A80               	xorlw	128
   818   000216  585A               	subwfb	??_speedup^0,w,c
   819   000218  B0D8               	btfsc	status,0,c
   820   00021A  EF11  F001         	goto	u1121
   821   00021E  EF13  F001         	goto	u1120
   822   000222                     u1121:
   823   000222  EF1C  F001         	goto	l1622
   824   000226                     u1120:
   825   000226  0403               	decf	_mode^0,w,c
   826   000228  1004               	iorwf	(_mode+1)^0,w,c
   827   00022A  B4D8               	btfsc	status,2,c
   828   00022C  EF1A  F001         	goto	u1131
   829   000230  EF1C  F001         	goto	u1130
   830   000234                     u1131:
   831   000234  EFFE  F000         	goto	l1616
   832   000238                     u1130:
   833   000238                     l1622:
   834                           
   835                           ;main.c: 220:             _delay((unsigned long)((10)*(4000000/4000.0)));
   836   000238  4A5D               	infsnz	speedup@dcnt^0,f,c
   837   00023A  2A5E               	incf	(speedup@dcnt+1)^0,f,c
   838   00023C                     
   839                           ;main.c: 221:         }
   840   00023C  BE60               	btfsc	(speedup@del+1)^0,7,c
   841   00023E  EF2A  F001         	goto	u1141
   842   000242  5060               	movf	(speedup@del+1)^0,w,c
   843   000244  E109               	bnz	u1140
   844   000246  0E0B               	movlw	11
   845   000248  5C5F               	subwf	speedup@del^0,w,c
   846   00024A  A0D8               	btfss	status,0,c
   847   00024C  EF2A  F001         	goto	u1141
   848   000250  EF2C  F001         	goto	u1140
   849   000254                     u1141:
   850   000254  EF32  F001         	goto	l1628
   851   000258                     u1140:
   852   000258  0EFE               	movlw	254
   853   00025A  265F               	addwf	speedup@del^0,f,c
   854   00025C  0EFF               	movlw	255
   855   00025E  2260               	addwfc	(speedup@del+1)^0,f,c
   856   000260  EF4C  F001         	goto	l1634
   857   000264                     l1628:
   858   000264  BE60               	btfsc	(speedup@del+1)^0,7,c
   859   000266  EF3D  F001         	goto	u1151
   860   00026A  5060               	movf	(speedup@del+1)^0,w,c
   861   00026C  E108               	bnz	u1150
   862   00026E  045F               	decf	speedup@del^0,w,c
   863   000270  A0D8               	btfss	status,0,c
   864   000272  EF3D  F001         	goto	u1151
   865   000276  EF3F  F001         	goto	u1150
   866   00027A                     u1151:
   867   00027A  EF4C  F001         	goto	l1634
   868   00027E                     u1150:
   869   00027E  0E0A               	movlw	10
   870   000280  185D               	xorwf	speedup@dcnt^0,w,c
   871   000282  105E               	iorwf	(speedup@dcnt+1)^0,w,c
   872   000284  A4D8               	btfss	status,2,c
   873   000286  EF47  F001         	goto	u1161
   874   00028A  EF49  F001         	goto	u1160
   875   00028E                     u1161:
   876   00028E  EF4C  F001         	goto	l1634
   877   000292                     u1160:
   878   000292  065F               	decf	speedup@del^0,f,c
   879   000294  A0D8               	btfss	status,0,c
   880   000296  0660               	decf	(speedup@del+1)^0,f,c
   881   000298                     l1634:
   882                           
   883                           ;main.c: 223:         _delay((unsigned long)((2)*(4000000/4000.0)));
   884   000298  C05D  F040         	movff	speedup@dcnt,___awmod@dividend
   885   00029C  C05E  F041         	movff	speedup@dcnt+1,___awmod@dividend+1
   886   0002A0  0E00               	movlw	0
   887   0002A2  6E43               	movwf	(___awmod@divisor+1)^0,c
   888   0002A4  0E0A               	movlw	10
   889   0002A6  6E42               	movwf	___awmod@divisor^0,c
   890   0002A8  EC5D  F003         	call	___awmod	;wreg free
   891   0002AC  C040  F05D         	movff	?___awmod,speedup@dcnt
   892   0002B0  C041  F05E         	movff	?___awmod+1,speedup@dcnt+1
   893   0002B4                     
   894                           ;main.c: 224:     }
   895   0002B4  4A61               	infsnz	speedup@i^0,f,c
   896   0002B6  2A62               	incf	(speedup@i+1)^0,f,c
   897                           
   898                           ;main.c: 225: 
   899   0002B8  C061  F040         	movff	speedup@i,___awmod@dividend
   900   0002BC  C062  F041         	movff	speedup@i+1,___awmod@dividend+1
   901   0002C0  0E00               	movlw	0
   902   0002C2  6E43               	movwf	(___awmod@divisor+1)^0,c
   903   0002C4  0E05               	movlw	5
   904   0002C6  6E42               	movwf	___awmod@divisor^0,c
   905   0002C8  EC5D  F003         	call	___awmod	;wreg free
   906   0002CC  C040  F061         	movff	?___awmod,speedup@i
   907   0002D0  C041  F062         	movff	?___awmod+1,speedup@i+1
   908   0002D4                     l1638:
   909                           
   910                           ;main.c: 199: 
   911   0002D4  0403               	decf	_mode^0,w,c
   912   0002D6  1004               	iorwf	(_mode+1)^0,w,c
   913   0002D8  B4D8               	btfsc	status,2,c
   914   0002DA  EF71  F001         	goto	u1171
   915   0002DE  EF73  F001         	goto	u1170
   916   0002E2                     u1171:
   917   0002E2  EF29  F000         	goto	l1572
   918   0002E6                     u1170:
   919   0002E6  0012               	return		;funcret
   920   0002E8                     __end_of_speedup:
   921                           	callstack 0
   922                           
   923 ;; *************** function _init *****************
   924 ;; Defined at:
   925 ;;		line 22 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   939 ;;      Params:         0       0       0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text2
   954   00093C                     __ptext2:
   955                           	callstack 0
   956   00093C                     _init:
   957                           	callstack 29
   958   00093C                     
   959                           ;main.c: 23:     ADCON2bits.ACQT = 0b010;
   960   00093C  0E00               	movlw	0
   961   00093E  6E92               	movwf	146,c	;volatile
   962                           
   963                           ;main.c: 24:     ADCON0bits.ADON = 1;
   964   000940  0E00               	movlw	0
   965   000942  6E93               	movwf	147,c	;volatile
   966                           
   967                           ;main.c: 25:     ADCON2bits.ADFM = 1;
   968   000944  0E00               	movlw	0
   969   000946  6E94               	movwf	148,c	;volatile
   970                           
   971                           ;main.c: 26: 
   972   000948  0E00               	movlw	0
   973   00094A  6E95               	movwf	149,c	;volatile
   974                           
   975                           ;main.c: 27:     PIE1bits.ADIE = 1;
   976   00094C  0E00               	movlw	0
   977   00094E  6E96               	movwf	150,c	;volatile
   978   000950                     
   979                           ;main.c: 28: 
   980   000950  8296               	bsf	150,1,c	;volatile
   981   000952                     
   982                           ;main.c: 29:     PIR1bits.ADIF = 0;
   983   000952  8496               	bsf	150,2,c	;volatile
   984   000954                     
   985                           ;main.c: 30: 
   986   000954  8E92               	bsf	146,7,c	;volatile
   987   000956                     
   988                           ;main.c: 31:     INTCONbits.PEIE = 1;
   989   000956  8C92               	bsf	146,6,c	;volatile
   990   000958                     
   991                           ;main.c: 32: 
   992   000958  8094               	bsf	148,0,c	;volatile
   993                           
   994                           ;main.c: 34:     ADCON0bits.GO = 1;
   995   00095A  50D3               	movf	211,w,c	;volatile
   996   00095C  0B8F               	andlw	-113
   997   00095E  0960               	iorlw	96
   998   000960  6ED3               	movwf	211,c	;volatile
   999   000962                     
  1000                           ;main.c: 35: }
  1001   000962  8A92               	bsf	146,5,c	;volatile
  1002                           
  1003                           ;main.c: 36: 
  1004   000964  0E09               	movlw	9
  1005   000966  6EC1               	movwf	193,c	;volatile
  1006                           
  1007                           ;main.c: 37: void draw_plane(){
  1008   000968  50C2               	movf	194,w,c	;volatile
  1009   00096A  0BC3               	andlw	-61
  1010   00096C  0914               	iorlw	20
  1011   00096E  6EC2               	movwf	194,c	;volatile
  1012                           
  1013                           ;main.c: 38:     LATAbits.LA0 = plane[0][0];
  1014   000970  50C0               	movf	192,w,c	;volatile
  1015   000972  0BF8               	andlw	-8
  1016   000974  0904               	iorlw	4
  1017   000976  6EC0               	movwf	192,c	;volatile
  1018                           
  1019                           ;main.c: 39:     LATAbits.LA1 = plane[0][1];
  1020   000978  50C0               	movf	192,w,c	;volatile
  1021   00097A  0BC7               	andlw	-57
  1022   00097C  0910               	iorlw	16
  1023   00097E  6EC0               	movwf	192,c	;volatile
  1024   000980                     
  1025                           ;main.c: 40:     LATAbits.LA2 = plane[0][2];
  1026   000980  80C2               	bsf	194,0,c	;volatile
  1027   000982                     
  1028                           ;main.c: 41:     LATAbits.LA3 = plane[0][3];
  1029   000982  8EC0               	bsf	192,7,c	;volatile
  1030   000984                     
  1031                           ;main.c: 43: 
  1032   000984  8C9D               	bsf	157,6,c	;volatile
  1033   000986                     
  1034                           ;main.c: 45:     LATCbits.LC2 = plane[1][1];
  1035   000986  9C9E               	bcf	158,6,c	;volatile
  1036   000988                     
  1037                           ;main.c: 47:     LATDbits.LD0 = plane[1][3];
  1038   000988  8CF2               	bsf	242,6,c	;volatile
  1039   00098A                     
  1040                           ;main.c: 49: 
  1041   00098A  8EF2               	bsf	242,7,c	;volatile
  1042   00098C                     
  1043                           ;main.c: 50:     LATBbits.LB0 = plane[2][0];
  1044   00098C  82C2               	bsf	194,1,c	;volatile
  1045   00098E  0012               	return		;funcret
  1046   000990                     __end_of_init:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _cubeidle *****************
  1050 ;; Defined at:
  1051 ;;		line 229 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  i               2   39[COMRAM] int 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1065 ;;      Params:         0       0       0       0       0       0       0
  1066 ;;      Locals:         2       0       0       0       0       0       0
  1067 ;;      Temps:          8       0       0       0       0       0       0
  1068 ;;      Totals:        10       0       0       0       0       0       0
  1069 ;;Total ram usage:       10 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 3
  1072 ;; This function calls:
  1073 ;;		_clear_cube
  1074 ;;		_lighton
  1075 ;;		_srand
  1076 ;;		_time
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text3
  1083   00050A                     __ptext3:
  1084                           	callstack 0
  1085   00050A                     _cubeidle:
  1086                           	callstack 27
  1087   00050A                     
  1088                           ;main.c: 230: 
  1089   00050A  0E00               	movlw	0
  1090   00050C  6E40               	movwf	time@t^0,c
  1091   00050E  0E00               	movlw	0
  1092   000510  6E41               	movwf	(time@t+1)^0,c
  1093   000512  ECF2  F004         	call	_time	;wreg free
  1094   000516  C040  F05A         	movff	?_time,??_cubeidle
  1095   00051A  C041  F05B         	movff	?_time+1,??_cubeidle+1
  1096   00051E  C042  F05C         	movff	?_time+2,??_cubeidle+2
  1097   000522  C043  F05D         	movff	?_time+3,??_cubeidle+3
  1098   000526  C044  F05E         	movff	?_time+4,??_cubeidle+4
  1099   00052A  C045  F05F         	movff	?_time+5,??_cubeidle+5
  1100   00052E  C046  F060         	movff	?_time+6,??_cubeidle+6
  1101   000532  C047  F061         	movff	?_time+7,??_cubeidle+7
  1102   000536  C05A  F048         	movff	??_cubeidle,srand@s
  1103   00053A  C05B  F049         	movff	??_cubeidle+1,srand@s+1
  1104   00053E  EC48  F005         	call	_srand	;wreg free
  1105   000542                     
  1106                           ;main.c: 231: }
  1107   000542  ECB5  F003         	call	_clear_cube	;wreg free
  1108   000546                     
  1109                           ;main.c: 232: 
  1110   000546  0E00               	movlw	0
  1111   000548  6E55               	movwf	(lighton@x+1)^0,c
  1112   00054A  0E00               	movlw	0
  1113   00054C  6E54               	movwf	lighton@x^0,c
  1114   00054E  0EFF               	movlw	255
  1115   000550  6E57               	movwf	(lighton@prev+1)^0,c
  1116   000552  6856               	setf	lighton@prev^0,c
  1117   000554  EC74  F001         	call	_lighton	;wreg free
  1118                           
  1119                           ;main.c: 233: void main(void) {
  1120   000558  EFF1  F002         	goto	l1662
  1121   00055C                     l1646:
  1122                           
  1123                           ;main.c: 234:     init();
  1124   00055C  0E00               	movlw	0
  1125   00055E  6E63               	movwf	(cubeidle@i+1)^0,c
  1126   000560  0E01               	movlw	1
  1127   000562  6E62               	movwf	cubeidle@i^0,c
  1128   000564  EFC9  F002         	goto	l1654
  1129   000568                     l1648:
  1130                           
  1131                           ;main.c: 235: 
  1132   000568  C062  F054         	movff	cubeidle@i,lighton@x
  1133   00056C  C063  F055         	movff	cubeidle@i+1,lighton@x+1
  1134   000570  0EFF               	movlw	255
  1135   000572  2462               	addwf	cubeidle@i^0,w,c
  1136   000574  6E56               	movwf	lighton@prev^0,c
  1137   000576  0EFF               	movlw	255
  1138   000578  2063               	addwfc	(cubeidle@i+1)^0,w,c
  1139   00057A  6E57               	movwf	(lighton@prev+1)^0,c
  1140   00057C  EC74  F001         	call	_lighton	;wreg free
  1141   000580                     
  1142                           ;main.c: 236: 
  1143   000580  0E0D               	movlw	13
  1144   000582  6E5A               	movwf	??_cubeidle^0,c
  1145   000584  0EFC               	movlw	252
  1146   000586                     u1347:
  1147   000586  2EE8               	decfsz	wreg,f,c
  1148   000588  D7FE               	bra	u1347
  1149   00058A  2E5A               	decfsz	??_cubeidle^0,f,c
  1150   00058C  D7FC               	bra	u1347
  1151   00058E                     
  1152                           ;main.c: 237: 
  1153   00058E  4A62               	infsnz	cubeidle@i^0,f,c
  1154   000590  2A63               	incf	(cubeidle@i+1)^0,f,c
  1155   000592                     l1654:
  1156   000592  BE63               	btfsc	(cubeidle@i+1)^0,7,c
  1157   000594  EFD7  F002         	goto	u1180
  1158   000598  5063               	movf	(cubeidle@i+1)^0,w,c
  1159   00059A  E107               	bnz	u1181
  1160   00059C  0E7D               	movlw	125
  1161   00059E  5C62               	subwf	cubeidle@i^0,w,c
  1162   0005A0  B0D8               	btfsc	status,0,c
  1163   0005A2  EFD5  F002         	goto	u1181
  1164   0005A6  EFD7  F002         	goto	u1180
  1165   0005AA                     u1181:
  1166   0005AA  EFE0  F002         	goto	l1658
  1167   0005AE                     u1180:
  1168   0005AE  5003               	movf	_mode^0,w,c
  1169   0005B0  1004               	iorwf	(_mode+1)^0,w,c
  1170   0005B2  B4D8               	btfsc	status,2,c
  1171   0005B4  EFDE  F002         	goto	u1191
  1172   0005B8  EFE0  F002         	goto	u1190
  1173   0005BC                     u1191:
  1174   0005BC  EFB4  F002         	goto	l1648
  1175   0005C0                     u1190:
  1176   0005C0                     l1658:
  1177                           
  1178                           ;main.c: 238: 
  1179   0005C0  0E00               	movlw	0
  1180   0005C2  6E55               	movwf	(lighton@x+1)^0,c
  1181   0005C4  0E00               	movlw	0
  1182   0005C6  6E54               	movwf	lighton@x^0,c
  1183   0005C8  0E00               	movlw	0
  1184   0005CA  6E57               	movwf	(lighton@prev+1)^0,c
  1185   0005CC  0E7C               	movlw	124
  1186   0005CE  6E56               	movwf	lighton@prev^0,c
  1187   0005D0  EC74  F001         	call	_lighton	;wreg free
  1188   0005D4                     
  1189                           ;main.c: 239: 
  1190   0005D4  0E03               	movlw	3
  1191   0005D6  6E5A               	movwf	??_cubeidle^0,c
  1192   0005D8  0E98               	movlw	152
  1193   0005DA                     u1357:
  1194   0005DA  2EE8               	decfsz	wreg,f,c
  1195   0005DC  D7FE               	bra	u1357
  1196   0005DE  2E5A               	decfsz	??_cubeidle^0,f,c
  1197   0005E0  D7FC               	bra	u1357
  1198   0005E2                     l1662:
  1199                           
  1200                           ;main.c: 233: void main(void) {
  1201   0005E2  5003               	movf	_mode^0,w,c
  1202   0005E4  1004               	iorwf	(_mode+1)^0,w,c
  1203   0005E6  B4D8               	btfsc	status,2,c
  1204   0005E8  EFF8  F002         	goto	u1201
  1205   0005EC  EFFA  F002         	goto	u1200
  1206   0005F0                     u1201:
  1207   0005F0  EFAE  F002         	goto	l1646
  1208   0005F4                     u1200:
  1209   0005F4  0012               	return		;funcret
  1210   0005F6                     __end_of_cubeidle:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _time *****************
  1214 ;; Defined at:
  1215 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\time.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  t               2    5[COMRAM] PTR long long 
  1218 ;;		 -> NULL(0), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  8    5[COMRAM] long long 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1230 ;;      Params:         8       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0
  1233 ;;      Totals:         8       0       0       0       0       0       0
  1234 ;;Total ram usage:        8 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_cubeidle
  1241 ;;		_random_pattern
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text4
  1246   0009E4                     __ptext4:
  1247                           	callstack 0
  1248   0009E4                     _time:
  1249                           	callstack 28
  1250   0009E4  5040               	movf	time@t^0,w,c
  1251   0009E6  1041               	iorwf	(time@t+1)^0,w,c
  1252   0009E8  B4D8               	btfsc	status,2,c
  1253   0009EA  EFF9  F004         	goto	u951
  1254   0009EE  EFFB  F004         	goto	u950
  1255   0009F2                     u951:
  1256   0009F2  EF0F  F005         	goto	l1498
  1257   0009F6                     u950:
  1258   0009F6  C040  FFD9         	movff	time@t,fsr2l
  1259   0009FA  C041  FFDA         	movff	time@t+1,fsr2h
  1260   0009FE  0EFF               	movlw	255
  1261   000A00  6EDE               	movwf	postinc2,c
  1262   000A02  0EFF               	movlw	255
  1263   000A04  6EDE               	movwf	postinc2,c
  1264   000A06  0EFF               	movlw	255
  1265   000A08  6EDE               	movwf	postinc2,c
  1266   000A0A  0EFF               	movlw	255
  1267   000A0C  6EDE               	movwf	postinc2,c
  1268   000A0E  0EFF               	movlw	255
  1269   000A10  6EDE               	movwf	postinc2,c
  1270   000A12  0EFF               	movlw	255
  1271   000A14  6EDE               	movwf	postinc2,c
  1272   000A16  0EFF               	movlw	255
  1273   000A18  6EDE               	movwf	postinc2,c
  1274   000A1A  0EFF               	movlw	255
  1275   000A1C  6EDD               	movwf	postdec2,c
  1276   000A1E                     l1498:
  1277   000A1E  6840               	setf	?_time^0,c
  1278   000A20  6841               	setf	(?_time+1)^0,c
  1279   000A22  6842               	setf	(?_time+2)^0,c
  1280   000A24  6843               	setf	(?_time+3)^0,c
  1281   000A26  6844               	setf	(?_time+4)^0,c
  1282   000A28  6845               	setf	(?_time+5)^0,c
  1283   000A2A  6846               	setf	(?_time+6)^0,c
  1284   000A2C  6847               	setf	(?_time+7)^0,c
  1285   000A2E  0012               	return		;funcret
  1286   000A30                     __end_of_time:
  1287                           	callstack 0
  1288                           
  1289 ;; *************** function _srand *****************
  1290 ;; Defined at:
  1291 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  s               2   13[COMRAM] unsigned int 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1305 ;;      Params:         2       0       0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0
  1307 ;;      Temps:          2       0       0       0       0       0       0
  1308 ;;      Totals:         4       0       0       0       0       0       0
  1309 ;;Total ram usage:        4 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_cubeidle
  1316 ;;		_random_pattern
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text5
  1321   000A90                     __ptext5:
  1322                           	callstack 0
  1323   000A90                     _srand:
  1324                           	callstack 28
  1325   000A90  0EFF               	movlw	255
  1326   000A92  2448               	addwf	srand@s^0,w,c
  1327   000A94  6E4A               	movwf	??_srand^0,c
  1328   000A96  0EFF               	movlw	255
  1329   000A98  2049               	addwfc	(srand@s+1)^0,w,c
  1330   000A9A  6E4B               	movwf	(??_srand+1)^0,c
  1331   000A9C  C04A  F037         	movff	??_srand,_seed
  1332   000AA0  C04B  F038         	movff	??_srand+1,_seed+1
  1333   000AA4  6A39               	clrf	(_seed+2)^0,c
  1334   000AA6  6A3A               	clrf	(_seed+3)^0,c
  1335   000AA8  0012               	return		;funcret
  1336   000AAA                     __end_of_srand:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _lighton *****************
  1340 ;; Defined at:
  1341 ;;		line 145 in file "main.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  x               2   25[COMRAM] int 
  1344 ;;  prev            2   27[COMRAM] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1356 ;;      Params:         4       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0
  1358 ;;      Temps:          2       0       0       0       0       0       0
  1359 ;;      Totals:         6       0       0       0       0       0       0
  1360 ;;Total ram usage:        6 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 2
  1363 ;; This function calls:
  1364 ;;		___awdiv
  1365 ;;		___awmod
  1366 ;;		___wmul
  1367 ;;		_draw_plane
  1368 ;;		_set_plane
  1369 ;; This function is called by:
  1370 ;;		_cubeidle
  1371 ;;		_random_pattern
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text6
  1376   0002E8                     __ptext6:
  1377                           	callstack 0
  1378   0002E8                     _lighton:
  1379                           	callstack 27
  1380   0002E8                     
  1381                           ;main.c: 146:     srand(time(((void*)0)));
  1382   0002E8  C054  F046         	movff	lighton@x,___awdiv@dividend
  1383   0002EC  C055  F047         	movff	lighton@x+1,___awdiv@dividend+1
  1384   0002F0  0E00               	movlw	0
  1385   0002F2  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1386   0002F4  0E19               	movlw	25
  1387   0002F6  6E48               	movwf	___awdiv@divisor^0,c
  1388   0002F8  ECFB  F002         	call	___awdiv	;wreg free
  1389   0002FC  C046  F04E         	movff	?___awdiv,set_plane@a
  1390   000300  C047  F04F         	movff	?___awdiv+1,set_plane@a+1
  1391   000304  EC59  F004         	call	_set_plane	;wreg free
  1392   000308                     
  1393                           ;main.c: 147:     int x = 0, r = 0, prevr, prevx = -1;
  1394   000308  2856               	incf	lighton@prev^0,w,c
  1395   00030A  E108               	bnz	u940
  1396   00030C  2857               	incf	(lighton@prev+1)^0,w,c
  1397   00030E  B4D8               	btfsc	status,2,c
  1398   000310  EF8C  F001         	goto	u941
  1399   000314  EF8E  F001         	goto	u940
  1400   000318                     u941:
  1401   000318  EFC9  F001         	goto	l94
  1402   00031C                     u940:
  1403   00031C  0E00               	movlw	0
  1404   00031E  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1405   000320  0E05               	movlw	5
  1406   000322  6E48               	movwf	___awdiv@divisor^0,c
  1407   000324  0E00               	movlw	0
  1408   000326  6E43               	movwf	(___awmod@divisor+1)^0,c
  1409   000328  0E19               	movlw	25
  1410   00032A  6E42               	movwf	___awmod@divisor^0,c
  1411   00032C  C056  F040         	movff	lighton@prev,___awmod@dividend
  1412   000330  C057  F041         	movff	lighton@prev+1,___awmod@dividend+1
  1413   000334  EC5D  F003         	call	___awmod	;wreg free
  1414   000338  C040  F046         	movff	?___awmod,___awdiv@dividend
  1415   00033C  C041  F047         	movff	?___awmod+1,___awdiv@dividend+1
  1416   000340  ECFB  F002         	call	___awdiv	;wreg free
  1417   000344  C046  F04E         	movff	?___awdiv,___wmul@multiplier
  1418   000348  C047  F04F         	movff	?___awdiv+1,___wmul@multiplier+1
  1419   00034C  0E00               	movlw	0
  1420   00034E  6E51               	movwf	(___wmul@multiplicand+1)^0,c
  1421   000350  0E0A               	movlw	10
  1422   000352  6E50               	movwf	___wmul@multiplicand^0,c
  1423   000354  EC35  F005         	call	___wmul	;wreg free
  1424   000358  0E05               	movlw	low _plane
  1425   00035A  244E               	addwf	?___wmul^0,w,c
  1426   00035C  6E58               	movwf	??_lighton^0,c
  1427   00035E  0E00               	movlw	high _plane
  1428   000360  204F               	addwfc	(?___wmul+1)^0,w,c
  1429   000362  6E59               	movwf	(??_lighton+1)^0,c
  1430   000364  C056  F040         	movff	lighton@prev,___awmod@dividend
  1431   000368  C057  F041         	movff	lighton@prev+1,___awmod@dividend+1
  1432   00036C  0E00               	movlw	0
  1433   00036E  6E43               	movwf	(___awmod@divisor+1)^0,c
  1434   000370  0E05               	movlw	5
  1435   000372  6E42               	movwf	___awmod@divisor^0,c
  1436   000374  EC5D  F003         	call	___awmod	;wreg free
  1437   000378  90D8               	bcf	status,0,c
  1438   00037A  3640               	rlcf	?___awmod^0,f,c
  1439   00037C  3641               	rlcf	(?___awmod+1)^0,f,c
  1440   00037E  5040               	movf	?___awmod^0,w,c
  1441   000380  2458               	addwf	??_lighton^0,w,c
  1442   000382  6ED9               	movwf	fsr2l,c
  1443   000384  5041               	movf	(?___awmod+1)^0,w,c
  1444   000386  2059               	addwfc	(??_lighton+1)^0,w,c
  1445   000388  6EDA               	movwf	fsr2h,c
  1446   00038A  0E00               	movlw	0
  1447   00038C  6EDE               	movwf	postinc2,c
  1448   00038E  0E00               	movlw	0
  1449   000390  6EDD               	movwf	postdec2,c
  1450   000392                     l94:
  1451                           
  1452                           ;main.c: 148:     lighton(0, prevx);
  1453   000392  0E00               	movlw	0
  1454   000394  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1455   000396  0E05               	movlw	5
  1456   000398  6E48               	movwf	___awdiv@divisor^0,c
  1457   00039A  0E00               	movlw	0
  1458   00039C  6E43               	movwf	(___awmod@divisor+1)^0,c
  1459   00039E  0E19               	movlw	25
  1460   0003A0  6E42               	movwf	___awmod@divisor^0,c
  1461   0003A2  C054  F040         	movff	lighton@x,___awmod@dividend
  1462   0003A6  C055  F041         	movff	lighton@x+1,___awmod@dividend+1
  1463   0003AA  EC5D  F003         	call	___awmod	;wreg free
  1464   0003AE  C040  F046         	movff	?___awmod,___awdiv@dividend
  1465   0003B2  C041  F047         	movff	?___awmod+1,___awdiv@dividend+1
  1466   0003B6  ECFB  F002         	call	___awdiv	;wreg free
  1467   0003BA  C046  F04E         	movff	?___awdiv,___wmul@multiplier
  1468   0003BE  C047  F04F         	movff	?___awdiv+1,___wmul@multiplier+1
  1469   0003C2  0E00               	movlw	0
  1470   0003C4  6E51               	movwf	(___wmul@multiplicand+1)^0,c
  1471   0003C6  0E0A               	movlw	10
  1472   0003C8  6E50               	movwf	___wmul@multiplicand^0,c
  1473   0003CA  EC35  F005         	call	___wmul	;wreg free
  1474   0003CE  0E05               	movlw	low _plane
  1475   0003D0  244E               	addwf	?___wmul^0,w,c
  1476   0003D2  6E58               	movwf	??_lighton^0,c
  1477   0003D4  0E00               	movlw	high _plane
  1478   0003D6  204F               	addwfc	(?___wmul+1)^0,w,c
  1479   0003D8  6E59               	movwf	(??_lighton+1)^0,c
  1480   0003DA  C054  F040         	movff	lighton@x,___awmod@dividend
  1481   0003DE  C055  F041         	movff	lighton@x+1,___awmod@dividend+1
  1482   0003E2  0E00               	movlw	0
  1483   0003E4  6E43               	movwf	(___awmod@divisor+1)^0,c
  1484   0003E6  0E05               	movlw	5
  1485   0003E8  6E42               	movwf	___awmod@divisor^0,c
  1486   0003EA  EC5D  F003         	call	___awmod	;wreg free
  1487   0003EE  90D8               	bcf	status,0,c
  1488   0003F0  3640               	rlcf	?___awmod^0,f,c
  1489   0003F2  3641               	rlcf	(?___awmod+1)^0,f,c
  1490   0003F4  5040               	movf	?___awmod^0,w,c
  1491   0003F6  2458               	addwf	??_lighton^0,w,c
  1492   0003F8  6ED9               	movwf	fsr2l,c
  1493   0003FA  5041               	movf	(?___awmod+1)^0,w,c
  1494   0003FC  2059               	addwfc	(??_lighton+1)^0,w,c
  1495   0003FE  6EDA               	movwf	fsr2h,c
  1496   000400  0E01               	movlw	1
  1497   000402  6EDE               	movwf	postinc2,c
  1498   000404  0E00               	movlw	0
  1499   000406  6EDD               	movwf	postdec2,c
  1500   000408                     
  1501                           ;main.c: 149:     r = rand() % 6;
  1502   000408  EC07  F002         	call	_draw_plane	;wreg free
  1503   00040C  0012               	return		;funcret
  1504   00040E                     __end_of_lighton:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _set_plane *****************
  1508 ;; Defined at:
  1509 ;;		line 92 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  a               2   19[COMRAM] int 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         2       0       0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0       0       0
  1525 ;;      Temps:          2       0       0       0       0       0       0
  1526 ;;      Totals:         4       0       0       0       0       0       0
  1527 ;;Total ram usage:        4 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_lighton
  1534 ;;		_speedup
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text7
  1540   0008B2                     __ptext7:
  1541                           	callstack 0
  1542   0008B2                     _set_plane:
  1543                           	callstack 28
  1544   0008B2                     
  1545                           ;main.c: 93:             LATAbits.LA7 = 1;
  1546   0008B2  8296               	bsf	150,1,c	;volatile
  1547                           
  1548                           ;main.c: 94:             break;
  1549   0008B4  8496               	bsf	150,2,c	;volatile
  1550                           
  1551                           ;main.c: 95:         case 3:
  1552   0008B6  8E92               	bsf	146,7,c	;volatile
  1553                           
  1554                           ;main.c: 96:             TRISAbits.TRISA6 = 0;
  1555   0008B8  8C92               	bsf	146,6,c	;volatile
  1556                           
  1557                           ;main.c: 97:             LATAbits.LA6 = 1;
  1558   0008BA  8094               	bsf	148,0,c	;volatile
  1559                           
  1560                           ;main.c: 98:             break;
  1561   0008BC  EF7B  F004         	goto	l1370
  1562   0008C0                     l77:
  1563                           
  1564                           ;main.c: 100:             TRISCbits.TRISC0 = 0;
  1565   0008C0  9296               	bcf	150,1,c	;volatile
  1566                           
  1567                           ;main.c: 101:             LATCbits.LC0 = 1 ;
  1568   0008C2  828D               	bsf	141,1,c	;volatile
  1569                           
  1570                           ;main.c: 102:             break;
  1571   0008C4  EF9D  F004         	goto	l84
  1572   0008C8                     l79:
  1573                           
  1574                           ;main.c: 104:             TRISEbits.TRISE1 = 1;
  1575   0008C8  9496               	bcf	150,2,c	;volatile
  1576                           
  1577                           ;main.c: 105:             TRISEbits.TRISE2 = 1;
  1578   0008CA  848D               	bsf	141,2,c	;volatile
  1579                           
  1580                           ;main.c: 106:             TRISAbits.TRISA7 = 1;
  1581   0008CC  EF9D  F004         	goto	l84
  1582   0008D0                     l80:
  1583                           
  1584                           ;main.c: 108:             TRISCbits.TRISC0 = 1;
  1585   0008D0  9E92               	bcf	146,7,c	;volatile
  1586                           
  1587                           ;main.c: 109:             break;
  1588   0008D2  8E89               	bsf	137,7,c	;volatile
  1589                           
  1590                           ;main.c: 110:     }
  1591   0008D4  EF9D  F004         	goto	l84
  1592   0008D8                     l81:
  1593                           
  1594                           ;main.c: 112: 
  1595   0008D8  9C92               	bcf	146,6,c	;volatile
  1596                           
  1597                           ;main.c: 113: void clear_cube(){
  1598   0008DA  8C89               	bsf	137,6,c	;volatile
  1599                           
  1600                           ;main.c: 114:     TRISEbits.TRISE1 = 1;
  1601   0008DC  EF9D  F004         	goto	l84
  1602   0008E0                     l82:
  1603                           
  1604                           ;main.c: 116:     TRISAbits.TRISA7 = 1;
  1605   0008E0  9094               	bcf	148,0,c	;volatile
  1606                           
  1607                           ;main.c: 117:     TRISAbits.TRISA6 = 1;
  1608   0008E2  808B               	bsf	139,0,c	;volatile
  1609                           
  1610                           ;main.c: 118:     TRISCbits.TRISC0 = 1;
  1611   0008E4  EF9D  F004         	goto	l84
  1612   0008E8                     l83:
  1613                           
  1614                           ;main.c: 120:     TRISB = 0;
  1615   0008E8  8296               	bsf	150,1,c	;volatile
  1616                           
  1617                           ;main.c: 121:     TRISC = 0;
  1618   0008EA  8496               	bsf	150,2,c	;volatile
  1619                           
  1620                           ;main.c: 122:     TRISD = 0;
  1621   0008EC  8E92               	bsf	146,7,c	;volatile
  1622                           
  1623                           ;main.c: 123:     TRISE = 0;
  1624   0008EE  8C92               	bsf	146,6,c	;volatile
  1625                           
  1626                           ;main.c: 124:     for(int i = 0; i < 5; i++)
  1627   0008F0  8094               	bsf	148,0,c	;volatile
  1628                           
  1629                           ;main.c: 125:         for(int j = 0; j < 5; j++)
  1630   0008F2  EF9D  F004         	goto	l84
  1631   0008F6                     l1370:
  1632   0008F6  C04E  F050         	movff	set_plane@a,??_set_plane
  1633   0008FA  C04F  F051         	movff	set_plane@a+1,??_set_plane+1
  1634                           
  1635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 1, Range of values is 0 to 0
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte            4     3 (average)
  1641                           ;	Chosen strategy is simple_byte
  1642   0008FE  5051               	movf	(??_set_plane+1)^0,w,c
  1643   000900  0A00               	xorlw	0	; case 0
  1644   000902  B4D8               	btfsc	status,2,c
  1645   000904  EF86  F004         	goto	l1852
  1646   000908  EF74  F004         	goto	l83
  1647   00090C                     l1852:
  1648                           
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 5, Range of values is 0 to 4
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte           16     9 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655   00090C  5050               	movf	??_set_plane^0,w,c
  1656   00090E  0A00               	xorlw	0	; case 0
  1657   000910  B4D8               	btfsc	status,2,c
  1658   000912  EF60  F004         	goto	l77
  1659   000916  0A01               	xorlw	1	; case 1
  1660   000918  B4D8               	btfsc	status,2,c
  1661   00091A  EF64  F004         	goto	l79
  1662   00091E  0A03               	xorlw	3	; case 2
  1663   000920  B4D8               	btfsc	status,2,c
  1664   000922  EF68  F004         	goto	l80
  1665   000926  0A01               	xorlw	1	; case 3
  1666   000928  B4D8               	btfsc	status,2,c
  1667   00092A  EF6C  F004         	goto	l81
  1668   00092E  0A07               	xorlw	7	; case 4
  1669   000930  B4D8               	btfsc	status,2,c
  1670   000932  EF70  F004         	goto	l82
  1671   000936  EF74  F004         	goto	l83
  1672   00093A                     l84:
  1673   00093A  0012               	return		;funcret
  1674   00093C                     __end_of_set_plane:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _draw_plane *****************
  1678 ;; Defined at:
  1679 ;;		line 53 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		None
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1693 ;;      Params:         0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_lighton
  1704 ;;		_speedup
  1705 ;;		_clear_plane
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text8
  1710   00040E                     __ptext8:
  1711                           	callstack 0
  1712   00040E                     _draw_plane:
  1713                           	callstack 28
  1714   00040E                     
  1715                           ;main.c: 54:     LATBbits.LB4 = plane[2][4];
  1716   00040E  B005               	btfsc	_plane^0,0,c
  1717   000410  D002               	bra	u15
  1718   000412  9089               	bcf	137,0,c	;volatile
  1719   000414  D001               	bra	u16
  1720   000416                     u15:
  1721   000416  8089               	bsf	137,0,c	;volatile
  1722   000418                     u16:
  1723                           
  1724                           ;main.c: 55: 
  1725   000418  B007               	btfsc	(_plane+2)^0,0,c
  1726   00041A  D002               	bra	u25
  1727   00041C  9289               	bcf	137,1,c	;volatile
  1728   00041E  D001               	bra	u26
  1729   000420                     u25:
  1730   000420  8289               	bsf	137,1,c	;volatile
  1731   000422                     u26:
  1732                           
  1733                           ;main.c: 56:     LATCbits.LC7 = plane[3][0];
  1734   000422  B009               	btfsc	(_plane+4)^0,0,c
  1735   000424  D002               	bra	u35
  1736   000426  9489               	bcf	137,2,c	;volatile
  1737   000428  D001               	bra	u36
  1738   00042A                     u35:
  1739   00042A  8489               	bsf	137,2,c	;volatile
  1740   00042C                     u36:
  1741                           
  1742                           ;main.c: 57:     LATDbits.LD4 = plane[3][1];
  1743   00042C  B00B               	btfsc	(_plane+6)^0,0,c
  1744   00042E  D002               	bra	u45
  1745   000430  9689               	bcf	137,3,c	;volatile
  1746   000432  D001               	bra	u46
  1747   000434                     u45:
  1748   000434  8689               	bsf	137,3,c	;volatile
  1749   000436                     u46:
  1750                           
  1751                           ;main.c: 58:     LATDbits.LD5 = plane[3][2];
  1752   000436  B00D               	btfsc	(_plane+8)^0,0,c
  1753   000438  D002               	bra	u55
  1754   00043A  9889               	bcf	137,4,c	;volatile
  1755   00043C  D001               	bra	u56
  1756   00043E                     u55:
  1757   00043E  8889               	bsf	137,4,c	;volatile
  1758   000440                     u56:
  1759                           
  1760                           ;main.c: 60:     LATDbits.LD7 = plane[3][4];
  1761   000440  B00F               	btfsc	(_plane+10)^0,0,c
  1762   000442  D002               	bra	u65
  1763   000444  928B               	bcf	139,1,c	;volatile
  1764   000446  D001               	bra	u66
  1765   000448                     u65:
  1766   000448  828B               	bsf	139,1,c	;volatile
  1767   00044A                     u66:
  1768                           
  1769                           ;main.c: 61: 
  1770   00044A  B011               	btfsc	(_plane+12)^0,0,c
  1771   00044C  D002               	bra	u75
  1772   00044E  948B               	bcf	139,2,c	;volatile
  1773   000450  D001               	bra	u76
  1774   000452                     u75:
  1775   000452  848B               	bsf	139,2,c	;volatile
  1776   000454                     u76:
  1777                           
  1778                           ;main.c: 62:     LATDbits.LD2 = plane[4][0];
  1779   000454  B013               	btfsc	(_plane+14)^0,0,c
  1780   000456  D002               	bra	u85
  1781   000458  968B               	bcf	139,3,c	;volatile
  1782   00045A  D001               	bra	u86
  1783   00045C                     u85:
  1784   00045C  868B               	bsf	139,3,c	;volatile
  1785   00045E                     u86:
  1786                           
  1787                           ;main.c: 63:     LATDbits.LD3 = plane[4][1];
  1788   00045E  B015               	btfsc	(_plane+16)^0,0,c
  1789   000460  D002               	bra	u95
  1790   000462  908C               	bcf	140,0,c	;volatile
  1791   000464  D001               	bra	u96
  1792   000466                     u95:
  1793   000466  808C               	bsf	140,0,c	;volatile
  1794   000468                     u96:
  1795                           
  1796                           ;main.c: 64:     LATCbits.LC4 = plane[4][2];
  1797   000468  B017               	btfsc	(_plane+18)^0,0,c
  1798   00046A  D002               	bra	u105
  1799   00046C  928C               	bcf	140,1,c	;volatile
  1800   00046E  D001               	bra	u106
  1801   000470                     u105:
  1802   000470  828C               	bsf	140,1,c	;volatile
  1803   000472                     u106:
  1804                           
  1805                           ;main.c: 66:     LATCbits.LC6 = plane[4][4];
  1806   000472  B019               	btfsc	(_plane+20)^0,0,c
  1807   000474  D002               	bra	u115
  1808   000476  908A               	bcf	138,0,c	;volatile
  1809   000478  D001               	bra	u116
  1810   00047A                     u115:
  1811   00047A  808A               	bsf	138,0,c	;volatile
  1812   00047C                     u116:
  1813                           
  1814                           ;main.c: 67: }
  1815   00047C  B01B               	btfsc	(_plane+22)^0,0,c
  1816   00047E  D002               	bra	u125
  1817   000480  928A               	bcf	138,1,c	;volatile
  1818   000482  D001               	bra	u126
  1819   000484                     u125:
  1820   000484  828A               	bsf	138,1,c	;volatile
  1821   000486                     u126:
  1822                           
  1823                           ;main.c: 68: 
  1824   000486  B01D               	btfsc	(_plane+24)^0,0,c
  1825   000488  D002               	bra	u135
  1826   00048A  948A               	bcf	138,2,c	;volatile
  1827   00048C  D001               	bra	u136
  1828   00048E                     u135:
  1829   00048E  848A               	bsf	138,2,c	;volatile
  1830   000490                     u136:
  1831                           
  1832                           ;main.c: 69: void clear_plane(){
  1833   000490  B01F               	btfsc	(_plane+26)^0,0,c
  1834   000492  D002               	bra	u145
  1835   000494  968A               	bcf	138,3,c	;volatile
  1836   000496  D001               	bra	u146
  1837   000498                     u145:
  1838   000498  868A               	bsf	138,3,c	;volatile
  1839   00049A                     u146:
  1840                           
  1841                           ;main.c: 70:     for(int i = 0; i < 5; i++)
  1842   00049A  B021               	btfsc	(_plane+28)^0,0,c
  1843   00049C  D002               	bra	u155
  1844   00049E  988A               	bcf	138,4,c	;volatile
  1845   0004A0  D001               	bra	u156
  1846   0004A2                     u155:
  1847   0004A2  888A               	bsf	138,4,c	;volatile
  1848   0004A4                     u156:
  1849                           
  1850                           ;main.c: 72:             plane[i][j] = 0;
  1851   0004A4  B023               	btfsc	(_plane+30)^0,0,c
  1852   0004A6  D002               	bra	u165
  1853   0004A8  9E8B               	bcf	139,7,c	;volatile
  1854   0004AA  D001               	bra	u166
  1855   0004AC                     u165:
  1856   0004AC  8E8B               	bsf	139,7,c	;volatile
  1857   0004AE                     u166:
  1858                           
  1859                           ;main.c: 73:     draw_plane();
  1860   0004AE  B025               	btfsc	(_plane+32)^0,0,c
  1861   0004B0  D002               	bra	u175
  1862   0004B2  988C               	bcf	140,4,c	;volatile
  1863   0004B4  D001               	bra	u176
  1864   0004B6                     u175:
  1865   0004B6  888C               	bsf	140,4,c	;volatile
  1866   0004B8                     u176:
  1867                           
  1868                           ;main.c: 74: }
  1869   0004B8  B027               	btfsc	(_plane+34)^0,0,c
  1870   0004BA  D002               	bra	u185
  1871   0004BC  9A8C               	bcf	140,5,c	;volatile
  1872   0004BE  D001               	bra	u186
  1873   0004C0                     u185:
  1874   0004C0  8A8C               	bsf	140,5,c	;volatile
  1875   0004C2                     u186:
  1876                           
  1877                           ;main.c: 75: 
  1878   0004C2  B029               	btfsc	(_plane+36)^0,0,c
  1879   0004C4  D002               	bra	u195
  1880   0004C6  9C8C               	bcf	140,6,c	;volatile
  1881   0004C8  D001               	bra	u196
  1882   0004CA                     u195:
  1883   0004CA  8C8C               	bsf	140,6,c	;volatile
  1884   0004CC                     u196:
  1885                           
  1886                           ;main.c: 76: void set_plane(int a){
  1887   0004CC  B02B               	btfsc	(_plane+38)^0,0,c
  1888   0004CE  D002               	bra	u205
  1889   0004D0  9E8C               	bcf	140,7,c	;volatile
  1890   0004D2  D001               	bra	u206
  1891   0004D4                     u205:
  1892   0004D4  8E8C               	bsf	140,7,c	;volatile
  1893   0004D6                     u206:
  1894                           
  1895                           ;main.c: 78:     TRISEbits.TRISE2 = 1;
  1896   0004D6  B02D               	btfsc	(_plane+40)^0,0,c
  1897   0004D8  D002               	bra	u215
  1898   0004DA  948C               	bcf	140,2,c	;volatile
  1899   0004DC  D001               	bra	u216
  1900   0004DE                     u215:
  1901   0004DE  848C               	bsf	140,2,c	;volatile
  1902   0004E0                     u216:
  1903                           
  1904                           ;main.c: 79:     TRISAbits.TRISA7 = 1;
  1905   0004E0  B02F               	btfsc	(_plane+42)^0,0,c
  1906   0004E2  D002               	bra	u225
  1907   0004E4  968C               	bcf	140,3,c	;volatile
  1908   0004E6  D001               	bra	u226
  1909   0004E8                     u225:
  1910   0004E8  868C               	bsf	140,3,c	;volatile
  1911   0004EA                     u226:
  1912                           
  1913                           ;main.c: 80:     TRISAbits.TRISA6 = 1;
  1914   0004EA  B031               	btfsc	(_plane+44)^0,0,c
  1915   0004EC  D002               	bra	u235
  1916   0004EE  988B               	bcf	139,4,c	;volatile
  1917   0004F0  D001               	bra	u236
  1918   0004F2                     u235:
  1919   0004F2  888B               	bsf	139,4,c	;volatile
  1920   0004F4                     u236:
  1921                           
  1922                           ;main.c: 81:     TRISCbits.TRISC0 = 1;
  1923   0004F4  B033               	btfsc	(_plane+46)^0,0,c
  1924   0004F6  D002               	bra	u245
  1925   0004F8  9A8B               	bcf	139,5,c	;volatile
  1926   0004FA  D001               	bra	u246
  1927   0004FC                     u245:
  1928   0004FC  8A8B               	bsf	139,5,c	;volatile
  1929   0004FE                     u246:
  1930                           
  1931                           ;main.c: 82:     switch (a){
  1932   0004FE  B035               	btfsc	(_plane+48)^0,0,c
  1933   000500  D002               	bra	u255
  1934   000502  9C8B               	bcf	139,6,c	;volatile
  1935   000504  D001               	bra	u256
  1936   000506                     u255:
  1937   000506  8C8B               	bsf	139,6,c	;volatile
  1938   000508                     u256:
  1939   000508  0012               	return		;funcret
  1940   00050A                     __end_of_draw_plane:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function ___awmod *****************
  1944 ;; Defined at:
  1945 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  dividend        2    5[COMRAM] int 
  1948 ;;  divisor         2    7[COMRAM] int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  sign            1   10[COMRAM] unsigned char 
  1951 ;;  counter         1    9[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2    5[COMRAM] int 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1961 ;;      Params:         4       0       0       0       0       0       0
  1962 ;;      Locals:         2       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0
  1964 ;;      Totals:         6       0       0       0       0       0       0
  1965 ;;Total ram usage:        6 bytes
  1966 ;; Hardware stack levels used: 1
  1967 ;; Hardware stack levels required when called: 1
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_lighton
  1972 ;;		_speedup
  1973 ;;		_move
  1974 ;;		_random_pattern
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text9
  1979   0006BA                     __ptext9:
  1980                           	callstack 0
  1981   0006BA                     ___awmod:
  1982                           	callstack 28
  1983   0006BA  0E00               	movlw	0
  1984   0006BC  6E45               	movwf	___awmod@sign^0,c
  1985   0006BE  BE41               	btfsc	(___awmod@dividend+1)^0,7,c
  1986   0006C0  EF66  F003         	goto	u860
  1987   0006C4  EF64  F003         	goto	u861
  1988   0006C8                     u861:
  1989   0006C8  EF6C  F003         	goto	l1434
  1990   0006CC                     u860:
  1991   0006CC  6C40               	negf	___awmod@dividend^0,c
  1992   0006CE  1E41               	comf	(___awmod@dividend+1)^0,f,c
  1993   0006D0  B0D8               	btfsc	status,0,c
  1994   0006D2  2A41               	incf	(___awmod@dividend+1)^0,f,c
  1995   0006D4  0E01               	movlw	1
  1996   0006D6  6E45               	movwf	___awmod@sign^0,c
  1997   0006D8                     l1434:
  1998   0006D8  BE43               	btfsc	(___awmod@divisor+1)^0,7,c
  1999   0006DA  EF73  F003         	goto	u870
  2000   0006DE  EF71  F003         	goto	u871
  2001   0006E2                     u871:
  2002   0006E2  EF77  F003         	goto	l1438
  2003   0006E6                     u870:
  2004   0006E6  6C42               	negf	___awmod@divisor^0,c
  2005   0006E8  1E43               	comf	(___awmod@divisor+1)^0,f,c
  2006   0006EA  B0D8               	btfsc	status,0,c
  2007   0006EC  2A43               	incf	(___awmod@divisor+1)^0,f,c
  2008   0006EE                     l1438:
  2009   0006EE  5042               	movf	___awmod@divisor^0,w,c
  2010   0006F0  1043               	iorwf	(___awmod@divisor+1)^0,w,c
  2011   0006F2  B4D8               	btfsc	status,2,c
  2012   0006F4  EF7E  F003         	goto	u881
  2013   0006F8  EF80  F003         	goto	u880
  2014   0006FC                     u881:
  2015   0006FC  EFA4  F003         	goto	l1454
  2016   000700                     u880:
  2017   000700  0E01               	movlw	1
  2018   000702  6E44               	movwf	___awmod@counter^0,c
  2019   000704  EF88  F003         	goto	l1444
  2020   000708                     l1442:
  2021   000708  90D8               	bcf	status,0,c
  2022   00070A  3642               	rlcf	___awmod@divisor^0,f,c
  2023   00070C  3643               	rlcf	(___awmod@divisor+1)^0,f,c
  2024   00070E  2A44               	incf	___awmod@counter^0,f,c
  2025   000710                     l1444:
  2026   000710  AE43               	btfss	(___awmod@divisor+1)^0,7,c
  2027   000712  EF8D  F003         	goto	u891
  2028   000716  EF8F  F003         	goto	u890
  2029   00071A                     u891:
  2030   00071A  EF84  F003         	goto	l1442
  2031   00071E                     u890:
  2032   00071E                     l1446:
  2033   00071E  5042               	movf	___awmod@divisor^0,w,c
  2034   000720  5C40               	subwf	___awmod@dividend^0,w,c
  2035   000722  5043               	movf	(___awmod@divisor+1)^0,w,c
  2036   000724  5841               	subwfb	(___awmod@dividend+1)^0,w,c
  2037   000726  A0D8               	btfss	status,0,c
  2038   000728  EF98  F003         	goto	u901
  2039   00072C  EF9A  F003         	goto	u900
  2040   000730                     u901:
  2041   000730  EF9E  F003         	goto	l1450
  2042   000734                     u900:
  2043   000734  5042               	movf	___awmod@divisor^0,w,c
  2044   000736  5E40               	subwf	___awmod@dividend^0,f,c
  2045   000738  5043               	movf	(___awmod@divisor+1)^0,w,c
  2046   00073A  5A41               	subwfb	(___awmod@dividend+1)^0,f,c
  2047   00073C                     l1450:
  2048   00073C  90D8               	bcf	status,0,c
  2049   00073E  3243               	rrcf	(___awmod@divisor+1)^0,f,c
  2050   000740  3242               	rrcf	___awmod@divisor^0,f,c
  2051   000742  2E44               	decfsz	___awmod@counter^0,f,c
  2052   000744  EF8F  F003         	goto	l1446
  2053   000748                     l1454:
  2054   000748  5045               	movf	___awmod@sign^0,w,c
  2055   00074A  B4D8               	btfsc	status,2,c
  2056   00074C  EFAA  F003         	goto	u911
  2057   000750  EFAC  F003         	goto	u910
  2058   000754                     u911:
  2059   000754  EFB0  F003         	goto	l1458
  2060   000758                     u910:
  2061   000758  6C40               	negf	___awmod@dividend^0,c
  2062   00075A  1E41               	comf	(___awmod@dividend+1)^0,f,c
  2063   00075C  B0D8               	btfsc	status,0,c
  2064   00075E  2A41               	incf	(___awmod@dividend+1)^0,f,c
  2065   000760                     l1458:
  2066   000760  C040  F040         	movff	___awmod@dividend,?___awmod
  2067   000764  C041  F041         	movff	___awmod@dividend+1,?___awmod+1
  2068   000768  0012               	return		;funcret
  2069   00076A                     __end_of___awmod:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function ___awdiv *****************
  2073 ;; Defined at:
  2074 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  dividend        2   11[COMRAM] int 
  2077 ;;  divisor         2   13[COMRAM] int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  quotient        2   17[COMRAM] int 
  2080 ;;  sign            1   16[COMRAM] unsigned char 
  2081 ;;  counter         1   15[COMRAM] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2   11[COMRAM] int 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2091 ;;      Params:         4       0       0       0       0       0       0
  2092 ;;      Locals:         4       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0
  2094 ;;      Totals:         8       0       0       0       0       0       0
  2095 ;;Total ram usage:        8 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_lighton
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text10
  2106   0005F6                     __ptext10:
  2107                           	callstack 0
  2108   0005F6                     ___awdiv:
  2109                           	callstack 27
  2110   0005F6  0E00               	movlw	0
  2111   0005F8  6E4B               	movwf	___awdiv@sign^0,c
  2112   0005FA  BE49               	btfsc	(___awdiv@divisor+1)^0,7,c
  2113   0005FC  EF04  F003         	goto	u800
  2114   000600  EF02  F003         	goto	u801
  2115   000604                     u801:
  2116   000604  EF0A  F003         	goto	l1390
  2117   000608                     u800:
  2118   000608  6C48               	negf	___awdiv@divisor^0,c
  2119   00060A  1E49               	comf	(___awdiv@divisor+1)^0,f,c
  2120   00060C  B0D8               	btfsc	status,0,c
  2121   00060E  2A49               	incf	(___awdiv@divisor+1)^0,f,c
  2122   000610  0E01               	movlw	1
  2123   000612  6E4B               	movwf	___awdiv@sign^0,c
  2124   000614                     l1390:
  2125   000614  BE47               	btfsc	(___awdiv@dividend+1)^0,7,c
  2126   000616  EF11  F003         	goto	u810
  2127   00061A  EF0F  F003         	goto	u811
  2128   00061E                     u811:
  2129   00061E  EF17  F003         	goto	l1396
  2130   000622                     u810:
  2131   000622  6C46               	negf	___awdiv@dividend^0,c
  2132   000624  1E47               	comf	(___awdiv@dividend+1)^0,f,c
  2133   000626  B0D8               	btfsc	status,0,c
  2134   000628  2A47               	incf	(___awdiv@dividend+1)^0,f,c
  2135   00062A  0E01               	movlw	1
  2136   00062C  1A4B               	xorwf	___awdiv@sign^0,f,c
  2137   00062E                     l1396:
  2138   00062E  0E00               	movlw	0
  2139   000630  6E4D               	movwf	(___awdiv@quotient+1)^0,c
  2140   000632  0E00               	movlw	0
  2141   000634  6E4C               	movwf	___awdiv@quotient^0,c
  2142   000636  5048               	movf	___awdiv@divisor^0,w,c
  2143   000638  1049               	iorwf	(___awdiv@divisor+1)^0,w,c
  2144   00063A  B4D8               	btfsc	status,2,c
  2145   00063C  EF22  F003         	goto	u821
  2146   000640  EF24  F003         	goto	u820
  2147   000644                     u821:
  2148   000644  EF4C  F003         	goto	l1418
  2149   000648                     u820:
  2150   000648  0E01               	movlw	1
  2151   00064A  6E4A               	movwf	___awdiv@counter^0,c
  2152   00064C  EF2C  F003         	goto	l1404
  2153   000650                     l1402:
  2154   000650  90D8               	bcf	status,0,c
  2155   000652  3648               	rlcf	___awdiv@divisor^0,f,c
  2156   000654  3649               	rlcf	(___awdiv@divisor+1)^0,f,c
  2157   000656  2A4A               	incf	___awdiv@counter^0,f,c
  2158   000658                     l1404:
  2159   000658  AE49               	btfss	(___awdiv@divisor+1)^0,7,c
  2160   00065A  EF31  F003         	goto	u831
  2161   00065E  EF33  F003         	goto	u830
  2162   000662                     u831:
  2163   000662  EF28  F003         	goto	l1402
  2164   000666                     u830:
  2165   000666                     l1406:
  2166   000666  90D8               	bcf	status,0,c
  2167   000668  364C               	rlcf	___awdiv@quotient^0,f,c
  2168   00066A  364D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2169   00066C  5048               	movf	___awdiv@divisor^0,w,c
  2170   00066E  5C46               	subwf	___awdiv@dividend^0,w,c
  2171   000670  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2172   000672  5847               	subwfb	(___awdiv@dividend+1)^0,w,c
  2173   000674  A0D8               	btfss	status,0,c
  2174   000676  EF3F  F003         	goto	u841
  2175   00067A  EF41  F003         	goto	u840
  2176   00067E                     u841:
  2177   00067E  EF46  F003         	goto	l1414
  2178   000682                     u840:
  2179   000682  5048               	movf	___awdiv@divisor^0,w,c
  2180   000684  5E46               	subwf	___awdiv@dividend^0,f,c
  2181   000686  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2182   000688  5A47               	subwfb	(___awdiv@dividend+1)^0,f,c
  2183   00068A  804C               	bsf	___awdiv@quotient^0,0,c
  2184   00068C                     l1414:
  2185   00068C  90D8               	bcf	status,0,c
  2186   00068E  3249               	rrcf	(___awdiv@divisor+1)^0,f,c
  2187   000690  3248               	rrcf	___awdiv@divisor^0,f,c
  2188   000692  2E4A               	decfsz	___awdiv@counter^0,f,c
  2189   000694  EF33  F003         	goto	l1406
  2190   000698                     l1418:
  2191   000698  504B               	movf	___awdiv@sign^0,w,c
  2192   00069A  B4D8               	btfsc	status,2,c
  2193   00069C  EF52  F003         	goto	u851
  2194   0006A0  EF54  F003         	goto	u850
  2195   0006A4                     u851:
  2196   0006A4  EF58  F003         	goto	l1422
  2197   0006A8                     u850:
  2198   0006A8  6C4C               	negf	___awdiv@quotient^0,c
  2199   0006AA  1E4D               	comf	(___awdiv@quotient+1)^0,f,c
  2200   0006AC  B0D8               	btfsc	status,0,c
  2201   0006AE  2A4D               	incf	(___awdiv@quotient+1)^0,f,c
  2202   0006B0                     l1422:
  2203   0006B0  C04C  F046         	movff	___awdiv@quotient,?___awdiv
  2204   0006B4  C04D  F047         	movff	___awdiv@quotient+1,?___awdiv+1
  2205   0006B8  0012               	return		;funcret
  2206   0006BA                     __end_of___awdiv:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _clear_cube *****************
  2210 ;; Defined at:
  2211 ;;		line 129 in file "main.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  j               2   29[COMRAM] int 
  2216 ;;  i               2   27[COMRAM] int 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2226 ;;      Params:         0       0       0       0       0       0       0
  2227 ;;      Locals:         4       0       0       0       0       0       0
  2228 ;;      Temps:          2       0       0       0       0       0       0
  2229 ;;      Totals:         6       0       0       0       0       0       0
  2230 ;;Total ram usage:        6 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		___wmul
  2235 ;; This function is called by:
  2236 ;;		_speedup
  2237 ;;		_cubeidle
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text11
  2242   00076A                     __ptext11:
  2243                           	callstack 0
  2244   00076A                     _clear_cube:
  2245                           	callstack 27
  2246   00076A                     
  2247                           ;main.c: 130:     set_plane(x/25);
  2248   00076A  8296               	bsf	150,1,c	;volatile
  2249                           
  2250                           ;main.c: 131:     if(prev != -1)plane[(prev%25)/5][prev%5] = 0;
  2251   00076C  8496               	bsf	150,2,c	;volatile
  2252                           
  2253                           ;main.c: 132:     plane[(x%25)/5][x%5] = 1;
  2254   00076E  8E92               	bsf	146,7,c	;volatile
  2255                           
  2256                           ;main.c: 133:     draw_plane();
  2257   000770  8C92               	bsf	146,6,c	;volatile
  2258                           
  2259                           ;main.c: 134: }
  2260   000772  8094               	bsf	148,0,c	;volatile
  2261   000774                     
  2262                           ;main.c: 135: int move(int x, int r){
  2263   000774  0E00               	movlw	0
  2264   000776  6E92               	movwf	146,c	;volatile
  2265                           
  2266                           ;main.c: 136:     if(r == 0)x = (x%5 == 4) ? x-4 : x+1;
  2267   000778  0E00               	movlw	0
  2268   00077A  6E93               	movwf	147,c	;volatile
  2269                           
  2270                           ;main.c: 137:     else if(r == 1)x = (x%5 == 0) ? x+4 : x-1;
  2271   00077C  0E00               	movlw	0
  2272   00077E  6E94               	movwf	148,c	;volatile
  2273                           
  2274                           ;main.c: 138:     else if(r == 2)x = (x%25 >= 20) ? x-20 : x+5;
  2275   000780  0E00               	movlw	0
  2276   000782  6E95               	movwf	149,c	;volatile
  2277                           
  2278                           ;main.c: 139:     else if(r == 3)x = (x%25 < 5) ? x+20 : x-5;
  2279   000784  0E00               	movlw	0
  2280   000786  6E96               	movwf	150,c	;volatile
  2281                           
  2282                           ;main.c: 140:     else if(r == 4)x = (x >= 100) ? x-100 : x+25;
  2283   000788  0E00               	movlw	0
  2284   00078A  6E57               	movwf	(clear_cube@i+1)^0,c
  2285   00078C  0E00               	movlw	0
  2286   00078E  6E56               	movwf	clear_cube@i^0,c
  2287   000790                     l1470:
  2288                           
  2289                           ;main.c: 141:     else if(r == 5)x = (x<25) ? x+100 : x-25;
  2290   000790  0E00               	movlw	0
  2291   000792  6E59               	movwf	(clear_cube@j+1)^0,c
  2292   000794  0E00               	movlw	0
  2293   000796  6E58               	movwf	clear_cube@j^0,c
  2294   000798                     l1476:
  2295                           
  2296                           ;main.c: 142:     return x;
  2297   000798  C056  F04E         	movff	clear_cube@i,___wmul@multiplier
  2298   00079C  C057  F04F         	movff	clear_cube@i+1,___wmul@multiplier+1
  2299   0007A0  0E00               	movlw	0
  2300   0007A2  6E51               	movwf	(___wmul@multiplicand+1)^0,c
  2301   0007A4  0E0A               	movlw	10
  2302   0007A6  6E50               	movwf	___wmul@multiplicand^0,c
  2303   0007A8  EC35  F005         	call	___wmul	;wreg free
  2304   0007AC  0E05               	movlw	low _plane
  2305   0007AE  244E               	addwf	?___wmul^0,w,c
  2306   0007B0  6E54               	movwf	??_clear_cube^0,c
  2307   0007B2  0E00               	movlw	high _plane
  2308   0007B4  204F               	addwfc	(?___wmul+1)^0,w,c
  2309   0007B6  6E55               	movwf	(??_clear_cube+1)^0,c
  2310   0007B8  90D8               	bcf	status,0,c
  2311   0007BA  3458               	rlcf	clear_cube@j^0,w,c
  2312   0007BC  6ED9               	movwf	fsr2l,c
  2313   0007BE  3459               	rlcf	(clear_cube@j+1)^0,w,c
  2314   0007C0  6EDA               	movwf	fsr2h,c
  2315   0007C2  5054               	movf	??_clear_cube^0,w,c
  2316   0007C4  26D9               	addwf	fsr2l,f,c
  2317   0007C6  5055               	movf	(??_clear_cube+1)^0,w,c
  2318   0007C8  22DA               	addwfc	fsr2h,f,c
  2319   0007CA  0E00               	movlw	0
  2320   0007CC  6EDE               	movwf	postinc2,c
  2321   0007CE  0E00               	movlw	0
  2322   0007D0  6EDD               	movwf	postdec2,c
  2323   0007D2  4A58               	infsnz	clear_cube@j^0,f,c
  2324   0007D4  2A59               	incf	(clear_cube@j+1)^0,f,c
  2325   0007D6  BE59               	btfsc	(clear_cube@j+1)^0,7,c
  2326   0007D8  EFF7  F003         	goto	u921
  2327   0007DC  5059               	movf	(clear_cube@j+1)^0,w,c
  2328   0007DE  E109               	bnz	u920
  2329   0007E0  0E05               	movlw	5
  2330   0007E2  5C58               	subwf	clear_cube@j^0,w,c
  2331   0007E4  A0D8               	btfss	status,0,c
  2332   0007E6  EFF7  F003         	goto	u921
  2333   0007EA  EFF9  F003         	goto	u920
  2334   0007EE                     u921:
  2335   0007EE  EFCC  F003         	goto	l1476
  2336   0007F2                     u920:
  2337   0007F2  4A56               	infsnz	clear_cube@i^0,f,c
  2338   0007F4  2A57               	incf	(clear_cube@i+1)^0,f,c
  2339   0007F6  BE57               	btfsc	(clear_cube@i+1)^0,7,c
  2340   0007F8  EF07  F004         	goto	u931
  2341   0007FC  5057               	movf	(clear_cube@i+1)^0,w,c
  2342   0007FE  E109               	bnz	u930
  2343   000800  0E05               	movlw	5
  2344   000802  5C56               	subwf	clear_cube@i^0,w,c
  2345   000804  A0D8               	btfss	status,0,c
  2346   000806  EF07  F004         	goto	u931
  2347   00080A  EF09  F004         	goto	u930
  2348   00080E                     u931:
  2349   00080E  EFC8  F003         	goto	l1470
  2350   000812                     u930:
  2351   000812  0012               	return		;funcret
  2352   000814                     __end_of_clear_cube:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function ___wmul *****************
  2356 ;; Defined at:
  2357 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  multiplier      2   19[COMRAM] unsigned int 
  2360 ;;  multiplicand    2   21[COMRAM] unsigned int 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  product         2   23[COMRAM] unsigned int 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2   19[COMRAM] unsigned int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, prodl, prodh
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2372 ;;      Params:         4       0       0       0       0       0       0
  2373 ;;      Locals:         2       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0
  2375 ;;      Totals:         6       0       0       0       0       0       0
  2376 ;;Total ram usage:        6 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_clear_cube
  2383 ;;		_lighton
  2384 ;;		_speedup
  2385 ;;		_clear_plane
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text12
  2390   000A6A                     __ptext12:
  2391                           	callstack 0
  2392   000A6A                     ___wmul:
  2393                           	callstack 27
  2394   000A6A  504E               	movf	___wmul@multiplier^0,w,c
  2395   000A6C  0250               	mulwf	___wmul@multiplicand^0,c
  2396   000A6E  CFF3 F052          	movff	prodl,___wmul@product
  2397   000A72  CFF4 F053          	movff	prodh,___wmul@product+1
  2398   000A76  504E               	movf	___wmul@multiplier^0,w,c
  2399   000A78  0251               	mulwf	(___wmul@multiplicand+1)^0,c
  2400   000A7A  50F3               	movf	243,w,c
  2401   000A7C  2653               	addwf	(___wmul@product+1)^0,f,c
  2402   000A7E  504F               	movf	(___wmul@multiplier+1)^0,w,c
  2403   000A80  0250               	mulwf	___wmul@multiplicand^0,c
  2404   000A82  50F3               	movf	243,w,c
  2405   000A84  2653               	addwf	(___wmul@product+1)^0,f,c
  2406   000A86  C052  F04E         	movff	___wmul@product,?___wmul
  2407   000A8A  C053  F04F         	movff	___wmul@product+1,?___wmul+1
  2408   000A8E  0012               	return		;funcret
  2409   000A90                     __end_of___wmul:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _H_ISR *****************
  2413 ;; Defined at:
  2414 ;;		line 283 in file "main.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  value           2    2[COMRAM] int 
  2419 ;;  mapResult       1    4[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2429 ;;      Params:         0       0       0       0       0       0       0
  2430 ;;      Locals:         3       0       0       0       0       0       0
  2431 ;;      Temps:          2       0       0       0       0       0       0
  2432 ;;      Totals:         5       0       0       0       0       0       0
  2433 ;;Total ram usage:        5 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		Interrupt level 2
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	intcode
  2443   000008                     __pintcode:
  2444                           	callstack 0
  2445   000008                     _H_ISR:
  2446                           	callstack 27
  2447                           
  2448                           ;incstack = 0
  2449   000008  8279               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2450   00000A  EDC8  F004         	call	int_func,f	;refresh shadow registers
  2451                           
  2452                           	psect	intcode_body
  2453   000990                     __pintcode_body:
  2454                           	callstack 27
  2455   000990                     int_func:
  2456                           	callstack 27
  2457   000990  0006               	pop		; remove dummy address from shadow register refresh
  2458   000992                     
  2459                           ;main.c: 285: 
  2460   000992  50C4               	movf	196,w,c	;volatile
  2461   000994  6E3C               	movwf	(??_H_ISR+1)^0,c
  2462   000996  6A3B               	clrf	??_H_ISR^0,c
  2463   000998  50C3               	movf	195,w,c	;volatile
  2464   00099A  243B               	addwf	??_H_ISR^0,w,c
  2465   00099C  6E3D               	movwf	H_ISR@value^0,c
  2466   00099E  0E00               	movlw	0
  2467   0009A0  203C               	addwfc	(??_H_ISR+1)^0,w,c
  2468   0009A2  6E3E               	movwf	(H_ISR@value+1)^0,c
  2469   0009A4                     
  2470                           ;main.c: 288:     ADCON0bits.GO = 1;
  2471   0009A4  0E00               	movlw	0
  2472   0009A6  6E3F               	movwf	H_ISR@mapResult^0,c
  2473                           
  2474                           ;main.c: 290:     return;
  2475   0009A8  EFDB  F004         	goto	i2l1356
  2476   0009AC                     i2l1352:
  2477                           
  2478                           ;main.c: 291: }
  2479   0009AC  0E33               	movlw	51
  2480   0009AE  263D               	addwf	H_ISR@value^0,f,c
  2481   0009B0  0EFF               	movlw	255
  2482   0009B2  223E               	addwfc	(H_ISR@value+1)^0,f,c
  2483   0009B4  2A3F               	incf	H_ISR@mapResult^0,f,c
  2484   0009B6                     i2l1356:
  2485                           
  2486                           ;main.c: 290:     return;
  2487   0009B6  BE3E               	btfsc	(H_ISR@value+1)^0,7,c
  2488   0009B8  EFE9  F004         	goto	i2u79_40
  2489   0009BC  503E               	movf	(H_ISR@value+1)^0,w,c
  2490   0009BE  E107               	bnz	i2u79_41
  2491   0009C0  0ECE               	movlw	206
  2492   0009C2  5C3D               	subwf	H_ISR@value^0,w,c
  2493   0009C4  B0D8               	btfsc	status,0,c
  2494   0009C6  EFE7  F004         	goto	i2u79_41
  2495   0009CA  EFE9  F004         	goto	i2u79_40
  2496   0009CE                     i2u79_41:
  2497   0009CE  EFD6  F004         	goto	i2l1352
  2498   0009D2                     i2u79_40:
  2499   0009D2  C03F  F003         	movff	H_ISR@mapResult,_mode
  2500   0009D6  6A04               	clrf	(_mode+1)^0,c
  2501   0009D8  9C9E               	bcf	158,6,c	;volatile
  2502   0009DA  D000               	nop2		;2 cycle nop
  2503   0009DC  D000               	nop2		;2 cycle nop
  2504   0009DE  82C2               	bsf	194,1,c	;volatile
  2505   0009E0  9279               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2506   0009E2  0011               	retfie		f
  2507   0009E4                     __end_of_H_ISR:
  2508                           	callstack 0
  2509   000000                     
  2510                           	psect	rparam
  2511   000000                     
  2512                           	psect	temp
  2513   000079                     btemp:
  2514                           	callstack 0
  2515   000079                     	ds	1
  2516   000000                     int$flags	set	btemp
  2517   000000                     wtemp8	set	btemp+1
  2518   000000                     ttemp5	set	btemp+1
  2519   000000                     ttemp6	set	btemp+4
  2520   000000                     ttemp7	set	btemp+8
  2521                           
  2522                           	psect	idloc
  2523                           
  2524                           ;Config register IDLOC0 @ 0x200000
  2525                           ;	unspecified, using default values
  2526   200000                     	org	2097152
  2527   200000  FF                 	db	255
  2528                           
  2529                           ;Config register IDLOC1 @ 0x200001
  2530                           ;	unspecified, using default values
  2531   200001                     	org	2097153
  2532   200001  FF                 	db	255
  2533                           
  2534                           ;Config register IDLOC2 @ 0x200002
  2535                           ;	unspecified, using default values
  2536   200002                     	org	2097154
  2537   200002  FF                 	db	255
  2538                           
  2539                           ;Config register IDLOC3 @ 0x200003
  2540                           ;	unspecified, using default values
  2541   200003                     	org	2097155
  2542   200003  FF                 	db	255
  2543                           
  2544                           ;Config register IDLOC4 @ 0x200004
  2545                           ;	unspecified, using default values
  2546   200004                     	org	2097156
  2547   200004  FF                 	db	255
  2548                           
  2549                           ;Config register IDLOC5 @ 0x200005
  2550                           ;	unspecified, using default values
  2551   200005                     	org	2097157
  2552   200005  FF                 	db	255
  2553                           
  2554                           ;Config register IDLOC6 @ 0x200006
  2555                           ;	unspecified, using default values
  2556   200006                     	org	2097158
  2557   200006  FF                 	db	255
  2558                           
  2559                           ;Config register IDLOC7 @ 0x200007
  2560                           ;	unspecified, using default values
  2561   200007                     	org	2097159
  2562   200007  FF                 	db	255
  2563                           
  2564                           	psect	config
  2565                           
  2566                           ; Padding undefined space
  2567   300000                     	org	3145728
  2568   300000  FF                 	db	255
  2569                           
  2570                           ;Config register CONFIG1H @ 0x300001
  2571                           ;	Oscillator Selection bits
  2572                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2573                           ;	Fail-Safe Clock Monitor Enable bit
  2574                           ;	FCMEN = 0x0, unprogrammed default
  2575                           ;	Internal/External Oscillator Switchover bit
  2576                           ;	IESO = 0x0, unprogrammed default
  2577   300001                     	org	3145729
  2578   300001  08                 	db	8
  2579                           
  2580                           ;Config register CONFIG2L @ 0x300002
  2581                           ;	Power-up Timer Enable bit
  2582                           ;	PWRT = OFF, PWRT disabled
  2583                           ;	Brown-out Reset Enable bits
  2584                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  2585                           ;	Brown Out Reset Voltage bits
  2586                           ;	BORV = 0x3, unprogrammed default
  2587   300002                     	org	3145730
  2588   300002  1B                 	db	27
  2589                           
  2590                           ;Config register CONFIG2H @ 0x300003
  2591                           ;	Watchdog Timer Enable bit
  2592                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2593                           ;	Watchdog Timer Postscale Select bits
  2594                           ;	WDTPS = 0xF, unprogrammed default
  2595   300003                     	org	3145731
  2596   300003  1E                 	db	30
  2597                           
  2598                           ; Padding undefined space
  2599   300004                     	org	3145732
  2600   300004  FF                 	db	255
  2601                           
  2602                           ;Config register CONFIG3H @ 0x300005
  2603                           ;	CCP2 MUX bit
  2604                           ;	CCP2MX = 0x1, unprogrammed default
  2605                           ;	PORTB A/D Enable bit
  2606                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2607                           ;	Low-Power Timer1 Oscillator Enable bit
  2608                           ;	LPT1OSC = 0x0, unprogrammed default
  2609                           ;	MCLR Pin Enable bit
  2610                           ;	MCLRE = 0x1, unprogrammed default
  2611   300005                     	org	3145733
  2612   300005  81                 	db	129
  2613                           
  2614                           ;Config register CONFIG4L @ 0x300006
  2615                           ;	Stack Full/Underflow Reset Enable bit
  2616                           ;	STVREN = 0x1, unprogrammed default
  2617                           ;	Single-Supply ICSP Enable bit
  2618                           ;	LVP = OFF, Single-Supply ICSP disabled
  2619                           ;	Extended Instruction Set Enable bit
  2620                           ;	XINST = 0x0, unprogrammed default
  2621                           ;	Background Debugger Enable bit
  2622                           ;	DEBUG = 0x1, unprogrammed default
  2623   300006                     	org	3145734
  2624   300006  81                 	db	129
  2625                           
  2626                           ; Padding undefined space
  2627   300007                     	org	3145735
  2628   300007  FF                 	db	255
  2629                           
  2630                           ;Config register CONFIG5L @ 0x300008
  2631                           ;	unspecified, using default values
  2632                           ;	Code Protection bit
  2633                           ;	CP0 = 0x1, unprogrammed default
  2634                           ;	Code Protection bit
  2635                           ;	CP1 = 0x1, unprogrammed default
  2636                           ;	Code Protection bit
  2637                           ;	CP2 = 0x1, unprogrammed default
  2638                           ;	Code Protection bit
  2639                           ;	CP3 = 0x1, unprogrammed default
  2640   300008                     	org	3145736
  2641   300008  0F                 	db	15
  2642                           
  2643                           ;Config register CONFIG5H @ 0x300009
  2644                           ;	Boot Block Code Protection bit
  2645                           ;	CPB = 0x1, unprogrammed default
  2646                           ;	Data EEPROM Code Protection bit
  2647                           ;	CPD = OFF, Data EEPROM not code-protected
  2648   300009                     	org	3145737
  2649   300009  C0                 	db	192
  2650                           
  2651                           ;Config register CONFIG6L @ 0x30000A
  2652                           ;	unspecified, using default values
  2653                           ;	Write Protection bit
  2654                           ;	WRT0 = 0x1, unprogrammed default
  2655                           ;	Write Protection bit
  2656                           ;	WRT1 = 0x1, unprogrammed default
  2657                           ;	Write Protection bit
  2658                           ;	WRT2 = 0x1, unprogrammed default
  2659                           ;	Write Protection bit
  2660                           ;	WRT3 = 0x1, unprogrammed default
  2661   30000A                     	org	3145738
  2662   30000A  0F                 	db	15
  2663                           
  2664                           ;Config register CONFIG6H @ 0x30000B
  2665                           ;	unspecified, using default values
  2666                           ;	Configuration Register Write Protection bit
  2667                           ;	WRTC = 0x1, unprogrammed default
  2668                           ;	Boot Block Write Protection bit
  2669                           ;	WRTB = 0x1, unprogrammed default
  2670                           ;	Data EEPROM Write Protection bit
  2671                           ;	WRTD = 0x1, unprogrammed default
  2672   30000B                     	org	3145739
  2673   30000B  E0                 	db	224
  2674                           
  2675                           ;Config register CONFIG7L @ 0x30000C
  2676                           ;	unspecified, using default values
  2677                           ;	Table Read Protection bit
  2678                           ;	EBTR0 = 0x1, unprogrammed default
  2679                           ;	Table Read Protection bit
  2680                           ;	EBTR1 = 0x1, unprogrammed default
  2681                           ;	Table Read Protection bit
  2682                           ;	EBTR2 = 0x1, unprogrammed default
  2683                           ;	Table Read Protection bit
  2684                           ;	EBTR3 = 0x1, unprogrammed default
  2685   30000C                     	org	3145740
  2686   30000C  0F                 	db	15
  2687                           
  2688                           ;Config register CONFIG7H @ 0x30000D
  2689                           ;	unspecified, using default values
  2690                           ;	Boot Block Table Read Protection bit
  2691                           ;	EBTRB = 0x1, unprogrammed default
  2692   30000D                     	org	3145741
  2693   30000D  40                 	db	64
  2694                           tosu	equ	0xFFF
  2695                           tosh	equ	0xFFE
  2696                           tosl	equ	0xFFD
  2697                           stkptr	equ	0xFFC
  2698                           pclatu	equ	0xFFB
  2699                           pclath	equ	0xFFA
  2700                           pcl	equ	0xFF9
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           prodh	equ	0xFF4
  2706                           prodl	equ	0xFF3
  2707                           indf0	equ	0xFEF
  2708                           postinc0	equ	0xFEE
  2709                           postdec0	equ	0xFED
  2710                           preinc0	equ	0xFEC
  2711                           plusw0	equ	0xFEB
  2712                           fsr0h	equ	0xFEA
  2713                           fsr0l	equ	0xFE9
  2714                           wreg	equ	0xFE8
  2715                           indf1	equ	0xFE7
  2716                           postinc1	equ	0xFE6
  2717                           postdec1	equ	0xFE5
  2718                           preinc1	equ	0xFE4
  2719                           plusw1	equ	0xFE3
  2720                           fsr1h	equ	0xFE2
  2721                           fsr1l	equ	0xFE1
  2722                           bsr	equ	0xFE0
  2723                           indf2	equ	0xFDF
  2724                           postinc2	equ	0xFDE
  2725                           postdec2	equ	0xFDD
  2726                           preinc2	equ	0xFDC
  2727                           plusw2	equ	0xFDB
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44     120
    BANK0           128      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_speedup
    _speedup->_clear_cube
    _cubeidle->_clear_cube
    _cubeidle->_lighton
    _srand->_time
    _lighton->___wmul
    _set_plane->___awdiv
    ___awdiv->___awmod
    _clear_cube->___wmul
    ___wmul->___awdiv

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15627
                                              0 BANK0      2     2      0
                           _cubeidle
                               _init
                          _set_plane
                            _speedup
 ---------------------------------------------------------------------------------
 (1) _speedup                                             13    13      0    6515
                                             31 COMRAM    13    13      0
                            ___awmod
                             ___wmul
                         _clear_cube
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cubeidle                                            10    10      0    8558
                                             31 COMRAM    10    10      0
                         _clear_cube
                            _lighton
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     196
                                              5 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2     174
                                             13 COMRAM     4     2      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _lighton                                              6     2      4    6609
                                             25 COMRAM     6     2      4
                            ___awdiv
                            ___awmod
                             ___wmul
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (2) _set_plane                                            4     2      2     554
                                             19 COMRAM     4     2      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _draw_plane                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2576
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                             11 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _clear_cube                                           6     6      0    1511
                                             25 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1375
                                             19 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _H_ISR                                                5     5      0      30
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cubeidle
     _clear_cube
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _lighton
       ___awdiv
       ___awmod
       ___wmul
       _draw_plane
       _set_plane
         ___awdiv (ARG)
     _srand
       _time (ARG)
     _time
   _init
   _set_plane
   _speedup
     ___awmod
     ___wmul
     _clear_cube
     _draw_plane
     _set_plane

 _H_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      2       2       4        1.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2C      78       1       95.2%
BITBIGSFR_1l        21      0       0      21        0.0%
BITBIGSFR_1hh        E      0       0      20        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRll          9      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRh           5      0       0      22        0.0%
BITBIGSFRlhh         4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      25        0.0%
DATA                 0      0      7A      27        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 12 04:03:24 2023

                     l63 098E                       l80 08D0                       l81 08D8  
                     l66 0508                       l82 08E0                       l91 0812  
                     l83 08E8                       l84 093A                       l77 08C0  
                     l94 0392                       l79 08C8                       l95 040C  
                     u15 0416                       u16 0418                       u25 0420  
                     u26 0422                       u35 042A                       u36 042C  
                     u45 0434                       u46 0436                       u55 043E  
                     u56 0440                       u65 0448                       u66 044A  
                     u75 0452                       u76 0454                       u85 045C  
                     u86 045E                       u95 0466                       u96 0468  
           ___awdiv@sign 004B      ___wmul@multiplicand 0050             speedup@j_720 005B  
           speedup@j_719 0065                      l219 0A8E                      l172 0208  
                    l181 02E6                      l192 05F4                      l450 06B8  
                    l463 0768                      l902 0A2E                      l904 040E  
                    l895 0AA8                      u105 0470                      u106 0472  
                    u115 047A                      u116 047C                      u205 04D4  
                    u125 0484                      u206 04D6                      u126 0486  
                    u215 04DE                      u135 048E                      u216 04E0  
                    u136 0490                      u225 04E8                      u145 0498  
                    u226 04EA                      u146 049A                      u235 04F2  
                    u155 04A2                      u236 04F4                      u156 04A4  
                    u245 04FC                      u165 04AC                      u246 04FE  
                    u166 04AE                      u255 0506                      u175 04B6  
                    u256 0508                      u176 04B8                      u185 04C0  
                    u186 04C2                      u195 04CA                      u196 04CC  
                    u800 0608                      u801 0604                      u810 0622  
                    u811 061E                      u820 0648                      u900 0734  
                    u821 0644                      u901 0730                      u830 0666  
                    u910 0758                      u831 0662                      u911 0754  
                    u920 07F2                      u840 0682                      u921 07EE  
                    u841 067E                      u930 0812                      u850 06A8  
                    u931 080E                      u851 06A4                      u860 06CC  
                    u940 031C                      u861 06C8                      u941 0318  
                    u870 06E6                      u950 09F6                      u871 06E2  
                    u951 09F2                      u880 0700                      u881 06FC  
                    u890 071E                      u891 071A             ___awmod@sign 0045  
                    wreg 000FE8                     l1050 0954                     l1060 0982  
                   l1052 0956                     l1044 093C                     l1070 098C  
                   l1062 0984                     l1054 0958                     l1046 0950  
                   l1400 0648                     l1064 0986                     l1056 0962  
                   l1048 0952                     l1410 0682                     l1402 0650  
                   l1066 0988                     l1058 0980                     l1420 06A8  
                   l1412 068A                     l1404 0658                     l1068 098A  
                   l1422 06B0                     l1414 068C                     l1406 0666  
                   l1430 06CC                     l1502 0A90                     l1416 0692  
                   l1408 066C                     l1440 0700                     l1432 06D4  
                   l1600 0180                     l1418 0698                     l1450 073C  
                   l1442 0708                     l1434 06D8                     l1426 06BA  
                   l1370 08F6                     l1610 01E0                     l1602 019A  
                   l1452 0742                     l1444 0710                     l1436 06E6  
                   l1428 06BE                     l1620 0226                     l1612 01E4  
                   l1604 01B4                     l1470 0790                     l1462 076A  
                   l1390 0614                     l1382 05F6                     l1446 071E  
                   l1454 0748                     l1438 06EE                     l1366 08B2  
                   l1630 027E                     l1622 0238                     l1614 01F0  
                   l1606 01B8                     l1376 0A6A                     l1480 07D6  
                   l1464 0774                     l1392 0622                     l1384 05FA  
                   l1456 0758                     l1448 0734                     l1640 050A  
                   l1632 0292                     l1624 023C                     l1616 01FC  
                   l1608 01D4                     l1560 001E                     l1800 085C  
                   l1378 0A86                     l1482 07F2                     l1394 062A  
                   l1386 0608                     l1458 0760                     l1490 031C  
                   l1650 0580                     l1642 0542                     l1634 0298  
                   l1626 0258                     l1618 0204                     l1570 0046  
                   l1562 0026                     l1484 07F6                     l1476 0798  
                   l1396 062E                     l1388 0610                     l1492 0408  
                   l1660 05D4                     l1652 058E                     l1644 0546  
                   l1636 02B4                     l1628 0264                     l1572 0052  
                   l1564 002E                     l1556 0012                     l1804 0868  
                   l1478 07D2                     l1398 0636                     l1486 02E8  
                   l1494 09E4                     l1654 0592                     l1646 055C  
                   l1662 05E2                     l1590 0108                     l1582 0080  
                   l1574 0064                     l1638 02D4                     l1566 0036  
                   l1558 0016                     l1488 0308                     l1496 09F6  
                   l1656 05AE                     l1648 0568                     l1584 00D0  
                   l1592 0128                     l1576 0078                     l1568 003E  
                   l1498 0A1E                     l1658 05C0                     l1586 00EA  
                   l1850 0880                     l1852 090C                     l1588 0104  
                   l1598 0130                     l1790 081C                     l1792 0824  
                   l1794 082C                     l1796 083C                     l1788 0814  
                   l1798 084C                     u1100 0124                     u1101 0120  
                   u1110 01D4                     u1111 01D0                     u1200 05F4  
                   u1120 0226                     u1201 05F0                     u1121 0222  
                   u1130 0238                     u1131 0234                     u1140 0258  
                   u1141 0254                     u1150 027E                     u1151 027A  
                   u1160 0292                     u1080 0064                     u1161 028E  
                   u1081 0060                     u1170 02E6                     u1090 0078  
                   u1171 02E2                     u1091 0074                     u1180 05AE  
                   u1181 05AA                     u1190 05C0                     u1191 05BC  
                   u1337 01FE                     u1347 0586                     u1357 05DA  
                   _main 0814                     _init 093C                     _mode 0003  
                   _seed 0037                     _time 09E4                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0079  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___param_bank 000000                    ?_main 003B                    ?_init 003B  
        __end_of___awdiv 06BA          __end_of___awmod 076A                    ?_time 0040  
        ___awdiv@divisor 0048                    i2l215 09D2                    i2l216 09E0  
        ___awdiv@counter 004A                    _H_ISR 0008                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _count 0001          __end_of_lighton 040E  
                  _plane 0005                    _srand 0A90                    tablat 000FF5  
                  time@t 0040          __end_of_speedup 02E8                    ttemp5 007A  
                  ttemp6 007D                    ttemp7 0081                    status 000FD8  
                  wtemp8 007A          __initialization 0A30             __end_of_main 08B2  
           __end_of_init 0990             __end_of_time 0A30                   ??_main 0080  
                 ??_init 0040                   ??_time 0048            __activetblptr 000002  
                 ?_H_ISR 003B                   _ADCON1 000FC1                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0046                   ?_srand 0048  
                 i2l1350 09A4                   i2l1352 09AC                   i2l1354 09B4  
                 i2l1356 09B6                   i2l1348 0992         __end_of_cubeidle 05F6  
                 ___wmul 0A6A                ??___awdiv 004A                ??___awmod 0044  
                 _bounds 0067              lighton@prev 0056                   clear_0 0A56  
       ___awdiv@quotient 004C          ___awmod@divisor 0042                   isa$std 000001  
        ___awmod@counter 0044                ??_lighton 0058             __pdataCOMRAM 0067  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 srand@s 0048                ??_speedup 005A               __accesstop 0080  
__end_of__initialization 0A5C            ___rparam_used 000001            __end_of_H_ISR 09E4  
         __pcstackCOMRAM 003B            __end_of_srand 0AAA                  ??_H_ISR 003B  
                ??_srand 004A               _clear_cube 076A                  ?___wmul 004E  
                i2u79_40 09D2                  i2u79_41 09CE                ?_cubeidle 003B  
             _draw_plane 040E                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 05F6                  ___awmod 06BA                  __pcinit 0A30  
                __ramtop 0600                  __ptext0 0814                  __ptext1 0012  
                __ptext2 093C                  __ptext3 050A                  __ptext4 09E4  
                __ptext5 0A90                  __ptext6 02E8                  __ptext7 08B2  
                __ptext8 040E                  __ptext9 06BA                  _lighton 02E8  
       ___awmod@dividend 0040                  _speedup 0012               ??_cubeidle 005A  
         __pintcode_body 0990     end_of_initialization 0A5C            __Lmediumconst 0000  
                int_func 0990        __end_of_set_plane 093C              ?_clear_cube 003B  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _TRISAbits 000F92                _TRISCbits 000F94  
              _TRISEbits 000F96              ?_draw_plane 003B              speedup@dcnt 005D  
         __end_of___wmul 0A90            __pidataCOMRAM 0AAA      start_initialization 0A30  
               ??___wmul 0052              __pbssCOMRAM 0001            __pcstackBANK0 0080  
              __pintcode 0008                 ?___awdiv 0046                 ?___awmod 0040  
             H_ISR@value 003D                 ?_lighton 0054                 ?_speedup 003B  
         ___wmul@product 0052                 _LATAbits 000F89                 _LATBbits 000F8A  
               _LATCbits 000F8B               set_plane@a 004E                 _LATDbits 000F8C  
               _LATEbits 000F8D                 _PIE1bits 000F9D             ??_clear_cube 0054  
               _PIR1bits 000F9E                _set_plane 08B2               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0        ___wmul@multiplier 004E               speedup@del 005F  
              cubeidle@i 0062       __end_of_clear_cube 0814             ??_draw_plane 0040  
              copy_data0 0A44                 __Hrparam 0000                 __Lrparam 0000  
             ?_set_plane 004E       __end_of_draw_plane 050A                 __ptext10 05F6  
               __ptext11 076A                 __ptext12 0A6A                 _cubeidle 050A  
               isa$xinst 000000                 int$flags 0079               _INTCONbits 000FF2  
            clear_cube@i 0056              clear_cube@j 0058                 lighton@x 0054  
               intlevel2 0000               _OSCCONbits 000FD3           H_ISR@mapResult 003F  
            ??_set_plane 0050                 speedup@i 0061                 speedup@j 0063  
