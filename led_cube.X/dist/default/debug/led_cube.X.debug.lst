

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 12 06:02:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Version 2.40
    40                           ; Generated 04/07/2022 GMT
    41                           ; 
    42                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     _ADRESL	set	4035
    75   000000                     _ADRESH	set	4036
    76   000000                     _LATBbits	set	3978
    77   000000                     _LATCbits	set	3979
    78   000000                     _ADCON0bits	set	4034
    79   000000                     _TRISCbits	set	3988
    80   000000                     _TRISAbits	set	3986
    81   000000                     _TRISEbits	set	3990
    82   000000                     _LATAbits	set	3977
    83   000000                     _TRISA	set	3986
    84   000000                     _PIR1bits	set	3998
    85   000000                     _PIE1bits	set	3997
    86   000000                     _ADCON2bits	set	4032
    87   000000                     _ADCON1	set	4033
    88   000000                     _OSCCONbits	set	4051
    89   000000                     _INTCONbits	set	4082
    90   000000                     _TRISE	set	3990
    91   000000                     _TRISD	set	3989
    92   000000                     _TRISC	set	3988
    93   000000                     _TRISB	set	3987
    94   000000                     _LATEbits	set	3981
    95   000000                     _LATDbits	set	3980
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100   001A7C                     __pcinit:
   101                           	callstack 0
   102   001A7C                     start_initialization:
   103                           	callstack 0
   104   001A7C                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to BANK0 (50 bytes)
   108   001A7C  EE00  F080         	lfsr	0,__pbssBANK0
   109   001A80  0E32               	movlw	50
   110   001A82                     clear_0:
   111   001A82  6AEE               	clrf	postinc0,c
   112   001A84  06E8               	decf	wreg,f,c
   113   001A86  E1FD               	bnz	clear_0
   114                           
   115                           ; Clear objects allocated to COMRAM (6 bytes)
   116   001A88  6A59               	clrf	(__pbssCOMRAM+5)& (0+255),c
   117   001A8A  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   118   001A8C  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   119   001A8E  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   120   001A90  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   121   001A92  6A54               	clrf	__pbssCOMRAM& (0+255),c
   122   001A94                     end_of_initialization:
   123                           	callstack 0
   124   001A94                     __end_of__initialization:
   125                           	callstack 0
   126   001A94  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127   001A96  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128   001A98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   129   001A9A  6EF8               	movwf	tblptru,c
   130   001A9C  0100               	movlb	0
   131   001A9E  EFC6  F00A         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134   000054                     __pbssCOMRAM:
   135                           	callstack 0
   136   000054                     _mode:
   137                           	callstack 0
   138   000054                     	ds	2
   139   000056                     _seed:
   140                           	callstack 0
   141   000056                     	ds	4
   142                           
   143                           	psect	bssBANK0
   144   000080                     __pbssBANK0:
   145                           	callstack 0
   146   000080                     _plane:
   147                           	callstack 0
   148   000080                     	ds	50
   149                           
   150                           	psect	cstackCOMRAM
   151   000001                     __pcstackCOMRAM:
   152                           	callstack 0
   153   000001                     ??_H_ISR:
   154                           
   155                           ; 1 bytes @ 0x0
   156   000001                     	ds	2
   157   000003                     H_ISR@value:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x2
   161   000003                     	ds	2
   162   000005                     H_ISR@mapResult:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x4
   166   000005                     	ds	1
   167   000006                     ?___lmul:
   168                           	callstack 0
   169   000006                     ?_time:
   170                           	callstack 0
   171   000006                     plane_on@a:
   172                           	callstack 0
   173   000006                     time@t:
   174                           	callstack 0
   175   000006                     ___lmul@multiplier:
   176                           	callstack 0
   177                           
   178                           ; 4 bytes @ 0x5
   179   000006                     	ds	2
   180   000008                     ??_plane_on:
   181                           
   182                           ; 1 bytes @ 0x7
   183   000008                     	ds	2
   184   00000A                     ___lmul@multiplicand:
   185                           	callstack 0
   186                           
   187                           ; 4 bytes @ 0x9
   188   00000A                     	ds	4
   189   00000E                     srand@s:
   190                           	callstack 0
   191   00000E                     ___lmul@product:
   192                           	callstack 0
   193                           
   194                           ; 4 bytes @ 0xD
   195   00000E                     	ds	2
   196   000010                     ??_srand:
   197                           
   198                           ; 1 bytes @ 0xF
   199   000010                     	ds	2
   200   000012                     ?_rand:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x11
   204   000012                     	ds	2
   205   000014                     ??_rand:
   206                           
   207                           ; 1 bytes @ 0x13
   208   000014                     	ds	4
   209   000018                     ?___awmod:
   210                           	callstack 0
   211   000018                     ___awmod@dividend:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x17
   215   000018                     	ds	2
   216   00001A                     ___awmod@divisor:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x19
   220   00001A                     	ds	2
   221   00001C                     ___awmod@counter:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x1B
   225   00001C                     	ds	1
   226   00001D                     ___awmod@sign:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1C
   230   00001D                     	ds	1
   231   00001E                     ?_move:
   232                           	callstack 0
   233   00001E                     ?___awdiv:
   234                           	callstack 0
   235   00001E                     move@x:
   236                           	callstack 0
   237   00001E                     ___awdiv@dividend:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x1D
   241   00001E                     	ds	2
   242   000020                     move@r:
   243                           	callstack 0
   244   000020                     ___awdiv@divisor:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x1F
   248   000020                     	ds	2
   249   000022                     ___awdiv@counter:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x21
   253   000022                     	ds	1
   254   000023                     ___awdiv@sign:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x22
   258   000023                     	ds	1
   259   000024                     ___awdiv@quotient:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x23
   263   000024                     	ds	2
   264   000026                     ?___wmul:
   265                           	callstack 0
   266   000026                     set_plane@a:
   267                           	callstack 0
   268   000026                     ___wmul@multiplier:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x25
   272   000026                     	ds	2
   273   000028                     ___wmul@multiplicand:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x27
   277   000028                     	ds	2
   278   00002A                     ___wmul@product:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x29
   282   00002A                     	ds	2
   283   00002C                     ??_clear_plane:
   284   00002C                     ??_clear_cube:
   285   00002C                     lighton@x:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x2B
   289   00002C                     	ds	2
   290   00002E                     clear_plane@i:
   291                           	callstack 0
   292   00002E                     clear_cube@i:
   293                           	callstack 0
   294   00002E                     lighton@prev:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x2D
   298   00002E                     	ds	2
   299   000030                     ??_lighton:
   300   000030                     clear_plane@j:
   301                           	callstack 0
   302   000030                     clear_cube@j:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x2F
   306   000030                     	ds	2
   307   000032                     random_pattern@id:
   308                           	callstack 0
   309   000032                     rainfall@id:
   310                           	callstack 0
   311   000032                     scan@id:
   312                           	callstack 0
   313   000032                     speedup@id:
   314                           	callstack 0
   315   000032                     cubeidle@id:
   316                           	callstack 0
   317   000032                     pulsing@id:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x31
   321   000032                     	ds	2
   322   000034                     ??_random_pattern:
   323   000034                     ??_rainfall:
   324   000034                     ??_scan:
   325   000034                     ??_speedup:
   326   000034                     ??_cubeidle:
   327   000034                     ??_pulsing:
   328                           
   329                           ; 1 bytes @ 0x33
   330   000034                     	ds	1
   331   000035                     speedup@j_746:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x34
   335   000035                     	ds	1
   336   000036                     rainfall@x:
   337                           	callstack 0
   338   000036                     pulsing@i_753:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x35
   342   000036                     	ds	1
   343   000037                     speedup@dcnt:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x36
   347   000037                     	ds	1
   348   000038                     scan@i:
   349                           	callstack 0
   350   000038                     pulsing@j:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x37
   354   000038                     	ds	1
   355   000039                     speedup@del:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x38
   359   000039                     	ds	1
   360   00003A                     scan@j:
   361                           	callstack 0
   362   00003A                     pulsing@i:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x39
   366   00003A                     	ds	1
   367   00003B                     speedup@i:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x3A
   371   00003B                     	ds	1
   372   00003C                     random_pattern@prevr:
   373                           	callstack 0
   374   00003C                     scan@i_728:
   375                           	callstack 0
   376   00003C                     cubeidle@i:
   377                           	callstack 0
   378   00003C                     pulsing@i_755:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x3B
   382   00003C                     	ds	1
   383   00003D                     speedup@j:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x3C
   387   00003D                     	ds	1
   388   00003E                     random_pattern@prevr2:
   389                           	callstack 0
   390   00003E                     scan@i_729:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x3D
   394   00003E                     	ds	1
   395   00003F                     speedup@j_745:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x3E
   399   00003F                     	ds	1
   400   000040                     random_pattern@prevx:
   401                           	callstack 0
   402   000040                     scan@i_730:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x3F
   406   000040                     	ds	2
   407   000042                     random_pattern@prevx2:
   408                           	callstack 0
   409   000042                     scan@i_731:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x41
   413   000042                     	ds	2
   414   000044                     random_pattern@x:
   415                           	callstack 0
   416   000044                     scan@j_732:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x43
   420   000044                     	ds	2
   421   000046                     random_pattern@x2:
   422                           	callstack 0
   423   000046                     scan@i_733:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x45
   427   000046                     	ds	2
   428   000048                     random_pattern@r2:
   429                           	callstack 0
   430   000048                     scan@j_734:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x47
   434   000048                     	ds	2
   435   00004A                     random_pattern@r:
   436                           	callstack 0
   437   00004A                     scan@i_735:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x49
   441   00004A                     	ds	2
   442   00004C                     scan@j_736:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x4B
   446   00004C                     	ds	2
   447   00004E                     scan@i_737:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x4D
   451   00004E                     	ds	2
   452   000050                     scan@j_738:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x4F
   456   000050                     	ds	2
   457   000052                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x51
   460   000052                     	ds	2
   461                           
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 382 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   481 ;;      Params:         0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0
   483 ;;      Temps:          2       0       0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels required when called: 5
   487 ;; This function calls:
   488 ;;		_clear_cube
   489 ;;		_cubeidle
   490 ;;		_init
   491 ;;		_pulsing
   492 ;;		_rainfall
   493 ;;		_random_pattern
   494 ;;		_scan
   495 ;;		_speedup
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text0
   502   00158C                     __ptext0:
   503                           	callstack 0
   504   00158C                     _main:
   505                           	callstack 26
   506   00158C                     
   507                           ;main.c: 383:                 break;
   508   00158C  ECC4  F00C         	call	_init	;wreg free
   509   001590  EFFC  F00A         	goto	l2576
   510   001594                     l2560:
   511                           
   512                           ;main.c: 392:                 break;
   513   001594  0E00               	movlw	0
   514   001596  6E33               	movwf	(cubeidle@id+1)^0,c
   515   001598  0E00               	movlw	0
   516   00159A  6E32               	movwf	cubeidle@id^0,c
   517   00159C  EC7D  F009         	call	_cubeidle	;wreg free
   518                           
   519                           ;main.c: 393:             default:
   520   0015A0  EFFC  F00A         	goto	l2576
   521   0015A4                     l2562:
   522                           
   523                           ;main.c: 395:                 break;
   524   0015A4  0E00               	movlw	0
   525   0015A6  6E33               	movwf	(speedup@id+1)^0,c
   526   0015A8  0E01               	movlw	1
   527   0015AA  6E32               	movwf	speedup@id^0,c
   528   0015AC  ECAA  F004         	call	_speedup	;wreg free
   529                           
   530                           ;main.c: 396:         }
   531   0015B0  EFFC  F00A         	goto	l2576
   532   0015B4                     l2564:
   533                           
   534                           ;main.c: 398:     };
   535   0015B4  0E00               	movlw	0
   536   0015B6  6E33               	movwf	(pulsing@id+1)^0,c
   537   0015B8  0E02               	movlw	2
   538   0015BA  6E32               	movwf	pulsing@id^0,c
   539   0015BC  EC1C  F006         	call	_pulsing	;wreg free
   540                           
   541                           ;main.c: 399:     return;
   542   0015C0  EFFC  F00A         	goto	l2576
   543   0015C4                     l2566:
   544                           
   545                           ;main.c: 401: 
   546   0015C4  0E00               	movlw	0
   547   0015C6  6E33               	movwf	(random_pattern@id+1)^0,c
   548   0015C8  0E03               	movlw	3
   549   0015CA  6E32               	movwf	random_pattern@id^0,c
   550   0015CC  EC09  F000         	call	_random_pattern	;wreg free
   551                           
   552                           ;main.c: 402: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
   553   0015D0  EFFC  F00A         	goto	l2576
   554   0015D4                     l2568:
   555                           
   556                           ;main.c: 404:     int value = ((ADRESH<<8) + ADRESL);
   557   0015D4  0E00               	movlw	0
   558   0015D6  6E33               	movwf	(rainfall@id+1)^0,c
   559   0015D8  0E04               	movlw	4
   560   0015DA  6E32               	movwf	rainfall@id^0,c
   561   0015DC  ECF6  F009         	call	_rainfall	;wreg free
   562                           
   563                           ;main.c: 405: 
   564   0015E0  EFFC  F00A         	goto	l2576
   565   0015E4                     l2570:
   566                           
   567                           ;main.c: 407:     unsigned char mapResult = 0;
   568   0015E4  0E00               	movlw	0
   569   0015E6  6E33               	movwf	(scan@id+1)^0,c
   570   0015E8  0E05               	movlw	5
   571   0015EA  6E32               	movwf	scan@id^0,c
   572   0015EC  EC96  F002         	call	_scan	;wreg free
   573                           
   574                           ;main.c: 408: 
   575   0015F0  EFFC  F00A         	goto	l2576
   576   0015F4                     l2572:
   577                           
   578                           ;main.c: 410:         value -= 180;
   579   0015F4  EC7C  F00B         	call	_clear_cube	;wreg free
   580   0015F8                     l2576:
   581   0015F8  C054  F052         	movff	_mode,??_main
   582   0015FC  C055  F053         	movff	_mode+1,??_main+1
   583                           
   584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   585                           ; Switch size 1, requested type "simple"
   586                           ; Number of cases is 1, Range of values is 0 to 0
   587                           ; switch strategies available:
   588                           ; Name         Instructions Cycles
   589                           ; simple_byte            4     3 (average)
   590                           ;	Chosen strategy is simple_byte
   591   001600  5053               	movf	(??_main+1)^0,w,c
   592   001602  0A00               	xorlw	0	; case 0
   593   001604  B4D8               	btfsc	status,2,c
   594   001606  EF07  F00B         	goto	l2622
   595   00160A  EFFA  F00A         	goto	l2572
   596   00160E                     l2622:
   597                           
   598                           ; Switch size 1, requested type "simple"
   599                           ; Number of cases is 6, Range of values is 0 to 5
   600                           ; switch strategies available:
   601                           ; Name         Instructions Cycles
   602                           ; simple_byte           19    10 (average)
   603                           ;	Chosen strategy is simple_byte
   604   00160E  5052               	movf	??_main^0,w,c
   605   001610  0A00               	xorlw	0	; case 0
   606   001612  B4D8               	btfsc	status,2,c
   607   001614  EFCA  F00A         	goto	l2560
   608   001618  0A01               	xorlw	1	; case 1
   609   00161A  B4D8               	btfsc	status,2,c
   610   00161C  EFD2  F00A         	goto	l2562
   611   001620  0A03               	xorlw	3	; case 2
   612   001622  B4D8               	btfsc	status,2,c
   613   001624  EFDA  F00A         	goto	l2564
   614   001628  0A01               	xorlw	1	; case 3
   615   00162A  B4D8               	btfsc	status,2,c
   616   00162C  EFE2  F00A         	goto	l2566
   617   001630  0A07               	xorlw	7	; case 4
   618   001632  B4D8               	btfsc	status,2,c
   619   001634  EFEA  F00A         	goto	l2568
   620   001638  0A01               	xorlw	1	; case 5
   621   00163A  B4D8               	btfsc	status,2,c
   622   00163C  EFF2  F00A         	goto	l2570
   623   001640  EFFA  F00A         	goto	l2572
   624   001644  EF07  F000         	goto	start
   625   001648                     __end_of_main:
   626                           	callstack 0
   627                           
   628 ;; *************** function _speedup *****************
   629 ;; Defined at:
   630 ;;		line 285 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  id              2   49[COMRAM] int 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  j               2   62[COMRAM] int 
   635 ;;  j               2   60[COMRAM] int 
   636 ;;  j               2   52[COMRAM] int 
   637 ;;  i               2   58[COMRAM] int 
   638 ;;  del             2   56[COMRAM] int 
   639 ;;  dcnt            2   54[COMRAM] int 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         2       0       0       0       0       0       0
   650 ;;      Locals:        12       0       0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0       0       0
   652 ;;      Totals:        15       0       0       0       0       0       0
   653 ;;Total ram usage:       15 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 3
   656 ;; This function calls:
   657 ;;		___awmod
   658 ;;		___wmul
   659 ;;		_clear_cube
   660 ;;		_draw_plane
   661 ;;		_set_plane
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text1
   668   000954                     __ptext1:
   669                           	callstack 0
   670   000954                     _speedup:
   671                           	callstack 27
   672   000954                     
   673                           ;main.c: 286:                 plane[j][0] = 0;
   674   000954  EC7C  F00B         	call	_clear_cube	;wreg free
   675   000958                     
   676                           ;main.c: 287:                 plane[j][4] = 0;
   677   000958  0E00               	movlw	0
   678   00095A  6E3C               	movwf	(speedup@i+1)^0,c
   679   00095C  0E00               	movlw	0
   680   00095E  6E3B               	movwf	speedup@i^0,c
   681   000960  0E00               	movlw	0
   682   000962  6E38               	movwf	(speedup@dcnt+1)^0,c
   683   000964  0E00               	movlw	0
   684   000966  6E37               	movwf	speedup@dcnt^0,c
   685   000968  0E00               	movlw	0
   686   00096A  6E3A               	movwf	(speedup@del+1)^0,c
   687   00096C  0E32               	movlw	50
   688   00096E  6E39               	movwf	speedup@del^0,c
   689   000970                     
   690                           ;main.c: 288:                 plane[0][j] = 0;
   691   000970  0E00               	movlw	0
   692   000972  0100               	movlb	0	; () banked
   693   000974  6F81               	movwf	(_plane+1)& (0+255),b
   694   000976  0E01               	movlw	1
   695   000978  6F80               	movwf	_plane& (0+255),b
   696   00097A                     
   697                           ; BSR set to: 0
   698                           ;main.c: 289:                 plane[4][j] = 0;
   699   00097A  0E00               	movlw	0
   700   00097C  6F89               	movwf	(_plane+9)& (0+255),b
   701   00097E  0E01               	movlw	1
   702   000980  6F88               	movwf	(_plane+8)& (0+255),b
   703   000982                     
   704                           ; BSR set to: 0
   705                           ;main.c: 290:             }
   706   000982  0E00               	movlw	0
   707   000984  6FA9               	movwf	(_plane+41)& (0+255),b
   708   000986  0E01               	movlw	1
   709   000988  6FA8               	movwf	(_plane+40)& (0+255),b
   710   00098A                     
   711                           ; BSR set to: 0
   712                           ;main.c: 291:         }
   713   00098A  0E00               	movlw	0
   714   00098C  6FB1               	movwf	(_plane+49)& (0+255),b
   715   00098E  0E01               	movlw	1
   716   000990  6FB0               	movwf	(_plane+48)& (0+255),b
   717                           
   718                           ;main.c: 292: 
   719   000992  EF0F  F006         	goto	l2448
   720   000996                     l2382:
   721                           
   722                           ;main.c: 293:         set_plane(5);
   723   000996  503B               	movf	speedup@i^0,w,c
   724   000998  103C               	iorwf	(speedup@i+1)^0,w,c
   725   00099A  B4D8               	btfsc	status,2,c
   726   00099C  EFD2  F004         	goto	u2041
   727   0009A0  EFD4  F004         	goto	u2040
   728   0009A4                     u2041:
   729   0009A4  EFDE  F004         	goto	l2386
   730   0009A8                     u2040:
   731   0009A8  0E04               	movlw	4
   732   0009AA  183B               	xorwf	speedup@i^0,w,c
   733   0009AC  103C               	iorwf	(speedup@i+1)^0,w,c
   734   0009AE  A4D8               	btfss	status,2,c
   735   0009B0  EFDC  F004         	goto	u2051
   736   0009B4  EFDE  F004         	goto	u2050
   737   0009B8                     u2051:
   738   0009B8  EF36  F005         	goto	l2402
   739   0009BC                     u2050:
   740   0009BC                     l2386:
   741                           
   742                           ;main.c: 294:         draw_plane();
   743   0009BC  0E00               	movlw	0
   744   0009BE  6E3E               	movwf	(speedup@j+1)^0,c
   745   0009C0  0E01               	movlw	1
   746   0009C2  6E3D               	movwf	speedup@j^0,c
   747   0009C4                     l2392:
   748                           
   749                           ;main.c: 295:         set_plane(i);
   750   0009C4  C03D  F026         	movff	speedup@j,___wmul@multiplier
   751   0009C8  C03E  F027         	movff	speedup@j+1,___wmul@multiplier+1
   752   0009CC  0E00               	movlw	0
   753   0009CE  6E29               	movwf	(___wmul@multiplicand+1)^0,c
   754   0009D0  0E0A               	movlw	10
   755   0009D2  6E28               	movwf	___wmul@multiplicand^0,c
   756   0009D4  EC51  F00D         	call	___wmul	;wreg free
   757   0009D8  0E80               	movlw	low _plane
   758   0009DA  2426               	addwf	?___wmul^0,w,c
   759   0009DC  6ED9               	movwf	fsr2l,c
   760   0009DE  0E00               	movlw	high _plane
   761   0009E0  2027               	addwfc	(?___wmul+1)^0,w,c
   762   0009E2  6EDA               	movwf	fsr2h,c
   763   0009E4  0E01               	movlw	1
   764   0009E6  6EDE               	movwf	postinc2,c
   765   0009E8  0E00               	movlw	0
   766   0009EA  6EDD               	movwf	postdec2,c
   767                           
   768                           ;main.c: 296:         for(int j=0;j<del && mode == id;j++)_delay((unsigned long)((1)*(40
      +                          00000/4000.0)));
   769   0009EC  C03D  F026         	movff	speedup@j,___wmul@multiplier
   770   0009F0  C03E  F027         	movff	speedup@j+1,___wmul@multiplier+1
   771   0009F4  0E00               	movlw	0
   772   0009F6  6E29               	movwf	(___wmul@multiplicand+1)^0,c
   773   0009F8  0E0A               	movlw	10
   774   0009FA  6E28               	movwf	___wmul@multiplicand^0,c
   775   0009FC  EC51  F00D         	call	___wmul	;wreg free
   776   000A00  0E88               	movlw	low (_plane+8)
   777   000A02  2426               	addwf	?___wmul^0,w,c
   778   000A04  6ED9               	movwf	fsr2l,c
   779   000A06  0E00               	movlw	high (_plane+8)
   780   000A08  2027               	addwfc	(?___wmul+1)^0,w,c
   781   000A0A  6EDA               	movwf	fsr2h,c
   782   000A0C  0E01               	movlw	1
   783   000A0E  6EDE               	movwf	postinc2,c
   784   000A10  0E00               	movlw	0
   785   000A12  6EDD               	movwf	postdec2,c
   786   000A14                     
   787                           ;main.c: 297:         dcnt++;
   788   000A14  90D8               	bcf	status,0,c
   789   000A16  343D               	rlcf	speedup@j^0,w,c
   790   000A18  6ED9               	movwf	fsr2l,c
   791   000A1A  343E               	rlcf	(speedup@j+1)^0,w,c
   792   000A1C  6EDA               	movwf	fsr2h,c
   793   000A1E  0E80               	movlw	low _plane
   794   000A20  26D9               	addwf	fsr2l,f,c
   795   000A22  0E00               	movlw	high _plane
   796   000A24  22DA               	addwfc	fsr2h,f,c
   797   000A26  0E01               	movlw	1
   798   000A28  6EDE               	movwf	postinc2,c
   799   000A2A  0E00               	movlw	0
   800   000A2C  6EDD               	movwf	postdec2,c
   801   000A2E                     
   802                           ;main.c: 298:         if(del>10)del-=2;
   803   000A2E  90D8               	bcf	status,0,c
   804   000A30  343D               	rlcf	speedup@j^0,w,c
   805   000A32  6ED9               	movwf	fsr2l,c
   806   000A34  343E               	rlcf	(speedup@j+1)^0,w,c
   807   000A36  6EDA               	movwf	fsr2h,c
   808   000A38  0EA8               	movlw	low (_plane+40)
   809   000A3A  26D9               	addwf	fsr2l,f,c
   810   000A3C  0E00               	movlw	high (_plane+40)
   811   000A3E  22DA               	addwfc	fsr2h,f,c
   812   000A40  0E01               	movlw	1
   813   000A42  6EDE               	movwf	postinc2,c
   814   000A44  0E00               	movlw	0
   815   000A46  6EDD               	movwf	postdec2,c
   816   000A48                     
   817                           ;main.c: 299:         else if(del>0 && dcnt == 10)del-=1;
   818   000A48  4A3D               	infsnz	speedup@j^0,f,c
   819   000A4A  2A3E               	incf	(speedup@j+1)^0,f,c
   820   000A4C  BE3E               	btfsc	(speedup@j+1)^0,7,c
   821   000A4E  EF32  F005         	goto	u2061
   822   000A52  503E               	movf	(speedup@j+1)^0,w,c
   823   000A54  E109               	bnz	u2060
   824   000A56  0E04               	movlw	4
   825   000A58  5C3D               	subwf	speedup@j^0,w,c
   826   000A5A  A0D8               	btfss	status,0,c
   827   000A5C  EF32  F005         	goto	u2061
   828   000A60  EF34  F005         	goto	u2060
   829   000A64                     u2061:
   830   000A64  EFE2  F004         	goto	l2392
   831   000A68                     u2060:
   832   000A68  EF8C  F005         	goto	l2418
   833   000A6C                     l2402:
   834                           
   835                           ;main.c: 301:         i++;
   836   000A6C  0E00               	movlw	0
   837   000A6E  6E40               	movwf	(speedup@j_745+1)^0,c
   838   000A70  0E01               	movlw	1
   839   000A72  6E3F               	movwf	speedup@j_745^0,c
   840   000A74                     l2408:
   841                           
   842                           ;main.c: 302:         i%=5;
   843   000A74  C03F  F026         	movff	speedup@j_745,___wmul@multiplier
   844   000A78  C040  F027         	movff	speedup@j_745+1,___wmul@multiplier+1
   845   000A7C  0E00               	movlw	0
   846   000A7E  6E29               	movwf	(___wmul@multiplicand+1)^0,c
   847   000A80  0E0A               	movlw	10
   848   000A82  6E28               	movwf	___wmul@multiplicand^0,c
   849   000A84  EC51  F00D         	call	___wmul	;wreg free
   850   000A88  0E80               	movlw	low _plane
   851   000A8A  2426               	addwf	?___wmul^0,w,c
   852   000A8C  6ED9               	movwf	fsr2l,c
   853   000A8E  0E00               	movlw	high _plane
   854   000A90  2027               	addwfc	(?___wmul+1)^0,w,c
   855   000A92  6EDA               	movwf	fsr2h,c
   856   000A94  0E00               	movlw	0
   857   000A96  6EDE               	movwf	postinc2,c
   858   000A98  0E00               	movlw	0
   859   000A9A  6EDD               	movwf	postdec2,c
   860                           
   861                           ;main.c: 303:     }
   862   000A9C  C03F  F026         	movff	speedup@j_745,___wmul@multiplier
   863   000AA0  C040  F027         	movff	speedup@j_745+1,___wmul@multiplier+1
   864   000AA4  0E00               	movlw	0
   865   000AA6  6E29               	movwf	(___wmul@multiplicand+1)^0,c
   866   000AA8  0E0A               	movlw	10
   867   000AAA  6E28               	movwf	___wmul@multiplicand^0,c
   868   000AAC  EC51  F00D         	call	___wmul	;wreg free
   869   000AB0  0E88               	movlw	low (_plane+8)
   870   000AB2  2426               	addwf	?___wmul^0,w,c
   871   000AB4  6ED9               	movwf	fsr2l,c
   872   000AB6  0E00               	movlw	high (_plane+8)
   873   000AB8  2027               	addwfc	(?___wmul+1)^0,w,c
   874   000ABA  6EDA               	movwf	fsr2h,c
   875   000ABC  0E00               	movlw	0
   876   000ABE  6EDE               	movwf	postinc2,c
   877   000AC0  0E00               	movlw	0
   878   000AC2  6EDD               	movwf	postdec2,c
   879   000AC4                     
   880                           ;main.c: 304: }
   881   000AC4  90D8               	bcf	status,0,c
   882   000AC6  343F               	rlcf	speedup@j_745^0,w,c
   883   000AC8  6ED9               	movwf	fsr2l,c
   884   000ACA  3440               	rlcf	(speedup@j_745+1)^0,w,c
   885   000ACC  6EDA               	movwf	fsr2h,c
   886   000ACE  0E80               	movlw	low _plane
   887   000AD0  26D9               	addwf	fsr2l,f,c
   888   000AD2  0E00               	movlw	high _plane
   889   000AD4  22DA               	addwfc	fsr2h,f,c
   890   000AD6  0E00               	movlw	0
   891   000AD8  6EDE               	movwf	postinc2,c
   892   000ADA  0E00               	movlw	0
   893   000ADC  6EDD               	movwf	postdec2,c
   894   000ADE                     
   895                           ;main.c: 305: 
   896   000ADE  90D8               	bcf	status,0,c
   897   000AE0  343F               	rlcf	speedup@j_745^0,w,c
   898   000AE2  6ED9               	movwf	fsr2l,c
   899   000AE4  3440               	rlcf	(speedup@j_745+1)^0,w,c
   900   000AE6  6EDA               	movwf	fsr2h,c
   901   000AE8  0EA8               	movlw	low (_plane+40)
   902   000AEA  26D9               	addwf	fsr2l,f,c
   903   000AEC  0E00               	movlw	high (_plane+40)
   904   000AEE  22DA               	addwfc	fsr2h,f,c
   905   000AF0  0E00               	movlw	0
   906   000AF2  6EDE               	movwf	postinc2,c
   907   000AF4  0E00               	movlw	0
   908   000AF6  6EDD               	movwf	postdec2,c
   909   000AF8                     
   910                           ;main.c: 306: void cubeidle(int id){
   911   000AF8  4A3F               	infsnz	speedup@j_745^0,f,c
   912   000AFA  2A40               	incf	(speedup@j_745+1)^0,f,c
   913   000AFC  BE40               	btfsc	(speedup@j_745+1)^0,7,c
   914   000AFE  EF8A  F005         	goto	u2071
   915   000B02  5040               	movf	(speedup@j_745+1)^0,w,c
   916   000B04  E109               	bnz	u2070
   917   000B06  0E04               	movlw	4
   918   000B08  5C3F               	subwf	speedup@j_745^0,w,c
   919   000B0A  A0D8               	btfss	status,0,c
   920   000B0C  EF8A  F005         	goto	u2071
   921   000B10  EF8C  F005         	goto	u2070
   922   000B14                     u2071:
   923   000B14  EF3A  F005         	goto	l2408
   924   000B18                     u2070:
   925   000B18                     l2418:
   926                           
   927                           ;main.c: 309:     lighton(0,-1);
   928   000B18  0E00               	movlw	0
   929   000B1A  6E27               	movwf	(set_plane@a+1)^0,c
   930   000B1C  0E05               	movlw	5
   931   000B1E  6E26               	movwf	set_plane@a^0,c
   932   000B20  EC71  F00D         	call	_set_plane	;wreg free
   933   000B24                     
   934                           ;main.c: 310:     while(mode == id){
   935   000B24  EC53  F008         	call	_draw_plane	;wreg free
   936   000B28                     
   937                           ;main.c: 311:         for(int i=1;i<125 && mode == 0;i++){
   938   000B28  C03B  F026         	movff	speedup@i,set_plane@a
   939   000B2C  C03C  F027         	movff	speedup@i+1,set_plane@a+1
   940   000B30  EC71  F00D         	call	_set_plane	;wreg free
   941   000B34                     
   942                           ;main.c: 312:             lighton(i,i-1);
   943   000B34  0E00               	movlw	0
   944   000B36  6E36               	movwf	(speedup@j_746+1)^0,c
   945   000B38  0E00               	movlw	0
   946   000B3A  6E35               	movwf	speedup@j_746^0,c
   947   000B3C  EFA6  F005         	goto	l229
   948   000B40                     l2426:
   949   000B40  0EC8               	movlw	200
   950   000B42                     u2227:
   951   000B42  D000               	nop2	
   952   000B44  2EE8               	decfsz	wreg,f,c
   953   000B46  D7FD               	bra	u2227
   954   000B48  4A35               	infsnz	speedup@j_746^0,f,c
   955   000B4A  2A36               	incf	(speedup@j_746+1)^0,f,c
   956   000B4C                     l229:
   957   000B4C  5039               	movf	speedup@del^0,w,c
   958   000B4E  5C35               	subwf	speedup@j_746^0,w,c
   959   000B50  5036               	movf	(speedup@j_746+1)^0,w,c
   960   000B52  0A80               	xorlw	128
   961   000B54  6E34               	movwf	??_speedup^0,c
   962   000B56  503A               	movf	(speedup@del+1)^0,w,c
   963   000B58  0A80               	xorlw	128
   964   000B5A  5834               	subwfb	??_speedup^0,w,c
   965   000B5C  B0D8               	btfsc	status,0,c
   966   000B5E  EFB3  F005         	goto	u2081
   967   000B62  EFB5  F005         	goto	u2080
   968   000B66                     u2081:
   969   000B66  EFC1  F005         	goto	l2432
   970   000B6A                     u2080:
   971   000B6A  5032               	movf	speedup@id^0,w,c
   972   000B6C  1854               	xorwf	_mode^0,w,c
   973   000B6E  E109               	bnz	u2090
   974   000B70  5033               	movf	(speedup@id+1)^0,w,c
   975   000B72  1855               	xorwf	(_mode+1)^0,w,c
   976   000B74  B4D8               	btfsc	status,2,c
   977   000B76  EFBF  F005         	goto	u2091
   978   000B7A  EFC1  F005         	goto	u2090
   979   000B7E                     u2091:
   980   000B7E  EFA0  F005         	goto	l2426
   981   000B82                     u2090:
   982   000B82                     l2432:
   983                           
   984                           ;main.c: 313:             _delay((unsigned long)((10)*(4000000/4000.0)));
   985   000B82  4A37               	infsnz	speedup@dcnt^0,f,c
   986   000B84  2A38               	incf	(speedup@dcnt+1)^0,f,c
   987   000B86                     
   988                           ;main.c: 314:         }
   989   000B86  BE3A               	btfsc	(speedup@del+1)^0,7,c
   990   000B88  EFCF  F005         	goto	u2101
   991   000B8C  503A               	movf	(speedup@del+1)^0,w,c
   992   000B8E  E109               	bnz	u2100
   993   000B90  0E0B               	movlw	11
   994   000B92  5C39               	subwf	speedup@del^0,w,c
   995   000B94  A0D8               	btfss	status,0,c
   996   000B96  EFCF  F005         	goto	u2101
   997   000B9A  EFD1  F005         	goto	u2100
   998   000B9E                     u2101:
   999   000B9E  EFD7  F005         	goto	l2438
  1000   000BA2                     u2100:
  1001   000BA2  0EFE               	movlw	254
  1002   000BA4  2639               	addwf	speedup@del^0,f,c
  1003   000BA6  0EFF               	movlw	255
  1004   000BA8  223A               	addwfc	(speedup@del+1)^0,f,c
  1005   000BAA  EFF1  F005         	goto	l2444
  1006   000BAE                     l2438:
  1007   000BAE  BE3A               	btfsc	(speedup@del+1)^0,7,c
  1008   000BB0  EFE2  F005         	goto	u2111
  1009   000BB4  503A               	movf	(speedup@del+1)^0,w,c
  1010   000BB6  E108               	bnz	u2110
  1011   000BB8  0439               	decf	speedup@del^0,w,c
  1012   000BBA  A0D8               	btfss	status,0,c
  1013   000BBC  EFE2  F005         	goto	u2111
  1014   000BC0  EFE4  F005         	goto	u2110
  1015   000BC4                     u2111:
  1016   000BC4  EFF1  F005         	goto	l2444
  1017   000BC8                     u2110:
  1018   000BC8  0E0A               	movlw	10
  1019   000BCA  1837               	xorwf	speedup@dcnt^0,w,c
  1020   000BCC  1038               	iorwf	(speedup@dcnt+1)^0,w,c
  1021   000BCE  A4D8               	btfss	status,2,c
  1022   000BD0  EFEC  F005         	goto	u2121
  1023   000BD4  EFEE  F005         	goto	u2120
  1024   000BD8                     u2121:
  1025   000BD8  EFF1  F005         	goto	l2444
  1026   000BDC                     u2120:
  1027   000BDC  0639               	decf	speedup@del^0,f,c
  1028   000BDE  A0D8               	btfss	status,0,c
  1029   000BE0  063A               	decf	(speedup@del+1)^0,f,c
  1030   000BE2                     l2444:
  1031                           
  1032                           ;main.c: 316:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1033   000BE2  C037  F018         	movff	speedup@dcnt,___awmod@dividend
  1034   000BE6  C038  F019         	movff	speedup@dcnt+1,___awmod@dividend+1
  1035   000BEA  0E00               	movlw	0
  1036   000BEC  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1037   000BEE  0E0A               	movlw	10
  1038   000BF0  6E1A               	movwf	___awmod@divisor^0,c
  1039   000BF2  EC24  F00B         	call	___awmod	;wreg free
  1040   000BF6  C018  F037         	movff	?___awmod,speedup@dcnt
  1041   000BFA  C019  F038         	movff	?___awmod+1,speedup@dcnt+1
  1042   000BFE                     
  1043                           ;main.c: 317:     }
  1044   000BFE  4A3B               	infsnz	speedup@i^0,f,c
  1045   000C00  2A3C               	incf	(speedup@i+1)^0,f,c
  1046                           
  1047                           ;main.c: 318: 
  1048   000C02  C03B  F018         	movff	speedup@i,___awmod@dividend
  1049   000C06  C03C  F019         	movff	speedup@i+1,___awmod@dividend+1
  1050   000C0A  0E00               	movlw	0
  1051   000C0C  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1052   000C0E  0E05               	movlw	5
  1053   000C10  6E1A               	movwf	___awmod@divisor^0,c
  1054   000C12  EC24  F00B         	call	___awmod	;wreg free
  1055   000C16  C018  F03B         	movff	?___awmod,speedup@i
  1056   000C1A  C019  F03C         	movff	?___awmod+1,speedup@i+1
  1057   000C1E                     l2448:
  1058                           
  1059                           ;main.c: 292: 
  1060   000C1E  5032               	movf	speedup@id^0,w,c
  1061   000C20  1854               	xorwf	_mode^0,w,c
  1062   000C22  E109               	bnz	u2130
  1063   000C24  5033               	movf	(speedup@id+1)^0,w,c
  1064   000C26  1855               	xorwf	(_mode+1)^0,w,c
  1065   000C28  B4D8               	btfsc	status,2,c
  1066   000C2A  EF19  F006         	goto	u2131
  1067   000C2E  EF1B  F006         	goto	u2130
  1068   000C32                     u2131:
  1069   000C32  EFCB  F004         	goto	l2382
  1070   000C36                     u2130:
  1071   000C36  0012               	return		;funcret
  1072   000C38                     __end_of_speedup:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _scan *****************
  1076 ;; Defined at:
  1077 ;;		line 228 in file "main.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  id              2   49[COMRAM] int 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  j               2   79[COMRAM] int 
  1082 ;;  j               2   75[COMRAM] int 
  1083 ;;  j               2   71[COMRAM] int 
  1084 ;;  j               2   67[COMRAM] int 
  1085 ;;  j               2   57[COMRAM] int 
  1086 ;;  i               2   77[COMRAM] int 
  1087 ;;  i               2   73[COMRAM] int 
  1088 ;;  i               2   69[COMRAM] int 
  1089 ;;  i               2   65[COMRAM] int 
  1090 ;;  i               2   63[COMRAM] int 
  1091 ;;  i               2   61[COMRAM] int 
  1092 ;;  i               2   59[COMRAM] int 
  1093 ;;  i               2   55[COMRAM] int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         2       0       0       0       0       0       0
  1104 ;;      Locals:        26       0       0       0       0       0       0
  1105 ;;      Temps:          4       0       0       0       0       0       0
  1106 ;;      Totals:        32       0       0       0       0       0       0
  1107 ;;Total ram usage:       32 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 3
  1110 ;; This function calls:
  1111 ;;		___wmul
  1112 ;;		_clear_cube
  1113 ;;		_clear_plane
  1114 ;;		_draw_plane
  1115 ;;		_plane_on
  1116 ;;		_set_plane
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text2
  1123   00052C                     __ptext2:
  1124                           	callstack 0
  1125   00052C                     _scan:
  1126                           	callstack 27
  1127   00052C                     
  1128                           ;main.c: 229:         }
  1129   00052C  EC7C  F00B         	call	_clear_cube	;wreg free
  1130                           
  1131                           ;main.c: 231:             plane_on(i);
  1132   000530  EF9D  F004         	goto	l2364
  1133   000534                     l2190:
  1134                           
  1135                           ;main.c: 232: 
  1136   000534  0E00               	movlw	0
  1137   000536  6E39               	movwf	(scan@i+1)^0,c
  1138   000538  0E00               	movlw	0
  1139   00053A  6E38               	movwf	scan@i^0,c
  1140   00053C                     l2196:
  1141                           
  1142                           ;main.c: 233:         for(int i = 0; i < 5; i++){
  1143   00053C  0E00               	movlw	0
  1144   00053E  6E3B               	movwf	(scan@j+1)^0,c
  1145   000540  0E00               	movlw	0
  1146   000542  6E3A               	movwf	scan@j^0,c
  1147   000544                     l2202:
  1148                           
  1149                           ;main.c: 234:             clear_plane();
  1150   000544  C038  F026         	movff	scan@i,___wmul@multiplier
  1151   000548  C039  F027         	movff	scan@i+1,___wmul@multiplier+1
  1152   00054C  0E00               	movlw	0
  1153   00054E  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  1154   000550  0E0A               	movlw	10
  1155   000552  6E28               	movwf	___wmul@multiplicand^0,c
  1156   000554  EC51  F00D         	call	___wmul	;wreg free
  1157   000558  0E80               	movlw	low _plane
  1158   00055A  2426               	addwf	?___wmul^0,w,c
  1159   00055C  6E34               	movwf	??_scan^0,c
  1160   00055E  0E00               	movlw	high _plane
  1161   000560  2027               	addwfc	(?___wmul+1)^0,w,c
  1162   000562  6E35               	movwf	(??_scan+1)^0,c
  1163   000564  90D8               	bcf	status,0,c
  1164   000566  343A               	rlcf	scan@j^0,w,c
  1165   000568  6ED9               	movwf	fsr2l,c
  1166   00056A  343B               	rlcf	(scan@j+1)^0,w,c
  1167   00056C  6EDA               	movwf	fsr2h,c
  1168   00056E  5034               	movf	??_scan^0,w,c
  1169   000570  26D9               	addwf	fsr2l,f,c
  1170   000572  5035               	movf	(??_scan+1)^0,w,c
  1171   000574  22DA               	addwfc	fsr2h,f,c
  1172   000576  0E01               	movlw	1
  1173   000578  6EDE               	movwf	postinc2,c
  1174   00057A  0E00               	movlw	0
  1175   00057C  6EDD               	movwf	postdec2,c
  1176   00057E  4A3A               	infsnz	scan@j^0,f,c
  1177   000580  2A3B               	incf	(scan@j+1)^0,f,c
  1178   000582  BE3B               	btfsc	(scan@j+1)^0,7,c
  1179   000584  EFCD  F002         	goto	u1901
  1180   000588  503B               	movf	(scan@j+1)^0,w,c
  1181   00058A  E109               	bnz	u1900
  1182   00058C  0E05               	movlw	5
  1183   00058E  5C3A               	subwf	scan@j^0,w,c
  1184   000590  A0D8               	btfss	status,0,c
  1185   000592  EFCD  F002         	goto	u1901
  1186   000596  EFCF  F002         	goto	u1900
  1187   00059A                     u1901:
  1188   00059A  EFA2  F002         	goto	l2202
  1189   00059E                     u1900:
  1190   00059E  4A38               	infsnz	scan@i^0,f,c
  1191   0005A0  2A39               	incf	(scan@i+1)^0,f,c
  1192   0005A2  BE39               	btfsc	(scan@i+1)^0,7,c
  1193   0005A4  EFDD  F002         	goto	u1911
  1194   0005A8  5039               	movf	(scan@i+1)^0,w,c
  1195   0005AA  E109               	bnz	u1910
  1196   0005AC  0E05               	movlw	5
  1197   0005AE  5C38               	subwf	scan@i^0,w,c
  1198   0005B0  A0D8               	btfss	status,0,c
  1199   0005B2  EFDD  F002         	goto	u1911
  1200   0005B6  EFDF  F002         	goto	u1910
  1201   0005BA                     u1911:
  1202   0005BA  EF9E  F002         	goto	l2196
  1203   0005BE                     u1910:
  1204   0005BE                     
  1205                           ;main.c: 236:                 plane[i][j] = 1;
  1206   0005BE  0E00               	movlw	0
  1207   0005C0  6E3D               	movwf	(scan@i_728+1)^0,c
  1208   0005C2  0E00               	movlw	0
  1209   0005C4  6E3C               	movwf	scan@i_728^0,c
  1210   0005C6                     l2218:
  1211                           
  1212                           ;main.c: 237:             }
  1213   0005C6  C03C  F026         	movff	scan@i_728,set_plane@a
  1214   0005CA  C03D  F027         	movff	scan@i_728+1,set_plane@a+1
  1215   0005CE  EC71  F00D         	call	_set_plane	;wreg free
  1216   0005D2                     
  1217                           ;main.c: 238:             draw_plane();
  1218   0005D2  EC53  F008         	call	_draw_plane	;wreg free
  1219   0005D6                     
  1220                           ;main.c: 239:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1221   0005D6  0E0B               	movlw	11
  1222   0005D8  6E34               	movwf	??_scan^0,c
  1223   0005DA  0E62               	movlw	98
  1224   0005DC                     u2237:
  1225   0005DC  2EE8               	decfsz	wreg,f,c
  1226   0005DE  D7FE               	bra	u2237
  1227   0005E0  2E34               	decfsz	??_scan^0,f,c
  1228   0005E2  D7FC               	bra	u2237
  1229   0005E4  D000               	nop2	
  1230                           
  1231                           ;main.c: 240:         }
  1232   0005E6  4A3C               	infsnz	scan@i_728^0,f,c
  1233   0005E8  2A3D               	incf	(scan@i_728+1)^0,f,c
  1234   0005EA  BE3D               	btfsc	(scan@i_728+1)^0,7,c
  1235   0005EC  EF01  F003         	goto	u1921
  1236   0005F0  503D               	movf	(scan@i_728+1)^0,w,c
  1237   0005F2  E109               	bnz	u1920
  1238   0005F4  0E05               	movlw	5
  1239   0005F6  5C3C               	subwf	scan@i_728^0,w,c
  1240   0005F8  A0D8               	btfss	status,0,c
  1241   0005FA  EF01  F003         	goto	u1921
  1242   0005FE  EF03  F003         	goto	u1920
  1243   000602                     u1921:
  1244   000602  EFE3  F002         	goto	l2218
  1245   000606                     u1920:
  1246   000606                     
  1247                           ;main.c: 241:         for(int i = 0; i < 4; i++){
  1248   000606  0E00               	movlw	0
  1249   000608  6E3F               	movwf	(scan@i_729+1)^0,c
  1250   00060A  0E00               	movlw	0
  1251   00060C  6E3E               	movwf	scan@i_729^0,c
  1252   00060E                     l2232:
  1253                           
  1254                           ;main.c: 242:             clear_plane();
  1255   00060E  503E               	movf	scan@i_729^0,w,c
  1256   000610  0804               	sublw	4
  1257   000612  6E26               	movwf	set_plane@a^0,c
  1258   000614  503F               	movf	(scan@i_729+1)^0,w,c
  1259   000616  A0D8               	btfss	status,0,c
  1260   000618  2AE8               	incf	wreg,f,c
  1261   00061A  0800               	sublw	0
  1262   00061C  6E27               	movwf	(set_plane@a+1)^0,c
  1263   00061E  EC71  F00D         	call	_set_plane	;wreg free
  1264   000622                     
  1265                           ;main.c: 243:             for(int j = 0; j < 5; j++){
  1266   000622  EC53  F008         	call	_draw_plane	;wreg free
  1267   000626                     
  1268                           ;main.c: 244:                 plane[4-i][j] = 1;
  1269   000626  0E0B               	movlw	11
  1270   000628  6E34               	movwf	??_scan^0,c
  1271   00062A  0E62               	movlw	98
  1272   00062C                     u2247:
  1273   00062C  2EE8               	decfsz	wreg,f,c
  1274   00062E  D7FE               	bra	u2247
  1275   000630  2E34               	decfsz	??_scan^0,f,c
  1276   000632  D7FC               	bra	u2247
  1277   000634  D000               	nop2	
  1278                           
  1279                           ;main.c: 245:             }
  1280   000636  4A3E               	infsnz	scan@i_729^0,f,c
  1281   000638  2A3F               	incf	(scan@i_729+1)^0,f,c
  1282   00063A  BE3F               	btfsc	(scan@i_729+1)^0,7,c
  1283   00063C  EF29  F003         	goto	u1931
  1284   000640  503F               	movf	(scan@i_729+1)^0,w,c
  1285   000642  E109               	bnz	u1930
  1286   000644  0E04               	movlw	4
  1287   000646  5C3E               	subwf	scan@i_729^0,w,c
  1288   000648  A0D8               	btfss	status,0,c
  1289   00064A  EF29  F003         	goto	u1931
  1290   00064E  EF2B  F003         	goto	u1930
  1291   000652                     u1931:
  1292   000652  EF07  F003         	goto	l2232
  1293   000656                     u1930:
  1294   000656                     
  1295                           ;main.c: 246:             draw_plane();
  1296   000656  0E00               	movlw	0
  1297   000658  6E41               	movwf	(scan@i_730+1)^0,c
  1298   00065A  0E00               	movlw	0
  1299   00065C  6E40               	movwf	scan@i_730^0,c
  1300   00065E                     l2246:
  1301                           
  1302                           ;main.c: 247:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1303   00065E  C040  F006         	movff	scan@i_730,plane_on@a
  1304   000662  C041  F007         	movff	scan@i_730+1,plane_on@a+1
  1305   000666  EC19  F00C         	call	_plane_on	;wreg free
  1306   00066A  4A40               	infsnz	scan@i_730^0,f,c
  1307   00066C  2A41               	incf	(scan@i_730+1)^0,f,c
  1308   00066E  BE41               	btfsc	(scan@i_730+1)^0,7,c
  1309   000670  EF43  F003         	goto	u1941
  1310   000674  5041               	movf	(scan@i_730+1)^0,w,c
  1311   000676  E109               	bnz	u1940
  1312   000678  0E05               	movlw	5
  1313   00067A  5C40               	subwf	scan@i_730^0,w,c
  1314   00067C  A0D8               	btfss	status,0,c
  1315   00067E  EF43  F003         	goto	u1941
  1316   000682  EF45  F003         	goto	u1940
  1317   000686                     u1941:
  1318   000686  EF2F  F003         	goto	l2246
  1319   00068A                     u1940:
  1320   00068A                     
  1321                           ;main.c: 249: 
  1322   00068A  0E00               	movlw	0
  1323   00068C  6E43               	movwf	(scan@i_731+1)^0,c
  1324   00068E  0E00               	movlw	0
  1325   000690  6E42               	movwf	scan@i_731^0,c
  1326   000692                     l2258:
  1327                           
  1328                           ;main.c: 250:         for(int i = 0; i < 5; i++){
  1329   000692  ECD1  F00B         	call	_clear_plane	;wreg free
  1330   000696                     
  1331                           ;main.c: 251:             clear_plane();
  1332   000696  0E00               	movlw	0
  1333   000698  6E45               	movwf	(scan@j_732+1)^0,c
  1334   00069A  0E00               	movlw	0
  1335   00069C  6E44               	movwf	scan@j_732^0,c
  1336   00069E                     l2266:
  1337                           
  1338                           ;main.c: 252:             for(int j = 0; j < 5; j++){
  1339   00069E  C042  F026         	movff	scan@i_731,___wmul@multiplier
  1340   0006A2  C043  F027         	movff	scan@i_731+1,___wmul@multiplier+1
  1341   0006A6  0E00               	movlw	0
  1342   0006A8  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  1343   0006AA  0E0A               	movlw	10
  1344   0006AC  6E28               	movwf	___wmul@multiplicand^0,c
  1345   0006AE  EC51  F00D         	call	___wmul	;wreg free
  1346   0006B2  0E80               	movlw	low _plane
  1347   0006B4  2426               	addwf	?___wmul^0,w,c
  1348   0006B6  6E34               	movwf	??_scan^0,c
  1349   0006B8  0E00               	movlw	high _plane
  1350   0006BA  2027               	addwfc	(?___wmul+1)^0,w,c
  1351   0006BC  6E35               	movwf	(??_scan+1)^0,c
  1352   0006BE  90D8               	bcf	status,0,c
  1353   0006C0  3444               	rlcf	scan@j_732^0,w,c
  1354   0006C2  6ED9               	movwf	fsr2l,c
  1355   0006C4  3445               	rlcf	(scan@j_732+1)^0,w,c
  1356   0006C6  6EDA               	movwf	fsr2h,c
  1357   0006C8  5034               	movf	??_scan^0,w,c
  1358   0006CA  26D9               	addwf	fsr2l,f,c
  1359   0006CC  5035               	movf	(??_scan+1)^0,w,c
  1360   0006CE  22DA               	addwfc	fsr2h,f,c
  1361   0006D0  0E01               	movlw	1
  1362   0006D2  6EDE               	movwf	postinc2,c
  1363   0006D4  0E00               	movlw	0
  1364   0006D6  6EDD               	movwf	postdec2,c
  1365   0006D8                     
  1366                           ;main.c: 253:                 plane[j][i] = 1;
  1367   0006D8  4A44               	infsnz	scan@j_732^0,f,c
  1368   0006DA  2A45               	incf	(scan@j_732+1)^0,f,c
  1369   0006DC  BE45               	btfsc	(scan@j_732+1)^0,7,c
  1370   0006DE  EF7A  F003         	goto	u1951
  1371   0006E2  5045               	movf	(scan@j_732+1)^0,w,c
  1372   0006E4  E109               	bnz	u1950
  1373   0006E6  0E05               	movlw	5
  1374   0006E8  5C44               	subwf	scan@j_732^0,w,c
  1375   0006EA  A0D8               	btfss	status,0,c
  1376   0006EC  EF7A  F003         	goto	u1951
  1377   0006F0  EF7C  F003         	goto	u1950
  1378   0006F4                     u1951:
  1379   0006F4  EF4F  F003         	goto	l2266
  1380   0006F8                     u1950:
  1381   0006F8                     
  1382                           ;main.c: 254:             }
  1383   0006F8  EC53  F008         	call	_draw_plane	;wreg free
  1384   0006FC                     
  1385                           ;main.c: 255:             draw_plane();
  1386   0006FC  0E0B               	movlw	11
  1387   0006FE  6E34               	movwf	??_scan^0,c
  1388   000700  0E62               	movlw	98
  1389   000702                     u2257:
  1390   000702  2EE8               	decfsz	wreg,f,c
  1391   000704  D7FE               	bra	u2257
  1392   000706  2E34               	decfsz	??_scan^0,f,c
  1393   000708  D7FC               	bra	u2257
  1394   00070A  D000               	nop2	
  1395   00070C                     
  1396                           ;main.c: 256:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1397   00070C  4A42               	infsnz	scan@i_731^0,f,c
  1398   00070E  2A43               	incf	(scan@i_731+1)^0,f,c
  1399   000710  BE43               	btfsc	(scan@i_731+1)^0,7,c
  1400   000712  EF94  F003         	goto	u1961
  1401   000716  5043               	movf	(scan@i_731+1)^0,w,c
  1402   000718  E109               	bnz	u1960
  1403   00071A  0E05               	movlw	5
  1404   00071C  5C42               	subwf	scan@i_731^0,w,c
  1405   00071E  A0D8               	btfss	status,0,c
  1406   000720  EF94  F003         	goto	u1961
  1407   000724  EF96  F003         	goto	u1960
  1408   000728                     u1961:
  1409   000728  EF49  F003         	goto	l2258
  1410   00072C                     u1960:
  1411   00072C                     
  1412                           ;main.c: 257:         }
  1413   00072C  0E00               	movlw	0
  1414   00072E  6E47               	movwf	(scan@i_733+1)^0,c
  1415   000730  0E00               	movlw	0
  1416   000732  6E46               	movwf	scan@i_733^0,c
  1417   000734                     l2286:
  1418                           
  1419                           ;main.c: 258:         for(int i = 0; i < 4; i++){
  1420   000734  ECD1  F00B         	call	_clear_plane	;wreg free
  1421   000738                     
  1422                           ;main.c: 259:             clear_plane();
  1423   000738  0E00               	movlw	0
  1424   00073A  6E49               	movwf	(scan@j_734+1)^0,c
  1425   00073C  0E00               	movlw	0
  1426   00073E  6E48               	movwf	scan@j_734^0,c
  1427   000740                     l2294:
  1428                           
  1429                           ;main.c: 260:             for(int j = 0; j < 5; j++){
  1430   000740  C046  F026         	movff	scan@i_733,___wmul@multiplier
  1431   000744  C047  F027         	movff	scan@i_733+1,___wmul@multiplier+1
  1432   000748  0EFF               	movlw	255
  1433   00074A  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  1434   00074C  0EF6               	movlw	246
  1435   00074E  6E28               	movwf	___wmul@multiplicand^0,c
  1436   000750  EC51  F00D         	call	___wmul	;wreg free
  1437   000754  C048  F034         	movff	scan@j_734,??_scan
  1438   000758  C049  F035         	movff	scan@j_734+1,??_scan+1
  1439   00075C  90D8               	bcf	status,0,c
  1440   00075E  3634               	rlcf	??_scan^0,f,c
  1441   000760  3635               	rlcf	(??_scan+1)^0,f,c
  1442   000762  0EA8               	movlw	low (_plane+40)
  1443   000764  2434               	addwf	??_scan^0,w,c
  1444   000766  6E36               	movwf	(??_scan+2)^0,c
  1445   000768  0E00               	movlw	high (_plane+40)
  1446   00076A  2035               	addwfc	(??_scan+1)^0,w,c
  1447   00076C  6E37               	movwf	(??_scan+3)^0,c
  1448   00076E  5026               	movf	?___wmul^0,w,c
  1449   000770  2436               	addwf	(??_scan+2)^0,w,c
  1450   000772  6ED9               	movwf	fsr2l,c
  1451   000774  5027               	movf	(?___wmul+1)^0,w,c
  1452   000776  2037               	addwfc	(??_scan+3)^0,w,c
  1453   000778  6EDA               	movwf	fsr2h,c
  1454   00077A  0E01               	movlw	1
  1455   00077C  6EDE               	movwf	postinc2,c
  1456   00077E  0E00               	movlw	0
  1457   000780  6EDD               	movwf	postdec2,c
  1458   000782                     
  1459                           ;main.c: 261:                 plane[j][4-i] = 1;
  1460   000782  4A48               	infsnz	scan@j_734^0,f,c
  1461   000784  2A49               	incf	(scan@j_734+1)^0,f,c
  1462   000786  BE49               	btfsc	(scan@j_734+1)^0,7,c
  1463   000788  EFCF  F003         	goto	u1971
  1464   00078C  5049               	movf	(scan@j_734+1)^0,w,c
  1465   00078E  E109               	bnz	u1970
  1466   000790  0E05               	movlw	5
  1467   000792  5C48               	subwf	scan@j_734^0,w,c
  1468   000794  A0D8               	btfss	status,0,c
  1469   000796  EFCF  F003         	goto	u1971
  1470   00079A  EFD1  F003         	goto	u1970
  1471   00079E                     u1971:
  1472   00079E  EFA0  F003         	goto	l2294
  1473   0007A2                     u1970:
  1474   0007A2                     
  1475                           ;main.c: 262:             }
  1476   0007A2  EC53  F008         	call	_draw_plane	;wreg free
  1477   0007A6                     
  1478                           ;main.c: 263:             draw_plane();
  1479   0007A6  0E0B               	movlw	11
  1480   0007A8  6E34               	movwf	??_scan^0,c
  1481   0007AA  0E62               	movlw	98
  1482   0007AC                     u2267:
  1483   0007AC  2EE8               	decfsz	wreg,f,c
  1484   0007AE  D7FE               	bra	u2267
  1485   0007B0  2E34               	decfsz	??_scan^0,f,c
  1486   0007B2  D7FC               	bra	u2267
  1487   0007B4  D000               	nop2	
  1488   0007B6                     
  1489                           ;main.c: 264:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1490   0007B6  4A46               	infsnz	scan@i_733^0,f,c
  1491   0007B8  2A47               	incf	(scan@i_733+1)^0,f,c
  1492   0007BA  BE47               	btfsc	(scan@i_733+1)^0,7,c
  1493   0007BC  EFE9  F003         	goto	u1981
  1494   0007C0  5047               	movf	(scan@i_733+1)^0,w,c
  1495   0007C2  E109               	bnz	u1980
  1496   0007C4  0E04               	movlw	4
  1497   0007C6  5C46               	subwf	scan@i_733^0,w,c
  1498   0007C8  A0D8               	btfss	status,0,c
  1499   0007CA  EFE9  F003         	goto	u1981
  1500   0007CE  EFEB  F003         	goto	u1980
  1501   0007D2                     u1981:
  1502   0007D2  EF9A  F003         	goto	l2286
  1503   0007D6                     u1980:
  1504   0007D6                     
  1505                           ;main.c: 266:     }
  1506   0007D6  0E00               	movlw	0
  1507   0007D8  6E4B               	movwf	(scan@i_735+1)^0,c
  1508   0007DA  0E00               	movlw	0
  1509   0007DC  6E4A               	movwf	scan@i_735^0,c
  1510   0007DE                     l2314:
  1511                           
  1512                           ;main.c: 267: }
  1513   0007DE  ECD1  F00B         	call	_clear_plane	;wreg free
  1514   0007E2                     
  1515                           ;main.c: 268: 
  1516   0007E2  0E00               	movlw	0
  1517   0007E4  6E4D               	movwf	(scan@j_736+1)^0,c
  1518   0007E6  0E00               	movlw	0
  1519   0007E8  6E4C               	movwf	scan@j_736^0,c
  1520   0007EA                     l2322:
  1521                           
  1522                           ;main.c: 269: void speedup(int id){
  1523   0007EA  C04C  F026         	movff	scan@j_736,___wmul@multiplier
  1524   0007EE  C04D  F027         	movff	scan@j_736+1,___wmul@multiplier+1
  1525   0007F2  0E00               	movlw	0
  1526   0007F4  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  1527   0007F6  0E0A               	movlw	10
  1528   0007F8  6E28               	movwf	___wmul@multiplicand^0,c
  1529   0007FA  EC51  F00D         	call	___wmul	;wreg free
  1530   0007FE  0E80               	movlw	low _plane
  1531   000800  2426               	addwf	?___wmul^0,w,c
  1532   000802  6E34               	movwf	??_scan^0,c
  1533   000804  0E00               	movlw	high _plane
  1534   000806  2027               	addwfc	(?___wmul+1)^0,w,c
  1535   000808  6E35               	movwf	(??_scan+1)^0,c
  1536   00080A  90D8               	bcf	status,0,c
  1537   00080C  344A               	rlcf	scan@i_735^0,w,c
  1538   00080E  6ED9               	movwf	fsr2l,c
  1539   000810  344B               	rlcf	(scan@i_735+1)^0,w,c
  1540   000812  6EDA               	movwf	fsr2h,c
  1541   000814  5034               	movf	??_scan^0,w,c
  1542   000816  26D9               	addwf	fsr2l,f,c
  1543   000818  5035               	movf	(??_scan+1)^0,w,c
  1544   00081A  22DA               	addwfc	fsr2h,f,c
  1545   00081C  0E01               	movlw	1
  1546   00081E  6EDE               	movwf	postinc2,c
  1547   000820  0E00               	movlw	0
  1548   000822  6EDD               	movwf	postdec2,c
  1549   000824                     
  1550                           ;main.c: 270:     clear_cube();
  1551   000824  4A4C               	infsnz	scan@j_736^0,f,c
  1552   000826  2A4D               	incf	(scan@j_736+1)^0,f,c
  1553   000828  BE4D               	btfsc	(scan@j_736+1)^0,7,c
  1554   00082A  EF20  F004         	goto	u1991
  1555   00082E  504D               	movf	(scan@j_736+1)^0,w,c
  1556   000830  E109               	bnz	u1990
  1557   000832  0E05               	movlw	5
  1558   000834  5C4C               	subwf	scan@j_736^0,w,c
  1559   000836  A0D8               	btfss	status,0,c
  1560   000838  EF20  F004         	goto	u1991
  1561   00083C  EF22  F004         	goto	u1990
  1562   000840                     u1991:
  1563   000840  EFF5  F003         	goto	l2322
  1564   000844                     u1990:
  1565   000844                     
  1566                           ;main.c: 271:     int i = 0, dcnt = 0, del = 50;
  1567   000844  EC53  F008         	call	_draw_plane	;wreg free
  1568   000848                     
  1569                           ;main.c: 272:     plane[0][0] = 1;
  1570   000848  0E0B               	movlw	11
  1571   00084A  6E34               	movwf	??_scan^0,c
  1572   00084C  0E62               	movlw	98
  1573   00084E                     u2277:
  1574   00084E  2EE8               	decfsz	wreg,f,c
  1575   000850  D7FE               	bra	u2277
  1576   000852  2E34               	decfsz	??_scan^0,f,c
  1577   000854  D7FC               	bra	u2277
  1578   000856  D000               	nop2	
  1579   000858                     
  1580                           ;main.c: 273:     plane[0][4] = 1;
  1581   000858  4A4A               	infsnz	scan@i_735^0,f,c
  1582   00085A  2A4B               	incf	(scan@i_735+1)^0,f,c
  1583   00085C  BE4B               	btfsc	(scan@i_735+1)^0,7,c
  1584   00085E  EF3A  F004         	goto	u2001
  1585   000862  504B               	movf	(scan@i_735+1)^0,w,c
  1586   000864  E109               	bnz	u2000
  1587   000866  0E05               	movlw	5
  1588   000868  5C4A               	subwf	scan@i_735^0,w,c
  1589   00086A  A0D8               	btfss	status,0,c
  1590   00086C  EF3A  F004         	goto	u2001
  1591   000870  EF3C  F004         	goto	u2000
  1592   000874                     u2001:
  1593   000874  EFEF  F003         	goto	l2314
  1594   000878                     u2000:
  1595   000878                     
  1596                           ;main.c: 274:     plane[4][0] = 1;
  1597   000878  0E00               	movlw	0
  1598   00087A  6E4F               	movwf	(scan@i_737+1)^0,c
  1599   00087C  0E00               	movlw	0
  1600   00087E  6E4E               	movwf	scan@i_737^0,c
  1601   000880                     l2338:
  1602   000880  BE4F               	btfsc	(scan@i_737+1)^0,7,c
  1603   000882  EF4C  F004         	goto	u2011
  1604   000886  504F               	movf	(scan@i_737+1)^0,w,c
  1605   000888  E109               	bnz	u2010
  1606   00088A  0E04               	movlw	4
  1607   00088C  5C4E               	subwf	scan@i_737^0,w,c
  1608   00088E  A0D8               	btfss	status,0,c
  1609   000890  EF4C  F004         	goto	u2011
  1610   000894  EF4E  F004         	goto	u2010
  1611   000898                     u2011:
  1612   000898  EF50  F004         	goto	l2342
  1613   00089C                     u2010:
  1614   00089C  EF9D  F004         	goto	l2364
  1615   0008A0                     l2342:
  1616                           
  1617                           ;main.c: 275:     plane[4][4] = 1;
  1618   0008A0  ECD1  F00B         	call	_clear_plane	;wreg free
  1619   0008A4                     
  1620                           ;main.c: 276:     while(mode == id){
  1621   0008A4  0E00               	movlw	0
  1622   0008A6  6E51               	movwf	(scan@j_738+1)^0,c
  1623   0008A8  0E00               	movlw	0
  1624   0008AA  6E50               	movwf	scan@j_738^0,c
  1625   0008AC                     l2346:
  1626   0008AC  BE51               	btfsc	(scan@j_738+1)^0,7,c
  1627   0008AE  EF62  F004         	goto	u2021
  1628   0008B2  5051               	movf	(scan@j_738+1)^0,w,c
  1629   0008B4  E109               	bnz	u2020
  1630   0008B6  0E05               	movlw	5
  1631   0008B8  5C50               	subwf	scan@j_738^0,w,c
  1632   0008BA  A0D8               	btfss	status,0,c
  1633   0008BC  EF62  F004         	goto	u2021
  1634   0008C0  EF64  F004         	goto	u2020
  1635   0008C4                     u2021:
  1636   0008C4  EF66  F004         	goto	l2350
  1637   0008C8                     u2020:
  1638   0008C8  EF8F  F004         	goto	l2356
  1639   0008CC                     l2350:
  1640                           
  1641                           ;main.c: 277:         if(i == 0 || i == 4){
  1642   0008CC  0E04               	movlw	4
  1643   0008CE  6E34               	movwf	??_scan^0,c
  1644   0008D0  0E00               	movlw	0
  1645   0008D2  6E35               	movwf	(??_scan+1)^0,c
  1646   0008D4  504E               	movf	scan@i_737^0,w,c
  1647   0008D6  5E34               	subwf	??_scan^0,f,c
  1648   0008D8  504F               	movf	(scan@i_737+1)^0,w,c
  1649   0008DA  5A35               	subwfb	(??_scan+1)^0,f,c
  1650   0008DC  90D8               	bcf	status,0,c
  1651   0008DE  3634               	rlcf	??_scan^0,f,c
  1652   0008E0  3635               	rlcf	(??_scan+1)^0,f,c
  1653   0008E2  C050  F026         	movff	scan@j_738,___wmul@multiplier
  1654   0008E6  C051  F027         	movff	scan@j_738+1,___wmul@multiplier+1
  1655   0008EA  0E00               	movlw	0
  1656   0008EC  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  1657   0008EE  0E0A               	movlw	10
  1658   0008F0  6E28               	movwf	___wmul@multiplicand^0,c
  1659   0008F2  EC51  F00D         	call	___wmul	;wreg free
  1660   0008F6  0E80               	movlw	low _plane
  1661   0008F8  2426               	addwf	?___wmul^0,w,c
  1662   0008FA  6E36               	movwf	(??_scan+2)^0,c
  1663   0008FC  0E00               	movlw	high _plane
  1664   0008FE  2027               	addwfc	(?___wmul+1)^0,w,c
  1665   000900  6E37               	movwf	(??_scan+3)^0,c
  1666   000902  5034               	movf	??_scan^0,w,c
  1667   000904  2436               	addwf	(??_scan+2)^0,w,c
  1668   000906  6ED9               	movwf	fsr2l,c
  1669   000908  5035               	movf	(??_scan+1)^0,w,c
  1670   00090A  2037               	addwfc	(??_scan+3)^0,w,c
  1671   00090C  6EDA               	movwf	fsr2h,c
  1672   00090E  0E01               	movlw	1
  1673   000910  6EDE               	movwf	postinc2,c
  1674   000912  0E00               	movlw	0
  1675   000914  6EDD               	movwf	postdec2,c
  1676   000916                     
  1677                           ;main.c: 278:             for(int j = 1; j < 4; j++){
  1678   000916  4A50               	infsnz	scan@j_738^0,f,c
  1679   000918  2A51               	incf	(scan@j_738+1)^0,f,c
  1680   00091A  EF56  F004         	goto	l2346
  1681   00091E                     l2356:
  1682                           
  1683                           ;main.c: 279:                 plane[j][0] = 1;
  1684   00091E  EC53  F008         	call	_draw_plane	;wreg free
  1685   000922                     
  1686                           ;main.c: 280:                 plane[j][4] = 1;
  1687   000922  0E0B               	movlw	11
  1688   000924  6E34               	movwf	??_scan^0,c
  1689   000926  0E62               	movlw	98
  1690   000928                     u2287:
  1691   000928  2EE8               	decfsz	wreg,f,c
  1692   00092A  D7FE               	bra	u2287
  1693   00092C  2E34               	decfsz	??_scan^0,f,c
  1694   00092E  D7FC               	bra	u2287
  1695   000930  D000               	nop2	
  1696   000932                     
  1697                           ;main.c: 281:                 plane[0][j] = 1;
  1698   000932  4A4E               	infsnz	scan@i_737^0,f,c
  1699   000934  2A4F               	incf	(scan@i_737+1)^0,f,c
  1700   000936  EF40  F004         	goto	l2338
  1701   00093A                     l2364:
  1702                           
  1703                           ;main.c: 231:             plane_on(i);
  1704   00093A  5032               	movf	scan@id^0,w,c
  1705   00093C  1854               	xorwf	_mode^0,w,c
  1706   00093E  E109               	bnz	u2030
  1707   000940  5033               	movf	(scan@id+1)^0,w,c
  1708   000942  1855               	xorwf	(_mode+1)^0,w,c
  1709   000944  B4D8               	btfsc	status,2,c
  1710   000946  EFA7  F004         	goto	u2031
  1711   00094A  EFA9  F004         	goto	u2030
  1712   00094E                     u2031:
  1713   00094E  EF9A  F002         	goto	l2190
  1714   000952                     u2030:
  1715   000952  0012               	return		;funcret
  1716   000954                     __end_of_scan:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _random_pattern *****************
  1720 ;; Defined at:
  1721 ;;		line 167 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  id              2   49[COMRAM] int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  r               2   73[COMRAM] int 
  1726 ;;  r2              2   71[COMRAM] int 
  1727 ;;  x2              2   69[COMRAM] int 
  1728 ;;  x               2   67[COMRAM] int 
  1729 ;;  prevx2          2   65[COMRAM] int 
  1730 ;;  prevx           2   63[COMRAM] int 
  1731 ;;  prevr2          2   61[COMRAM] int 
  1732 ;;  prevr           2   59[COMRAM] int 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         2       0       0       0       0       0       0
  1743 ;;      Locals:        16       0       0       0       0       0       0
  1744 ;;      Temps:          8       0       0       0       0       0       0
  1745 ;;      Totals:        26       0       0       0       0       0       0
  1746 ;;Total ram usage:       26 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 4
  1749 ;; This function calls:
  1750 ;;		___awmod
  1751 ;;		_clear_plane
  1752 ;;		_lighton
  1753 ;;		_move
  1754 ;;		_rand
  1755 ;;		_srand
  1756 ;;		_time
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text3
  1763   000012                     __ptext3:
  1764                           	callstack 0
  1765   000012                     _random_pattern:
  1766                           	callstack 26
  1767   000012                     
  1768                           ;main.c: 168:     x = move(x,r);
  1769   000012  ECD1  F00B         	call	_clear_plane	;wreg free
  1770   000016                     
  1771                           ;main.c: 169:     lighton(x,prevx);
  1772   000016  0E00               	movlw	0
  1773   000018  6E06               	movwf	time@t^0,c
  1774   00001A  0E00               	movlw	0
  1775   00001C  6E07               	movwf	(time@t+1)^0,c
  1776   00001E  EC18  F00D         	call	_time	;wreg free
  1777   000022  C006  F034         	movff	?_time,??_random_pattern
  1778   000026  C007  F035         	movff	?_time+1,??_random_pattern+1
  1779   00002A  C008  F036         	movff	?_time+2,??_random_pattern+2
  1780   00002E  C009  F037         	movff	?_time+3,??_random_pattern+3
  1781   000032  C00A  F038         	movff	?_time+4,??_random_pattern+4
  1782   000036  C00B  F039         	movff	?_time+5,??_random_pattern+5
  1783   00003A  C00C  F03A         	movff	?_time+6,??_random_pattern+6
  1784   00003E  C00D  F03B         	movff	?_time+7,??_random_pattern+7
  1785   000042  C034  F00E         	movff	??_random_pattern,srand@s
  1786   000046  C035  F00F         	movff	??_random_pattern+1,srand@s+1
  1787   00004A  EC64  F00D         	call	_srand	;wreg free
  1788   00004E                     
  1789                           ;main.c: 170:     prevx = x;
  1790   00004E  0E00               	movlw	0
  1791   000050  6E45               	movwf	(random_pattern@x+1)^0,c
  1792   000052  0E00               	movlw	0
  1793   000054  6E44               	movwf	random_pattern@x^0,c
  1794   000056                     
  1795                           ;main.c: 171:     prevx2 = x2;
  1796   000056  0E00               	movlw	0
  1797   000058  6E47               	movwf	(random_pattern@x2+1)^0,c
  1798   00005A  0E00               	movlw	0
  1799   00005C  6E46               	movwf	random_pattern@x2^0,c
  1800   00005E                     
  1801                           ;main.c: 172:     x2 = move(x2,r);
  1802   00005E  0E00               	movlw	0
  1803   000060  6E2D               	movwf	(lighton@x+1)^0,c
  1804   000062  0E00               	movlw	0
  1805   000064  6E2C               	movwf	lighton@x^0,c
  1806   000066  0EFF               	movlw	255
  1807   000068  6E2F               	movwf	(lighton@prev+1)^0,c
  1808   00006A  682E               	setf	lighton@prev^0,c
  1809   00006C  ECEA  F008         	call	_lighton	;wreg free
  1810   000070                     
  1811                           ;main.c: 173:     lighton(x2,prevx2);
  1812   000070  EC59  F00C         	call	_rand	;wreg free
  1813   000074  C012  F018         	movff	?_rand,___awmod@dividend
  1814   000078  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  1815   00007C  0E00               	movlw	0
  1816   00007E  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1817   000080  0E06               	movlw	6
  1818   000082  6E1A               	movwf	___awmod@divisor^0,c
  1819   000084  EC24  F00B         	call	___awmod	;wreg free
  1820   000088  C018  F04A         	movff	?___awmod,random_pattern@r
  1821   00008C  C019  F04B         	movff	?___awmod+1,random_pattern@r+1
  1822   000090                     
  1823                           ;main.c: 175:     while(mode == id){
  1824   000090  C044  F01E         	movff	random_pattern@x,move@x
  1825   000094  C045  F01F         	movff	random_pattern@x+1,move@x+1
  1826   000098  C04A  F020         	movff	random_pattern@r,move@r
  1827   00009C  C04B  F021         	movff	random_pattern@r+1,move@r+1
  1828   0000A0  EC43  F007         	call	_move	;wreg free
  1829   0000A4  C01E  F044         	movff	?_move,random_pattern@x
  1830   0000A8  C01F  F045         	movff	?_move+1,random_pattern@x+1
  1831   0000AC                     
  1832                           ;main.c: 176:         prevr = r;
  1833   0000AC  C044  F02C         	movff	random_pattern@x,lighton@x
  1834   0000B0  C045  F02D         	movff	random_pattern@x+1,lighton@x+1
  1835   0000B4  0E00               	movlw	0
  1836   0000B6  6E2F               	movwf	(lighton@prev+1)^0,c
  1837   0000B8  0E00               	movlw	0
  1838   0000BA  6E2E               	movwf	lighton@prev^0,c
  1839   0000BC  ECEA  F008         	call	_lighton	;wreg free
  1840   0000C0                     
  1841                           ;main.c: 177:         r=rand()%6;
  1842   0000C0  0E00               	movlw	0
  1843   0000C2  6E2D               	movwf	(lighton@x+1)^0,c
  1844   0000C4  0E7B               	movlw	123
  1845   0000C6  6E2C               	movwf	lighton@x^0,c
  1846   0000C8  0EFF               	movlw	255
  1847   0000CA  6E2F               	movwf	(lighton@prev+1)^0,c
  1848   0000CC  682E               	setf	lighton@prev^0,c
  1849   0000CE  ECEA  F008         	call	_lighton	;wreg free
  1850   0000D2                     
  1851                           ;main.c: 178:         if(r==0||r==1)while(prevr+r==1)r=rand()%6;
  1852   0000D2  EC59  F00C         	call	_rand	;wreg free
  1853   0000D6  C012  F018         	movff	?_rand,___awmod@dividend
  1854   0000DA  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  1855   0000DE  0E00               	movlw	0
  1856   0000E0  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1857   0000E2  0E06               	movlw	6
  1858   0000E4  6E1A               	movwf	___awmod@divisor^0,c
  1859   0000E6  EC24  F00B         	call	___awmod	;wreg free
  1860   0000EA  C018  F048         	movff	?___awmod,random_pattern@r2
  1861   0000EE  C019  F049         	movff	?___awmod+1,random_pattern@r2+1
  1862   0000F2                     
  1863                           ;main.c: 180:         else if(r==4||r==5) while(prevr+r==9)r=rand()%6;
  1864   0000F2  C046  F01E         	movff	random_pattern@x2,move@x
  1865   0000F6  C047  F01F         	movff	random_pattern@x2+1,move@x+1
  1866   0000FA  C048  F020         	movff	random_pattern@r2,move@r
  1867   0000FE  C049  F021         	movff	random_pattern@r2+1,move@r+1
  1868   000102  EC43  F007         	call	_move	;wreg free
  1869   000106  C01E  F046         	movff	?_move,random_pattern@x2
  1870   00010A  C01F  F047         	movff	?_move+1,random_pattern@x2+1
  1871   00010E                     
  1872                           ;main.c: 181:         prevr2 = r2;
  1873   00010E  C046  F02C         	movff	random_pattern@x2,lighton@x
  1874   000112  C047  F02D         	movff	random_pattern@x2+1,lighton@x+1
  1875   000116  0E00               	movlw	0
  1876   000118  6E2F               	movwf	(lighton@prev+1)^0,c
  1877   00011A  0E00               	movlw	0
  1878   00011C  6E2E               	movwf	lighton@prev^0,c
  1879   00011E  ECEA  F008         	call	_lighton	;wreg free
  1880   000122                     
  1881                           ;main.c: 182:         r2=rand()%6;
  1882   000122  0E27               	movlw	39
  1883   000124  6E34               	movwf	??_random_pattern^0,c
  1884   000126  0EF5               	movlw	245
  1885   000128                     u2297:
  1886   000128  2EE8               	decfsz	wreg,f,c
  1887   00012A  D7FE               	bra	u2297
  1888   00012C  2E34               	decfsz	??_random_pattern^0,f,c
  1889   00012E  D7FC               	bra	u2297
  1890   000130  F000               	nop	
  1891   000132                     
  1892                           ;main.c: 183:         if(r2==0||r2==1)while(prevr2+r2==1)r2=rand()%6;
  1893   000132  C044  F040         	movff	random_pattern@x,random_pattern@prevx
  1894   000136  C045  F041         	movff	random_pattern@x+1,random_pattern@prevx+1
  1895   00013A                     
  1896                           ;main.c: 184:         else if(r2==2||r2==3) while(prevr2+r2==5)r2=rand()%6;
  1897   00013A  C044  F01E         	movff	random_pattern@x,move@x
  1898   00013E  C045  F01F         	movff	random_pattern@x+1,move@x+1
  1899   000142  C04A  F020         	movff	random_pattern@r,move@r
  1900   000146  C04B  F021         	movff	random_pattern@r+1,move@r+1
  1901   00014A  EC43  F007         	call	_move	;wreg free
  1902   00014E  C01E  F044         	movff	?_move,random_pattern@x
  1903   000152  C01F  F045         	movff	?_move+1,random_pattern@x+1
  1904   000156                     
  1905                           ;main.c: 185:         else if(r2==4||r2==5) while(prevr2+r2==9)r2=rand()%6;
  1906   000156  C044  F02C         	movff	random_pattern@x,lighton@x
  1907   00015A  C045  F02D         	movff	random_pattern@x+1,lighton@x+1
  1908   00015E  C040  F02E         	movff	random_pattern@prevx,lighton@prev
  1909   000162  C041  F02F         	movff	random_pattern@prevx+1,lighton@prev+1
  1910   000166  ECEA  F008         	call	_lighton	;wreg free
  1911   00016A                     
  1912                           ;main.c: 186: 
  1913   00016A  C044  F040         	movff	random_pattern@x,random_pattern@prevx
  1914   00016E  C045  F041         	movff	random_pattern@x+1,random_pattern@prevx+1
  1915   000172                     
  1916                           ;main.c: 187:         x=move(x,r);
  1917   000172  C046  F042         	movff	random_pattern@x2,random_pattern@prevx2
  1918   000176  C047  F043         	movff	random_pattern@x2+1,random_pattern@prevx2+1
  1919   00017A                     
  1920                           ;main.c: 188:         lighton(x,prevx);
  1921   00017A  C046  F01E         	movff	random_pattern@x2,move@x
  1922   00017E  C047  F01F         	movff	random_pattern@x2+1,move@x+1
  1923   000182  C04A  F020         	movff	random_pattern@r,move@r
  1924   000186  C04B  F021         	movff	random_pattern@r+1,move@r+1
  1925   00018A  EC43  F007         	call	_move	;wreg free
  1926   00018E  C01E  F046         	movff	?_move,random_pattern@x2
  1927   000192  C01F  F047         	movff	?_move+1,random_pattern@x2+1
  1928   000196                     
  1929                           ;main.c: 189:         prevx = x;
  1930   000196  C046  F02C         	movff	random_pattern@x2,lighton@x
  1931   00019A  C047  F02D         	movff	random_pattern@x2+1,lighton@x+1
  1932   00019E  C042  F02E         	movff	random_pattern@prevx2,lighton@prev
  1933   0001A2  C043  F02F         	movff	random_pattern@prevx2+1,lighton@prev+1
  1934   0001A6  ECEA  F008         	call	_lighton	;wreg free
  1935   0001AA                     
  1936                           ;main.c: 190:         x2=move(x2,r);
  1937   0001AA  C046  F042         	movff	random_pattern@x2,random_pattern@prevx2
  1938   0001AE  C047  F043         	movff	random_pattern@x2+1,random_pattern@prevx2+1
  1939                           
  1940                           ;main.c: 191:         lighton(x2,prevx2);
  1941   0001B2  EF89  F002         	goto	l2164
  1942   0001B6                     l136:
  1943                           
  1944                           ;main.c: 192:         prevx2 = x2;
  1945   0001B6  C04A  F03C         	movff	random_pattern@r,random_pattern@prevr
  1946   0001BA  C04B  F03D         	movff	random_pattern@r+1,random_pattern@prevr+1
  1947   0001BE                     
  1948                           ;main.c: 193:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1949   0001BE  EC59  F00C         	call	_rand	;wreg free
  1950   0001C2  C012  F018         	movff	?_rand,___awmod@dividend
  1951   0001C6  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  1952   0001CA  0E00               	movlw	0
  1953   0001CC  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1954   0001CE  0E06               	movlw	6
  1955   0001D0  6E1A               	movwf	___awmod@divisor^0,c
  1956   0001D2  EC24  F00B         	call	___awmod	;wreg free
  1957   0001D6  C018  F04A         	movff	?___awmod,random_pattern@r
  1958   0001DA  C019  F04B         	movff	?___awmod+1,random_pattern@r+1
  1959   0001DE                     
  1960                           ;main.c: 194:     }
  1961   0001DE  504A               	movf	random_pattern@r^0,w,c
  1962   0001E0  104B               	iorwf	(random_pattern@r+1)^0,w,c
  1963   0001E2  B4D8               	btfsc	status,2,c
  1964   0001E4  EFF6  F000         	goto	u1701
  1965   0001E8  EFF8  F000         	goto	u1700
  1966   0001EC                     u1701:
  1967   0001EC  EF13  F001         	goto	l2108
  1968   0001F0                     u1700:
  1969   0001F0  044A               	decf	random_pattern@r^0,w,c
  1970   0001F2  104B               	iorwf	(random_pattern@r+1)^0,w,c
  1971   0001F4  A4D8               	btfss	status,2,c
  1972   0001F6  EFFF  F000         	goto	u1711
  1973   0001FA  EF01  F001         	goto	u1710
  1974   0001FE                     u1711:
  1975   0001FE  EF24  F001         	goto	l2110
  1976   000202                     u1710:
  1977   000202  EF13  F001         	goto	l2108
  1978   000206                     l2106:
  1979   000206  EC59  F00C         	call	_rand	;wreg free
  1980   00020A  C012  F018         	movff	?_rand,___awmod@dividend
  1981   00020E  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  1982   000212  0E00               	movlw	0
  1983   000214  6E1B               	movwf	(___awmod@divisor+1)^0,c
  1984   000216  0E06               	movlw	6
  1985   000218  6E1A               	movwf	___awmod@divisor^0,c
  1986   00021A  EC24  F00B         	call	___awmod	;wreg free
  1987   00021E  C018  F04A         	movff	?___awmod,random_pattern@r
  1988   000222  C019  F04B         	movff	?___awmod+1,random_pattern@r+1
  1989   000226                     l2108:
  1990   000226  504A               	movf	random_pattern@r^0,w,c
  1991   000228  243C               	addwf	random_pattern@prevr^0,w,c
  1992   00022A  6E34               	movwf	??_random_pattern^0,c
  1993   00022C  504B               	movf	(random_pattern@r+1)^0,w,c
  1994   00022E  203D               	addwfc	(random_pattern@prevr+1)^0,w,c
  1995   000230  6E35               	movwf	(??_random_pattern+1)^0,c
  1996   000232  0434               	decf	??_random_pattern^0,w,c
  1997   000234  1035               	iorwf	(??_random_pattern+1)^0,w,c
  1998   000236  B4D8               	btfsc	status,2,c
  1999   000238  EF20  F001         	goto	u1721
  2000   00023C  EF22  F001         	goto	u1720
  2001   000240                     u1721:
  2002   000240  EF03  F001         	goto	l2106
  2003   000244                     u1720:
  2004   000244  EF92  F001         	goto	l143
  2005   000248                     l2110:
  2006   000248  0E02               	movlw	2
  2007   00024A  184A               	xorwf	random_pattern@r^0,w,c
  2008   00024C  104B               	iorwf	(random_pattern@r+1)^0,w,c
  2009   00024E  B4D8               	btfsc	status,2,c
  2010   000250  EF2C  F001         	goto	u1731
  2011   000254  EF2E  F001         	goto	u1730
  2012   000258                     u1731:
  2013   000258  EF4A  F001         	goto	l2116
  2014   00025C                     u1730:
  2015   00025C  0E03               	movlw	3
  2016   00025E  184A               	xorwf	random_pattern@r^0,w,c
  2017   000260  104B               	iorwf	(random_pattern@r+1)^0,w,c
  2018   000262  A4D8               	btfss	status,2,c
  2019   000264  EF36  F001         	goto	u1741
  2020   000268  EF38  F001         	goto	u1740
  2021   00026C                     u1741:
  2022   00026C  EF5C  F001         	goto	l2118
  2023   000270                     u1740:
  2024   000270  EF4A  F001         	goto	l2116
  2025   000274                     l2114:
  2026   000274  EC59  F00C         	call	_rand	;wreg free
  2027   000278  C012  F018         	movff	?_rand,___awmod@dividend
  2028   00027C  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2029   000280  0E00               	movlw	0
  2030   000282  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2031   000284  0E06               	movlw	6
  2032   000286  6E1A               	movwf	___awmod@divisor^0,c
  2033   000288  EC24  F00B         	call	___awmod	;wreg free
  2034   00028C  C018  F04A         	movff	?___awmod,random_pattern@r
  2035   000290  C019  F04B         	movff	?___awmod+1,random_pattern@r+1
  2036   000294                     l2116:
  2037   000294  504A               	movf	random_pattern@r^0,w,c
  2038   000296  243C               	addwf	random_pattern@prevr^0,w,c
  2039   000298  6E34               	movwf	??_random_pattern^0,c
  2040   00029A  504B               	movf	(random_pattern@r+1)^0,w,c
  2041   00029C  203D               	addwfc	(random_pattern@prevr+1)^0,w,c
  2042   00029E  6E35               	movwf	(??_random_pattern+1)^0,c
  2043   0002A0  0E05               	movlw	5
  2044   0002A2  1834               	xorwf	??_random_pattern^0,w,c
  2045   0002A4  1035               	iorwf	(??_random_pattern+1)^0,w,c
  2046   0002A6  B4D8               	btfsc	status,2,c
  2047   0002A8  EF58  F001         	goto	u1751
  2048   0002AC  EF5A  F001         	goto	u1750
  2049   0002B0                     u1751:
  2050   0002B0  EF3A  F001         	goto	l2114
  2051   0002B4                     u1750:
  2052   0002B4  EF92  F001         	goto	l143
  2053   0002B8                     l2118:
  2054   0002B8  0E04               	movlw	4
  2055   0002BA  184A               	xorwf	random_pattern@r^0,w,c
  2056   0002BC  104B               	iorwf	(random_pattern@r+1)^0,w,c
  2057   0002BE  B4D8               	btfsc	status,2,c
  2058   0002C0  EF64  F001         	goto	u1761
  2059   0002C4  EF66  F001         	goto	u1760
  2060   0002C8                     u1761:
  2061   0002C8  EF82  F001         	goto	l2124
  2062   0002CC                     u1760:
  2063   0002CC  0E05               	movlw	5
  2064   0002CE  184A               	xorwf	random_pattern@r^0,w,c
  2065   0002D0  104B               	iorwf	(random_pattern@r+1)^0,w,c
  2066   0002D2  A4D8               	btfss	status,2,c
  2067   0002D4  EF6E  F001         	goto	u1771
  2068   0002D8  EF70  F001         	goto	u1770
  2069   0002DC                     u1771:
  2070   0002DC  EF92  F001         	goto	l143
  2071   0002E0                     u1770:
  2072   0002E0  EF82  F001         	goto	l2124
  2073   0002E4                     l2122:
  2074   0002E4  EC59  F00C         	call	_rand	;wreg free
  2075   0002E8  C012  F018         	movff	?_rand,___awmod@dividend
  2076   0002EC  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2077   0002F0  0E00               	movlw	0
  2078   0002F2  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2079   0002F4  0E06               	movlw	6
  2080   0002F6  6E1A               	movwf	___awmod@divisor^0,c
  2081   0002F8  EC24  F00B         	call	___awmod	;wreg free
  2082   0002FC  C018  F04A         	movff	?___awmod,random_pattern@r
  2083   000300  C019  F04B         	movff	?___awmod+1,random_pattern@r+1
  2084   000304                     l2124:
  2085   000304  504A               	movf	random_pattern@r^0,w,c
  2086   000306  243C               	addwf	random_pattern@prevr^0,w,c
  2087   000308  6E34               	movwf	??_random_pattern^0,c
  2088   00030A  504B               	movf	(random_pattern@r+1)^0,w,c
  2089   00030C  203D               	addwfc	(random_pattern@prevr+1)^0,w,c
  2090   00030E  6E35               	movwf	(??_random_pattern+1)^0,c
  2091   000310  0E09               	movlw	9
  2092   000312  1834               	xorwf	??_random_pattern^0,w,c
  2093   000314  1035               	iorwf	(??_random_pattern+1)^0,w,c
  2094   000316  B4D8               	btfsc	status,2,c
  2095   000318  EF90  F001         	goto	u1781
  2096   00031C  EF92  F001         	goto	u1780
  2097   000320                     u1781:
  2098   000320  EF72  F001         	goto	l2122
  2099   000324                     u1780:
  2100   000324                     l143:
  2101                           
  2102                           ;main.c: 197: void rainfall(int id){
  2103   000324  C048  F03E         	movff	random_pattern@r2,random_pattern@prevr2
  2104   000328  C049  F03F         	movff	random_pattern@r2+1,random_pattern@prevr2+1
  2105   00032C                     
  2106                           ;main.c: 198:     clear_cube();
  2107   00032C  EC59  F00C         	call	_rand	;wreg free
  2108   000330  C012  F018         	movff	?_rand,___awmod@dividend
  2109   000334  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2110   000338  0E00               	movlw	0
  2111   00033A  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2112   00033C  0E06               	movlw	6
  2113   00033E  6E1A               	movwf	___awmod@divisor^0,c
  2114   000340  EC24  F00B         	call	___awmod	;wreg free
  2115   000344  C018  F048         	movff	?___awmod,random_pattern@r2
  2116   000348  C019  F049         	movff	?___awmod+1,random_pattern@r2+1
  2117   00034C                     
  2118                           ;main.c: 199:     int x = 0;
  2119   00034C  5048               	movf	random_pattern@r2^0,w,c
  2120   00034E  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2121   000350  B4D8               	btfsc	status,2,c
  2122   000352  EFAD  F001         	goto	u1791
  2123   000356  EFAF  F001         	goto	u1790
  2124   00035A                     u1791:
  2125   00035A  EFCA  F001         	goto	l2134
  2126   00035E                     u1790:
  2127   00035E  0448               	decf	random_pattern@r2^0,w,c
  2128   000360  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2129   000362  A4D8               	btfss	status,2,c
  2130   000364  EFB6  F001         	goto	u1801
  2131   000368  EFB8  F001         	goto	u1800
  2132   00036C                     u1801:
  2133   00036C  EFDB  F001         	goto	l2136
  2134   000370                     u1800:
  2135   000370  EFCA  F001         	goto	l2134
  2136   000374                     l2132:
  2137   000374  EC59  F00C         	call	_rand	;wreg free
  2138   000378  C012  F018         	movff	?_rand,___awmod@dividend
  2139   00037C  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2140   000380  0E00               	movlw	0
  2141   000382  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2142   000384  0E06               	movlw	6
  2143   000386  6E1A               	movwf	___awmod@divisor^0,c
  2144   000388  EC24  F00B         	call	___awmod	;wreg free
  2145   00038C  C018  F048         	movff	?___awmod,random_pattern@r2
  2146   000390  C019  F049         	movff	?___awmod+1,random_pattern@r2+1
  2147   000394                     l2134:
  2148   000394  5048               	movf	random_pattern@r2^0,w,c
  2149   000396  243E               	addwf	random_pattern@prevr2^0,w,c
  2150   000398  6E34               	movwf	??_random_pattern^0,c
  2151   00039A  5049               	movf	(random_pattern@r2+1)^0,w,c
  2152   00039C  203F               	addwfc	(random_pattern@prevr2+1)^0,w,c
  2153   00039E  6E35               	movwf	(??_random_pattern+1)^0,c
  2154   0003A0  0434               	decf	??_random_pattern^0,w,c
  2155   0003A2  1035               	iorwf	(??_random_pattern+1)^0,w,c
  2156   0003A4  B4D8               	btfsc	status,2,c
  2157   0003A6  EFD7  F001         	goto	u1811
  2158   0003AA  EFD9  F001         	goto	u1810
  2159   0003AE                     u1811:
  2160   0003AE  EFBA  F001         	goto	l2132
  2161   0003B2                     u1810:
  2162   0003B2  EF49  F002         	goto	l2152
  2163   0003B6                     l2136:
  2164   0003B6  0E02               	movlw	2
  2165   0003B8  1848               	xorwf	random_pattern@r2^0,w,c
  2166   0003BA  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2167   0003BC  B4D8               	btfsc	status,2,c
  2168   0003BE  EFE3  F001         	goto	u1821
  2169   0003C2  EFE5  F001         	goto	u1820
  2170   0003C6                     u1821:
  2171   0003C6  EF01  F002         	goto	l2142
  2172   0003CA                     u1820:
  2173   0003CA  0E03               	movlw	3
  2174   0003CC  1848               	xorwf	random_pattern@r2^0,w,c
  2175   0003CE  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2176   0003D0  A4D8               	btfss	status,2,c
  2177   0003D2  EFED  F001         	goto	u1831
  2178   0003D6  EFEF  F001         	goto	u1830
  2179   0003DA                     u1831:
  2180   0003DA  EF13  F002         	goto	l2144
  2181   0003DE                     u1830:
  2182   0003DE  EF01  F002         	goto	l2142
  2183   0003E2                     l2140:
  2184   0003E2  EC59  F00C         	call	_rand	;wreg free
  2185   0003E6  C012  F018         	movff	?_rand,___awmod@dividend
  2186   0003EA  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2187   0003EE  0E00               	movlw	0
  2188   0003F0  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2189   0003F2  0E06               	movlw	6
  2190   0003F4  6E1A               	movwf	___awmod@divisor^0,c
  2191   0003F6  EC24  F00B         	call	___awmod	;wreg free
  2192   0003FA  C018  F048         	movff	?___awmod,random_pattern@r2
  2193   0003FE  C019  F049         	movff	?___awmod+1,random_pattern@r2+1
  2194   000402                     l2142:
  2195   000402  5048               	movf	random_pattern@r2^0,w,c
  2196   000404  243E               	addwf	random_pattern@prevr2^0,w,c
  2197   000406  6E34               	movwf	??_random_pattern^0,c
  2198   000408  5049               	movf	(random_pattern@r2+1)^0,w,c
  2199   00040A  203F               	addwfc	(random_pattern@prevr2+1)^0,w,c
  2200   00040C  6E35               	movwf	(??_random_pattern+1)^0,c
  2201   00040E  0E05               	movlw	5
  2202   000410  1834               	xorwf	??_random_pattern^0,w,c
  2203   000412  1035               	iorwf	(??_random_pattern+1)^0,w,c
  2204   000414  B4D8               	btfsc	status,2,c
  2205   000416  EF0F  F002         	goto	u1841
  2206   00041A  EF11  F002         	goto	u1840
  2207   00041E                     u1841:
  2208   00041E  EFF1  F001         	goto	l2140
  2209   000422                     u1840:
  2210   000422  EF49  F002         	goto	l2152
  2211   000426                     l2144:
  2212   000426  0E04               	movlw	4
  2213   000428  1848               	xorwf	random_pattern@r2^0,w,c
  2214   00042A  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2215   00042C  B4D8               	btfsc	status,2,c
  2216   00042E  EF1B  F002         	goto	u1851
  2217   000432  EF1D  F002         	goto	u1850
  2218   000436                     u1851:
  2219   000436  EF39  F002         	goto	l2150
  2220   00043A                     u1850:
  2221   00043A  0E05               	movlw	5
  2222   00043C  1848               	xorwf	random_pattern@r2^0,w,c
  2223   00043E  1049               	iorwf	(random_pattern@r2+1)^0,w,c
  2224   000440  A4D8               	btfss	status,2,c
  2225   000442  EF25  F002         	goto	u1861
  2226   000446  EF27  F002         	goto	u1860
  2227   00044A                     u1861:
  2228   00044A  EF49  F002         	goto	l2152
  2229   00044E                     u1860:
  2230   00044E  EF39  F002         	goto	l2150
  2231   000452                     l2148:
  2232   000452  EC59  F00C         	call	_rand	;wreg free
  2233   000456  C012  F018         	movff	?_rand,___awmod@dividend
  2234   00045A  C013  F019         	movff	?_rand+1,___awmod@dividend+1
  2235   00045E  0E00               	movlw	0
  2236   000460  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2237   000462  0E06               	movlw	6
  2238   000464  6E1A               	movwf	___awmod@divisor^0,c
  2239   000466  EC24  F00B         	call	___awmod	;wreg free
  2240   00046A  C018  F048         	movff	?___awmod,random_pattern@r2
  2241   00046E  C019  F049         	movff	?___awmod+1,random_pattern@r2+1
  2242   000472                     l2150:
  2243   000472  5048               	movf	random_pattern@r2^0,w,c
  2244   000474  243E               	addwf	random_pattern@prevr2^0,w,c
  2245   000476  6E34               	movwf	??_random_pattern^0,c
  2246   000478  5049               	movf	(random_pattern@r2+1)^0,w,c
  2247   00047A  203F               	addwfc	(random_pattern@prevr2+1)^0,w,c
  2248   00047C  6E35               	movwf	(??_random_pattern+1)^0,c
  2249   00047E  0E09               	movlw	9
  2250   000480  1834               	xorwf	??_random_pattern^0,w,c
  2251   000482  1035               	iorwf	(??_random_pattern+1)^0,w,c
  2252   000484  B4D8               	btfsc	status,2,c
  2253   000486  EF47  F002         	goto	u1871
  2254   00048A  EF49  F002         	goto	u1870
  2255   00048E                     u1871:
  2256   00048E  EF29  F002         	goto	l2148
  2257   000492                     u1870:
  2258   000492                     l2152:
  2259                           
  2260                           ;main.c: 203:         draw_plane();
  2261   000492  C044  F01E         	movff	random_pattern@x,move@x
  2262   000496  C045  F01F         	movff	random_pattern@x+1,move@x+1
  2263   00049A  C04A  F020         	movff	random_pattern@r,move@r
  2264   00049E  C04B  F021         	movff	random_pattern@r+1,move@r+1
  2265   0004A2  EC43  F007         	call	_move	;wreg free
  2266   0004A6  C01E  F044         	movff	?_move,random_pattern@x
  2267   0004AA  C01F  F045         	movff	?_move+1,random_pattern@x+1
  2268   0004AE                     
  2269                           ;main.c: 204:         x++;
  2270   0004AE  C044  F02C         	movff	random_pattern@x,lighton@x
  2271   0004B2  C045  F02D         	movff	random_pattern@x+1,lighton@x+1
  2272   0004B6  C040  F02E         	movff	random_pattern@prevx,lighton@prev
  2273   0004BA  C041  F02F         	movff	random_pattern@prevx+1,lighton@prev+1
  2274   0004BE  ECEA  F008         	call	_lighton	;wreg free
  2275   0004C2                     
  2276                           ;main.c: 205:         x %= 5;
  2277   0004C2  C044  F040         	movff	random_pattern@x,random_pattern@prevx
  2278   0004C6  C045  F041         	movff	random_pattern@x+1,random_pattern@prevx+1
  2279   0004CA                     
  2280                           ;main.c: 206:         plane[x][x] = 1;
  2281   0004CA  C046  F01E         	movff	random_pattern@x2,move@x
  2282   0004CE  C047  F01F         	movff	random_pattern@x2+1,move@x+1
  2283   0004D2  C04A  F020         	movff	random_pattern@r,move@r
  2284   0004D6  C04B  F021         	movff	random_pattern@r+1,move@r+1
  2285   0004DA  EC43  F007         	call	_move	;wreg free
  2286   0004DE  C01E  F046         	movff	?_move,random_pattern@x2
  2287   0004E2  C01F  F047         	movff	?_move+1,random_pattern@x2+1
  2288                           
  2289                           ;main.c: 207:         set_plane(x);
  2290   0004E6  C046  F02C         	movff	random_pattern@x2,lighton@x
  2291   0004EA  C047  F02D         	movff	random_pattern@x2+1,lighton@x+1
  2292   0004EE  C042  F02E         	movff	random_pattern@prevx2,lighton@prev
  2293   0004F2  C043  F02F         	movff	random_pattern@prevx2+1,lighton@prev+1
  2294   0004F6  ECEA  F008         	call	_lighton	;wreg free
  2295   0004FA                     
  2296                           ;main.c: 208:         draw_plane();
  2297   0004FA  C046  F042         	movff	random_pattern@x2,random_pattern@prevx2
  2298   0004FE  C047  F043         	movff	random_pattern@x2+1,random_pattern@prevx2+1
  2299   000502                     
  2300                           ;main.c: 209:     }
  2301   000502  0E07               	movlw	7
  2302   000504  6E34               	movwf	??_random_pattern^0,c
  2303   000506  0E7D               	movlw	125
  2304   000508                     u2307:
  2305   000508  2EE8               	decfsz	wreg,f,c
  2306   00050A  D7FE               	bra	u2307
  2307   00050C  2E34               	decfsz	??_random_pattern^0,f,c
  2308   00050E  D7FC               	bra	u2307
  2309   000510  F000               	nop	
  2310   000512                     l2164:
  2311                           
  2312                           ;main.c: 191:         lighton(x2,prevx2);
  2313   000512  5032               	movf	random_pattern@id^0,w,c
  2314   000514  1854               	xorwf	_mode^0,w,c
  2315   000516  E109               	bnz	u1880
  2316   000518  5033               	movf	(random_pattern@id+1)^0,w,c
  2317   00051A  1855               	xorwf	(_mode+1)^0,w,c
  2318   00051C  B4D8               	btfsc	status,2,c
  2319   00051E  EF93  F002         	goto	u1881
  2320   000522  EF95  F002         	goto	u1880
  2321   000526                     u1881:
  2322   000526  EFDB  F000         	goto	l136
  2323   00052A                     u1880:
  2324   00052A  0012               	return		;funcret
  2325   00052C                     __end_of_random_pattern:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _rand *****************
  2329 ;; Defined at:
  2330 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2   17[COMRAM] int 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2344 ;;      Params:         2       0       0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0
  2346 ;;      Temps:          4       0       0       0       0       0       0
  2347 ;;      Totals:         6       0       0       0       0       0       0
  2348 ;;Total ram usage:        6 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		___lmul
  2353 ;; This function is called by:
  2354 ;;		_random_pattern
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text4
  2359   0018B2                     __ptext4:
  2360                           	callstack 0
  2361   0018B2                     _rand:
  2362                           	callstack 27
  2363   0018B2  C056  F006         	movff	_seed,___lmul@multiplier
  2364   0018B6  C057  F007         	movff	_seed+1,___lmul@multiplier+1
  2365   0018BA  C058  F008         	movff	_seed+2,___lmul@multiplier+2
  2366   0018BE  C059  F009         	movff	_seed+3,___lmul@multiplier+3
  2367   0018C2  0E2D               	movlw	45
  2368   0018C4  6E0A               	movwf	___lmul@multiplicand^0,c
  2369   0018C6  0E7F               	movlw	127
  2370   0018C8  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  2371   0018CA  0E95               	movlw	149
  2372   0018CC  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  2373   0018CE  0E4C               	movlw	76
  2374   0018D0  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  2375   0018D2  EC8F  F00C         	call	___lmul	;wreg free
  2376   0018D6  0E01               	movlw	1
  2377   0018D8  2406               	addwf	?___lmul^0,w,c
  2378   0018DA  6E56               	movwf	_seed^0,c
  2379   0018DC  0E00               	movlw	0
  2380   0018DE  2007               	addwfc	(?___lmul+1)^0,w,c
  2381   0018E0  6E57               	movwf	(_seed+1)^0,c
  2382   0018E2  0E00               	movlw	0
  2383   0018E4  2008               	addwfc	(?___lmul+2)^0,w,c
  2384   0018E6  6E58               	movwf	(_seed+2)^0,c
  2385   0018E8  0E00               	movlw	0
  2386   0018EA  2009               	addwfc	(?___lmul+3)^0,w,c
  2387   0018EC  6E59               	movwf	(_seed+3)^0,c
  2388   0018EE  C056  F014         	movff	_seed,??_rand
  2389   0018F2  C057  F015         	movff	_seed+1,??_rand+1
  2390   0018F6  C058  F016         	movff	_seed+2,??_rand+2
  2391   0018FA  C059  F017         	movff	_seed+3,??_rand+3
  2392   0018FE  0E12               	movlw	18
  2393   001900  EF87  F00C         	goto	u1690
  2394   001904                     u1695:
  2395   001904  90D8               	bcf	status,0,c
  2396   001906  3217               	rrcf	(??_rand+3)^0,f,c
  2397   001908  3216               	rrcf	(??_rand+2)^0,f,c
  2398   00190A  3215               	rrcf	(??_rand+1)^0,f,c
  2399   00190C  3214               	rrcf	??_rand^0,f,c
  2400   00190E                     u1690:
  2401   00190E  2EE8               	decfsz	wreg,f,c
  2402   001910  EF82  F00C         	goto	u1695
  2403   001914  C014  F012         	movff	??_rand,?_rand
  2404   001918  C015  F013         	movff	??_rand+1,?_rand+1
  2405   00191C  0012               	return		;funcret
  2406   00191E                     __end_of_rand:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function ___lmul *****************
  2410 ;; Defined at:
  2411 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  multiplier      4    5[COMRAM] unsigned long 
  2414 ;;  multiplicand    4    9[COMRAM] unsigned long 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  product         4   13[COMRAM] unsigned long 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  4    5[COMRAM] unsigned long 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2426 ;;      Params:         8       0       0       0       0       0       0
  2427 ;;      Locals:         4       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0
  2429 ;;      Totals:        12       0       0       0       0       0       0
  2430 ;;Total ram usage:       12 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 1
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_rand
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text5
  2441   00191E                     __ptext5:
  2442                           	callstack 0
  2443   00191E                     ___lmul:
  2444                           	callstack 27
  2445   00191E  0E00               	movlw	0
  2446   001920  6E0E               	movwf	___lmul@product^0,c
  2447   001922  0E00               	movlw	0
  2448   001924  6E0F               	movwf	(___lmul@product+1)^0,c
  2449   001926  0E00               	movlw	0
  2450   001928  6E10               	movwf	(___lmul@product+2)^0,c
  2451   00192A  0E00               	movlw	0
  2452   00192C  6E11               	movwf	(___lmul@product+3)^0,c
  2453   00192E                     l1826:
  2454   00192E  A006               	btfss	___lmul@multiplier^0,0,c
  2455   001930  EF9C  F00C         	goto	u1371
  2456   001934  EF9E  F00C         	goto	u1370
  2457   001938                     u1371:
  2458   001938  EFA6  F00C         	goto	l1830
  2459   00193C                     u1370:
  2460   00193C  500A               	movf	___lmul@multiplicand^0,w,c
  2461   00193E  260E               	addwf	___lmul@product^0,f,c
  2462   001940  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  2463   001942  220F               	addwfc	(___lmul@product+1)^0,f,c
  2464   001944  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  2465   001946  2210               	addwfc	(___lmul@product+2)^0,f,c
  2466   001948  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  2467   00194A  2211               	addwfc	(___lmul@product+3)^0,f,c
  2468   00194C                     l1830:
  2469   00194C  90D8               	bcf	status,0,c
  2470   00194E  360A               	rlcf	___lmul@multiplicand^0,f,c
  2471   001950  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2472   001952  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2473   001954  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2474   001956  90D8               	bcf	status,0,c
  2475   001958  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  2476   00195A  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  2477   00195C  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  2478   00195E  3206               	rrcf	___lmul@multiplier^0,f,c
  2479   001960  5006               	movf	___lmul@multiplier^0,w,c
  2480   001962  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  2481   001964  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  2482   001966  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  2483   001968  A4D8               	btfss	status,2,c
  2484   00196A  EFB9  F00C         	goto	u1381
  2485   00196E  EFBB  F00C         	goto	u1380
  2486   001972                     u1381:
  2487   001972  EF97  F00C         	goto	l1826
  2488   001976                     u1380:
  2489   001976  C00E  F006         	movff	___lmul@product,?___lmul
  2490   00197A  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  2491   00197E  C010  F008         	movff	___lmul@product+2,?___lmul+2
  2492   001982  C011  F009         	movff	___lmul@product+3,?___lmul+3
  2493   001986  0012               	return		;funcret
  2494   001988                     __end_of___lmul:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _move *****************
  2498 ;; Defined at:
  2499 ;;		line 157 in file "main.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  x               2   29[COMRAM] int 
  2502 ;;  r               2   31[COMRAM] int 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2   29[COMRAM] int 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2514 ;;      Params:         4       0       0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0
  2517 ;;      Totals:         4       0       0       0       0       0       0
  2518 ;;Total ram usage:        4 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 2
  2521 ;; This function calls:
  2522 ;;		___awmod
  2523 ;; This function is called by:
  2524 ;;		_random_pattern
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text6
  2529   000E86                     __ptext6:
  2530                           	callstack 0
  2531   000E86                     _move:
  2532                           	callstack 27
  2533   000E86                     
  2534                           ;main.c: 158:     prevx = x;
  2535   000E86  5020               	movf	move@r^0,w,c
  2536   000E88  1021               	iorwf	(move@r+1)^0,w,c
  2537   000E8A  A4D8               	btfss	status,2,c
  2538   000E8C  EF4A  F007         	goto	u1561
  2539   000E90  EF4C  F007         	goto	u1560
  2540   000E94                     u1561:
  2541   000E94  EF70  F007         	goto	l1986
  2542   000E98                     u1560:
  2543   000E98  C01E  F018         	movff	move@x,___awmod@dividend
  2544   000E9C  C01F  F019         	movff	move@x+1,___awmod@dividend+1
  2545   000EA0  0E00               	movlw	0
  2546   000EA2  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2547   000EA4  0E05               	movlw	5
  2548   000EA6  6E1A               	movwf	___awmod@divisor^0,c
  2549   000EA8  EC24  F00B         	call	___awmod	;wreg free
  2550   000EAC  0E04               	movlw	4
  2551   000EAE  1818               	xorwf	?___awmod^0,w,c
  2552   000EB0  1019               	iorwf	(?___awmod+1)^0,w,c
  2553   000EB2  B4D8               	btfsc	status,2,c
  2554   000EB4  EF5E  F007         	goto	u1571
  2555   000EB8  EF60  F007         	goto	u1570
  2556   000EBC                     u1571:
  2557   000EBC  EF68  F007         	goto	l1984
  2558   000EC0                     u1570:
  2559   000EC0  0E01               	movlw	1
  2560   000EC2  241E               	addwf	move@x^0,w,c
  2561   000EC4  6E1E               	movwf	move@x^0,c
  2562   000EC6  0E00               	movlw	0
  2563   000EC8  201F               	addwfc	(move@x+1)^0,w,c
  2564   000ECA  6E1F               	movwf	(move@x+1)^0,c
  2565   000ECC  EF4E  F008         	goto	l2026
  2566   000ED0                     l1984:
  2567   000ED0  0EFC               	movlw	252
  2568   000ED2  241E               	addwf	move@x^0,w,c
  2569   000ED4  6E1E               	movwf	move@x^0,c
  2570   000ED6  0EFF               	movlw	255
  2571   000ED8  201F               	addwfc	(move@x+1)^0,w,c
  2572   000EDA  6E1F               	movwf	(move@x+1)^0,c
  2573   000EDC  EF4E  F008         	goto	l2026
  2574   000EE0                     l1986:
  2575   000EE0  0420               	decf	move@r^0,w,c
  2576   000EE2  1021               	iorwf	(move@r+1)^0,w,c
  2577   000EE4  A4D8               	btfss	status,2,c
  2578   000EE6  EF77  F007         	goto	u1581
  2579   000EEA  EF79  F007         	goto	u1580
  2580   000EEE                     u1581:
  2581   000EEE  EF9C  F007         	goto	l1994
  2582   000EF2                     u1580:
  2583   000EF2  C01E  F018         	movff	move@x,___awmod@dividend
  2584   000EF6  C01F  F019         	movff	move@x+1,___awmod@dividend+1
  2585   000EFA  0E00               	movlw	0
  2586   000EFC  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2587   000EFE  0E05               	movlw	5
  2588   000F00  6E1A               	movwf	___awmod@divisor^0,c
  2589   000F02  EC24  F00B         	call	___awmod	;wreg free
  2590   000F06  5018               	movf	?___awmod^0,w,c
  2591   000F08  1019               	iorwf	(?___awmod+1)^0,w,c
  2592   000F0A  B4D8               	btfsc	status,2,c
  2593   000F0C  EF8A  F007         	goto	u1591
  2594   000F10  EF8C  F007         	goto	u1590
  2595   000F14                     u1591:
  2596   000F14  EF94  F007         	goto	l1992
  2597   000F18                     u1590:
  2598   000F18  0EFF               	movlw	255
  2599   000F1A  241E               	addwf	move@x^0,w,c
  2600   000F1C  6E1E               	movwf	move@x^0,c
  2601   000F1E  0EFF               	movlw	255
  2602   000F20  201F               	addwfc	(move@x+1)^0,w,c
  2603   000F22  6E1F               	movwf	(move@x+1)^0,c
  2604   000F24  EF4E  F008         	goto	l2026
  2605   000F28                     l1992:
  2606   000F28  0E04               	movlw	4
  2607   000F2A  241E               	addwf	move@x^0,w,c
  2608   000F2C  6E1E               	movwf	move@x^0,c
  2609   000F2E  0E00               	movlw	0
  2610   000F30  201F               	addwfc	(move@x+1)^0,w,c
  2611   000F32  6E1F               	movwf	(move@x+1)^0,c
  2612   000F34  EF4E  F008         	goto	l2026
  2613   000F38                     l1994:
  2614   000F38  0E02               	movlw	2
  2615   000F3A  1820               	xorwf	move@r^0,w,c
  2616   000F3C  1021               	iorwf	(move@r+1)^0,w,c
  2617   000F3E  A4D8               	btfss	status,2,c
  2618   000F40  EFA4  F007         	goto	u1601
  2619   000F44  EFA6  F007         	goto	u1600
  2620   000F48                     u1601:
  2621   000F48  EFCE  F007         	goto	l2002
  2622   000F4C                     u1600:
  2623   000F4C  C01E  F018         	movff	move@x,___awmod@dividend
  2624   000F50  C01F  F019         	movff	move@x+1,___awmod@dividend+1
  2625   000F54  0E00               	movlw	0
  2626   000F56  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2627   000F58  0E19               	movlw	25
  2628   000F5A  6E1A               	movwf	___awmod@divisor^0,c
  2629   000F5C  EC24  F00B         	call	___awmod	;wreg free
  2630   000F60  BE19               	btfsc	(?___awmod+1)^0,7,c
  2631   000F62  EFBE  F007         	goto	u1610
  2632   000F66  5019               	movf	(?___awmod+1)^0,w,c
  2633   000F68  E107               	bnz	u1611
  2634   000F6A  0E14               	movlw	20
  2635   000F6C  5C18               	subwf	?___awmod^0,w,c
  2636   000F6E  B0D8               	btfsc	status,0,c
  2637   000F70  EFBC  F007         	goto	u1611
  2638   000F74  EFBE  F007         	goto	u1610
  2639   000F78                     u1611:
  2640   000F78  EFC6  F007         	goto	l2000
  2641   000F7C                     u1610:
  2642   000F7C  0E05               	movlw	5
  2643   000F7E  241E               	addwf	move@x^0,w,c
  2644   000F80  6E1E               	movwf	move@x^0,c
  2645   000F82  0E00               	movlw	0
  2646   000F84  201F               	addwfc	(move@x+1)^0,w,c
  2647   000F86  6E1F               	movwf	(move@x+1)^0,c
  2648   000F88  EF4E  F008         	goto	l2026
  2649   000F8C                     l2000:
  2650   000F8C  0EEC               	movlw	236
  2651   000F8E  241E               	addwf	move@x^0,w,c
  2652   000F90  6E1E               	movwf	move@x^0,c
  2653   000F92  0EFF               	movlw	255
  2654   000F94  201F               	addwfc	(move@x+1)^0,w,c
  2655   000F96  6E1F               	movwf	(move@x+1)^0,c
  2656   000F98  EF4E  F008         	goto	l2026
  2657   000F9C                     l2002:
  2658   000F9C  0E03               	movlw	3
  2659   000F9E  1820               	xorwf	move@r^0,w,c
  2660   000FA0  1021               	iorwf	(move@r+1)^0,w,c
  2661   000FA2  A4D8               	btfss	status,2,c
  2662   000FA4  EFD6  F007         	goto	u1621
  2663   000FA8  EFD8  F007         	goto	u1620
  2664   000FAC                     u1621:
  2665   000FAC  EF00  F008         	goto	l2010
  2666   000FB0                     u1620:
  2667   000FB0  C01E  F018         	movff	move@x,___awmod@dividend
  2668   000FB4  C01F  F019         	movff	move@x+1,___awmod@dividend+1
  2669   000FB8  0E00               	movlw	0
  2670   000FBA  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2671   000FBC  0E19               	movlw	25
  2672   000FBE  6E1A               	movwf	___awmod@divisor^0,c
  2673   000FC0  EC24  F00B         	call	___awmod	;wreg free
  2674   000FC4  BE19               	btfsc	(?___awmod+1)^0,7,c
  2675   000FC6  EFEE  F007         	goto	u1631
  2676   000FCA  5019               	movf	(?___awmod+1)^0,w,c
  2677   000FCC  E109               	bnz	u1630
  2678   000FCE  0E05               	movlw	5
  2679   000FD0  5C18               	subwf	?___awmod^0,w,c
  2680   000FD2  A0D8               	btfss	status,0,c
  2681   000FD4  EFEE  F007         	goto	u1631
  2682   000FD8  EFF0  F007         	goto	u1630
  2683   000FDC                     u1631:
  2684   000FDC  EFF8  F007         	goto	l2008
  2685   000FE0                     u1630:
  2686   000FE0  0EFB               	movlw	251
  2687   000FE2  241E               	addwf	move@x^0,w,c
  2688   000FE4  6E1E               	movwf	move@x^0,c
  2689   000FE6  0EFF               	movlw	255
  2690   000FE8  201F               	addwfc	(move@x+1)^0,w,c
  2691   000FEA  6E1F               	movwf	(move@x+1)^0,c
  2692   000FEC  EF4E  F008         	goto	l2026
  2693   000FF0                     l2008:
  2694   000FF0  0E14               	movlw	20
  2695   000FF2  241E               	addwf	move@x^0,w,c
  2696   000FF4  6E1E               	movwf	move@x^0,c
  2697   000FF6  0E00               	movlw	0
  2698   000FF8  201F               	addwfc	(move@x+1)^0,w,c
  2699   000FFA  6E1F               	movwf	(move@x+1)^0,c
  2700   000FFC  EF4E  F008         	goto	l2026
  2701   001000                     l2010:
  2702   001000  0E04               	movlw	4
  2703   001002  1820               	xorwf	move@r^0,w,c
  2704   001004  1021               	iorwf	(move@r+1)^0,w,c
  2705   001006  A4D8               	btfss	status,2,c
  2706   001008  EF08  F008         	goto	u1641
  2707   00100C  EF0A  F008         	goto	u1640
  2708   001010                     u1641:
  2709   001010  EF28  F008         	goto	l2018
  2710   001014                     u1640:
  2711   001014  BE1F               	btfsc	(move@x+1)^0,7,c
  2712   001016  EF18  F008         	goto	u1650
  2713   00101A  501F               	movf	(move@x+1)^0,w,c
  2714   00101C  E107               	bnz	u1651
  2715   00101E  0E64               	movlw	100
  2716   001020  5C1E               	subwf	move@x^0,w,c
  2717   001022  B0D8               	btfsc	status,0,c
  2718   001024  EF16  F008         	goto	u1651
  2719   001028  EF18  F008         	goto	u1650
  2720   00102C                     u1651:
  2721   00102C  EF20  F008         	goto	l2016
  2722   001030                     u1650:
  2723   001030  0E19               	movlw	25
  2724   001032  241E               	addwf	move@x^0,w,c
  2725   001034  6E1E               	movwf	move@x^0,c
  2726   001036  0E00               	movlw	0
  2727   001038  201F               	addwfc	(move@x+1)^0,w,c
  2728   00103A  6E1F               	movwf	(move@x+1)^0,c
  2729   00103C  EF4E  F008         	goto	l2026
  2730   001040                     l2016:
  2731   001040  0E9C               	movlw	156
  2732   001042  241E               	addwf	move@x^0,w,c
  2733   001044  6E1E               	movwf	move@x^0,c
  2734   001046  0EFF               	movlw	255
  2735   001048  201F               	addwfc	(move@x+1)^0,w,c
  2736   00104A  6E1F               	movwf	(move@x+1)^0,c
  2737   00104C  EF4E  F008         	goto	l2026
  2738   001050                     l2018:
  2739   001050  0E05               	movlw	5
  2740   001052  1820               	xorwf	move@r^0,w,c
  2741   001054  1021               	iorwf	(move@r+1)^0,w,c
  2742   001056  A4D8               	btfss	status,2,c
  2743   001058  EF30  F008         	goto	u1661
  2744   00105C  EF32  F008         	goto	u1660
  2745   001060                     u1661:
  2746   001060  EF4E  F008         	goto	l2026
  2747   001064                     u1660:
  2748   001064  BE1F               	btfsc	(move@x+1)^0,7,c
  2749   001066  EF3E  F008         	goto	u1671
  2750   00106A  501F               	movf	(move@x+1)^0,w,c
  2751   00106C  E109               	bnz	u1670
  2752   00106E  0E19               	movlw	25
  2753   001070  5C1E               	subwf	move@x^0,w,c
  2754   001072  A0D8               	btfss	status,0,c
  2755   001074  EF3E  F008         	goto	u1671
  2756   001078  EF40  F008         	goto	u1670
  2757   00107C                     u1671:
  2758   00107C  EF48  F008         	goto	l2024
  2759   001080                     u1670:
  2760   001080  0EE7               	movlw	231
  2761   001082  241E               	addwf	move@x^0,w,c
  2762   001084  6E1E               	movwf	move@x^0,c
  2763   001086  0EFF               	movlw	255
  2764   001088  201F               	addwfc	(move@x+1)^0,w,c
  2765   00108A  6E1F               	movwf	(move@x+1)^0,c
  2766   00108C  EF4E  F008         	goto	l2026
  2767   001090                     l2024:
  2768   001090  0E64               	movlw	100
  2769   001092  241E               	addwf	move@x^0,w,c
  2770   001094  6E1E               	movwf	move@x^0,c
  2771   001096  0E00               	movlw	0
  2772   001098  201F               	addwfc	(move@x+1)^0,w,c
  2773   00109A  6E1F               	movwf	(move@x+1)^0,c
  2774   00109C                     l2026:
  2775                           
  2776                           ;main.c: 164:     x2 = move(x2,r2);
  2777   00109C  C01E  F01E         	movff	move@x,?_move
  2778   0010A0  C01F  F01F         	movff	move@x+1,?_move+1
  2779   0010A4  0012               	return		;funcret
  2780   0010A6                     __end_of_move:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _clear_plane *****************
  2784 ;; Defined at:
  2785 ;;		line 83 in file "main.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  j               2   47[COMRAM] int 
  2790 ;;  i               2   45[COMRAM] int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         0       0       0       0       0       0       0
  2801 ;;      Locals:         4       0       0       0       0       0       0
  2802 ;;      Temps:          2       0       0       0       0       0       0
  2803 ;;      Totals:         6       0       0       0       0       0       0
  2804 ;;Total ram usage:        6 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 2
  2807 ;; This function calls:
  2808 ;;		___wmul
  2809 ;;		_draw_plane
  2810 ;; This function is called by:
  2811 ;;		_random_pattern
  2812 ;;		_scan
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text7
  2817   0017A2                     __ptext7:
  2818                           	callstack 0
  2819   0017A2                     _clear_plane:
  2820                           	callstack 27
  2821   0017A2                     
  2822                           ;main.c: 84:         case 2:
  2823   0017A2  0E00               	movlw	0
  2824   0017A4  6E2F               	movwf	(clear_plane@i+1)^0,c
  2825   0017A6  0E00               	movlw	0
  2826   0017A8  6E2E               	movwf	clear_plane@i^0,c
  2827   0017AA                     l1920:
  2828                           
  2829                           ;main.c: 85:             TRISAbits.TRISA7 = 0;
  2830   0017AA  0E00               	movlw	0
  2831   0017AC  6E31               	movwf	(clear_plane@j+1)^0,c
  2832   0017AE  0E00               	movlw	0
  2833   0017B0  6E30               	movwf	clear_plane@j^0,c
  2834   0017B2                     l1926:
  2835                           
  2836                           ;main.c: 86:             LATAbits.LA7 = 1;
  2837   0017B2  C02E  F026         	movff	clear_plane@i,___wmul@multiplier
  2838   0017B6  C02F  F027         	movff	clear_plane@i+1,___wmul@multiplier+1
  2839   0017BA  0E00               	movlw	0
  2840   0017BC  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  2841   0017BE  0E0A               	movlw	10
  2842   0017C0  6E28               	movwf	___wmul@multiplicand^0,c
  2843   0017C2  EC51  F00D         	call	___wmul	;wreg free
  2844   0017C6  0E80               	movlw	low _plane
  2845   0017C8  2426               	addwf	?___wmul^0,w,c
  2846   0017CA  6E2C               	movwf	??_clear_plane^0,c
  2847   0017CC  0E00               	movlw	high _plane
  2848   0017CE  2027               	addwfc	(?___wmul+1)^0,w,c
  2849   0017D0  6E2D               	movwf	(??_clear_plane+1)^0,c
  2850   0017D2  90D8               	bcf	status,0,c
  2851   0017D4  3430               	rlcf	clear_plane@j^0,w,c
  2852   0017D6  6ED9               	movwf	fsr2l,c
  2853   0017D8  3431               	rlcf	(clear_plane@j+1)^0,w,c
  2854   0017DA  6EDA               	movwf	fsr2h,c
  2855   0017DC  502C               	movf	??_clear_plane^0,w,c
  2856   0017DE  26D9               	addwf	fsr2l,f,c
  2857   0017E0  502D               	movf	(??_clear_plane+1)^0,w,c
  2858   0017E2  22DA               	addwfc	fsr2h,f,c
  2859   0017E4  0E00               	movlw	0
  2860   0017E6  6EDE               	movwf	postinc2,c
  2861   0017E8  0E00               	movlw	0
  2862   0017EA  6EDD               	movwf	postdec2,c
  2863   0017EC  4A30               	infsnz	clear_plane@j^0,f,c
  2864   0017EE  2A31               	incf	(clear_plane@j+1)^0,f,c
  2865   0017F0  BE31               	btfsc	(clear_plane@j+1)^0,7,c
  2866   0017F2  EF04  F00C         	goto	u1511
  2867   0017F6  5031               	movf	(clear_plane@j+1)^0,w,c
  2868   0017F8  E109               	bnz	u1510
  2869   0017FA  0E05               	movlw	5
  2870   0017FC  5C30               	subwf	clear_plane@j^0,w,c
  2871   0017FE  A0D8               	btfss	status,0,c
  2872   001800  EF04  F00C         	goto	u1511
  2873   001804  EF06  F00C         	goto	u1510
  2874   001808                     u1511:
  2875   001808  EFD9  F00B         	goto	l1926
  2876   00180C                     u1510:
  2877   00180C  4A2E               	infsnz	clear_plane@i^0,f,c
  2878   00180E  2A2F               	incf	(clear_plane@i+1)^0,f,c
  2879   001810  BE2F               	btfsc	(clear_plane@i+1)^0,7,c
  2880   001812  EF14  F00C         	goto	u1521
  2881   001816  502F               	movf	(clear_plane@i+1)^0,w,c
  2882   001818  E109               	bnz	u1520
  2883   00181A  0E05               	movlw	5
  2884   00181C  5C2E               	subwf	clear_plane@i^0,w,c
  2885   00181E  A0D8               	btfss	status,0,c
  2886   001820  EF14  F00C         	goto	u1521
  2887   001824  EF16  F00C         	goto	u1520
  2888   001828                     u1521:
  2889   001828  EFD5  F00B         	goto	l1920
  2890   00182C                     u1520:
  2891   00182C                     
  2892                           ;main.c: 87:             break;
  2893   00182C  EC53  F008         	call	_draw_plane	;wreg free
  2894   001830  0012               	return		;funcret
  2895   001832                     __end_of_clear_plane:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _rainfall *****************
  2899 ;; Defined at:
  2900 ;;		line 213 in file "main.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  id              2   49[COMRAM] int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  x               2   53[COMRAM] int 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2914 ;;      Params:         2       0       0       0       0       0       0
  2915 ;;      Locals:         2       0       0       0       0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0       0
  2917 ;;      Totals:         6       0       0       0       0       0       0
  2918 ;;Total ram usage:        6 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 3
  2921 ;; This function calls:
  2922 ;;		___awmod
  2923 ;;		___wmul
  2924 ;;		_clear_cube
  2925 ;;		_draw_plane
  2926 ;;		_set_plane
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text8
  2933   0013EC                     __ptext8:
  2934                           	callstack 0
  2935   0013EC                     _rainfall:
  2936                           	callstack 27
  2937   0013EC                     
  2938                           ;main.c: 214: 
  2939   0013EC  EC7C  F00B         	call	_clear_cube	;wreg free
  2940   0013F0                     
  2941                           ;main.c: 215:     while(mode == id){
  2942   0013F0  0E00               	movlw	0
  2943   0013F2  6E37               	movwf	(rainfall@x+1)^0,c
  2944   0013F4  0E00               	movlw	0
  2945   0013F6  6E36               	movwf	rainfall@x^0,c
  2946   0013F8                     
  2947                           ;main.c: 216:         for(int i = 0; i < 5; i++)
  2948   0013F8  0E00               	movlw	0
  2949   0013FA  0100               	movlb	0	; () banked
  2950   0013FC  6F81               	movwf	(_plane+1)& (0+255),b
  2951   0013FE  0E01               	movlw	1
  2952   001400  6F80               	movwf	_plane& (0+255),b
  2953                           
  2954                           ;main.c: 217:             for(int j = 0; j < 5; j++)
  2955   001402  EF57  F00A         	goto	l2186
  2956   001406                     l2172:
  2957                           
  2958                           ;main.c: 218:                 plane[i][j] = 1;
  2959   001406  C036  F026         	movff	rainfall@x,___wmul@multiplier
  2960   00140A  C037  F027         	movff	rainfall@x+1,___wmul@multiplier+1
  2961   00140E  0E00               	movlw	0
  2962   001410  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  2963   001412  0E0A               	movlw	10
  2964   001414  6E28               	movwf	___wmul@multiplicand^0,c
  2965   001416  EC51  F00D         	call	___wmul	;wreg free
  2966   00141A  0E80               	movlw	low _plane
  2967   00141C  2426               	addwf	?___wmul^0,w,c
  2968   00141E  6E34               	movwf	??_rainfall^0,c
  2969   001420  0E00               	movlw	high _plane
  2970   001422  2027               	addwfc	(?___wmul+1)^0,w,c
  2971   001424  6E35               	movwf	(??_rainfall+1)^0,c
  2972   001426  90D8               	bcf	status,0,c
  2973   001428  3436               	rlcf	rainfall@x^0,w,c
  2974   00142A  6ED9               	movwf	fsr2l,c
  2975   00142C  3437               	rlcf	(rainfall@x+1)^0,w,c
  2976   00142E  6EDA               	movwf	fsr2h,c
  2977   001430  5034               	movf	??_rainfall^0,w,c
  2978   001432  26D9               	addwf	fsr2l,f,c
  2979   001434  5035               	movf	(??_rainfall+1)^0,w,c
  2980   001436  22DA               	addwfc	fsr2h,f,c
  2981   001438  0E00               	movlw	0
  2982   00143A  6EDE               	movwf	postinc2,c
  2983   00143C  0E00               	movlw	0
  2984   00143E  6EDD               	movwf	postdec2,c
  2985   001440                     
  2986                           ;main.c: 219: 
  2987   001440  EC53  F008         	call	_draw_plane	;wreg free
  2988   001444                     
  2989                           ;main.c: 220:         for(int i = 0; i < 5; i++){
  2990   001444  4A36               	infsnz	rainfall@x^0,f,c
  2991   001446  2A37               	incf	(rainfall@x+1)^0,f,c
  2992   001448                     
  2993                           ;main.c: 221:             set_plane(i);
  2994   001448  C036  F018         	movff	rainfall@x,___awmod@dividend
  2995   00144C  C037  F019         	movff	rainfall@x+1,___awmod@dividend+1
  2996   001450  0E00               	movlw	0
  2997   001452  6E1B               	movwf	(___awmod@divisor+1)^0,c
  2998   001454  0E05               	movlw	5
  2999   001456  6E1A               	movwf	___awmod@divisor^0,c
  3000   001458  EC24  F00B         	call	___awmod	;wreg free
  3001   00145C  C018  F036         	movff	?___awmod,rainfall@x
  3002   001460  C019  F037         	movff	?___awmod+1,rainfall@x+1
  3003   001464                     
  3004                           ;main.c: 222:             draw_plane();
  3005   001464  C036  F026         	movff	rainfall@x,___wmul@multiplier
  3006   001468  C037  F027         	movff	rainfall@x+1,___wmul@multiplier+1
  3007   00146C  0E00               	movlw	0
  3008   00146E  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  3009   001470  0E0A               	movlw	10
  3010   001472  6E28               	movwf	___wmul@multiplicand^0,c
  3011   001474  EC51  F00D         	call	___wmul	;wreg free
  3012   001478  0E80               	movlw	low _plane
  3013   00147A  2426               	addwf	?___wmul^0,w,c
  3014   00147C  6E34               	movwf	??_rainfall^0,c
  3015   00147E  0E00               	movlw	high _plane
  3016   001480  2027               	addwfc	(?___wmul+1)^0,w,c
  3017   001482  6E35               	movwf	(??_rainfall+1)^0,c
  3018   001484  90D8               	bcf	status,0,c
  3019   001486  3436               	rlcf	rainfall@x^0,w,c
  3020   001488  6ED9               	movwf	fsr2l,c
  3021   00148A  3437               	rlcf	(rainfall@x+1)^0,w,c
  3022   00148C  6EDA               	movwf	fsr2h,c
  3023   00148E  5034               	movf	??_rainfall^0,w,c
  3024   001490  26D9               	addwf	fsr2l,f,c
  3025   001492  5035               	movf	(??_rainfall+1)^0,w,c
  3026   001494  22DA               	addwfc	fsr2h,f,c
  3027   001496  0E01               	movlw	1
  3028   001498  6EDE               	movwf	postinc2,c
  3029   00149A  0E00               	movlw	0
  3030   00149C  6EDD               	movwf	postdec2,c
  3031   00149E                     
  3032                           ;main.c: 223:             _delay((unsigned long)((8)*(4000000/4000.0)));
  3033   00149E  C036  F026         	movff	rainfall@x,set_plane@a
  3034   0014A2  C037  F027         	movff	rainfall@x+1,set_plane@a+1
  3035   0014A6  EC71  F00D         	call	_set_plane	;wreg free
  3036   0014AA                     
  3037                           ;main.c: 224:         }
  3038   0014AA  EC53  F008         	call	_draw_plane	;wreg free
  3039   0014AE                     l2186:
  3040                           
  3041                           ;main.c: 217:             for(int j = 0; j < 5; j++)
  3042   0014AE  5032               	movf	rainfall@id^0,w,c
  3043   0014B0  1854               	xorwf	_mode^0,w,c
  3044   0014B2  E109               	bnz	u1890
  3045   0014B4  5033               	movf	(rainfall@id+1)^0,w,c
  3046   0014B6  1855               	xorwf	(_mode+1)^0,w,c
  3047   0014B8  B4D8               	btfsc	status,2,c
  3048   0014BA  EF61  F00A         	goto	u1891
  3049   0014BE  EF63  F00A         	goto	u1890
  3050   0014C2                     u1891:
  3051   0014C2  EF03  F00A         	goto	l2172
  3052   0014C6                     u1890:
  3053   0014C6  0012               	return		;funcret
  3054   0014C8                     __end_of_rainfall:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _pulsing *****************
  3058 ;; Defined at:
  3059 ;;		line 342 in file "main.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  id              2   49[COMRAM] int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  j               2   55[COMRAM] int 
  3064 ;;  i               2   59[COMRAM] int 
  3065 ;;  i               2   53[COMRAM] int 
  3066 ;;  i               2   57[COMRAM] int 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3076 ;;      Params:         2       0       0       0       0       0       0
  3077 ;;      Locals:         8       0       0       0       0       0       0
  3078 ;;      Temps:          2       0       0       0       0       0       0
  3079 ;;      Totals:        12       0       0       0       0       0       0
  3080 ;;Total ram usage:       12 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 3
  3083 ;; This function calls:
  3084 ;;		___wmul
  3085 ;;		_clear_cube
  3086 ;;		_draw_plane
  3087 ;;		_plane_on
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text9
  3094   000C38                     __ptext9:
  3095                           	callstack 0
  3096   000C38                     _pulsing:
  3097                           	callstack 27
  3098   000C38                     
  3099                           ;main.c: 344:         for(int i = 0; i < 5; i++){
  3100   000C38  EF36  F007         	goto	l2556
  3101   000C3C                     l2476:
  3102                           
  3103                           ;main.c: 345:             for(int j = 0; j < 5; j++)
  3104   000C3C  EC7C  F00B         	call	_clear_cube	;wreg free
  3105   000C40                     
  3106                           ;main.c: 346:                 plane[i][j] = 1;
  3107   000C40  0E00               	movlw	0
  3108   000C42  0100               	movlb	0	; () banked
  3109   000C44  6F99               	movwf	(_plane+25)& (0+255),b
  3110   000C46  0E01               	movlw	1
  3111   000C48  6F98               	movwf	(_plane+24)& (0+255),b
  3112   000C4A                     
  3113                           ; BSR set to: 0
  3114                           ;main.c: 347:         }
  3115   000C4A  EC53  F008         	call	_draw_plane	;wreg free
  3116   000C4E                     
  3117                           ;main.c: 348:         plane_on(0);
  3118   000C4E  0E00               	movlw	0
  3119   000C50  6E07               	movwf	(plane_on@a+1)^0,c
  3120   000C52  0E02               	movlw	2
  3121   000C54  6E06               	movwf	plane_on@a^0,c
  3122   000C56  EC19  F00C         	call	_plane_on	;wreg free
  3123   000C5A                     
  3124                           ;main.c: 349:         plane_on(4);
  3125   000C5A  0E41               	movlw	65
  3126   000C5C  6E34               	movwf	??_pulsing^0,c
  3127   000C5E  0EEE               	movlw	238
  3128   000C60                     u2317:
  3129   000C60  2EE8               	decfsz	wreg,f,c
  3130   000C62  D7FE               	bra	u2317
  3131   000C64  2E34               	decfsz	??_pulsing^0,f,c
  3132   000C66  D7FC               	bra	u2317
  3133   000C68  D000               	nop2	
  3134   000C6A                     
  3135                           ;main.c: 350:         draw_plane();
  3136   000C6A  0E00               	movlw	0
  3137   000C6C  6E3B               	movwf	(pulsing@i+1)^0,c
  3138   000C6E  0E01               	movlw	1
  3139   000C70  6E3A               	movwf	pulsing@i^0,c
  3140   000C72                     l2492:
  3141                           
  3142                           ;main.c: 351:         _delay((unsigned long)((50)*(4000000/4000.0)));
  3143   000C72  90D8               	bcf	status,0,c
  3144   000C74  343A               	rlcf	pulsing@i^0,w,c
  3145   000C76  6ED9               	movwf	fsr2l,c
  3146   000C78  343B               	rlcf	(pulsing@i+1)^0,w,c
  3147   000C7A  6EDA               	movwf	fsr2h,c
  3148   000C7C  0E8A               	movlw	low (_plane+10)
  3149   000C7E  26D9               	addwf	fsr2l,f,c
  3150   000C80  0E00               	movlw	high (_plane+10)
  3151   000C82  22DA               	addwfc	fsr2h,f,c
  3152   000C84  0E01               	movlw	1
  3153   000C86  6EDE               	movwf	postinc2,c
  3154   000C88  0E00               	movlw	0
  3155   000C8A  6EDD               	movwf	postdec2,c
  3156                           
  3157                           ;main.c: 352:         clear_cube();
  3158   000C8C  90D8               	bcf	status,0,c
  3159   000C8E  343A               	rlcf	pulsing@i^0,w,c
  3160   000C90  6ED9               	movwf	fsr2l,c
  3161   000C92  343B               	rlcf	(pulsing@i+1)^0,w,c
  3162   000C94  6EDA               	movwf	fsr2h,c
  3163   000C96  0E9E               	movlw	low (_plane+30)
  3164   000C98  26D9               	addwf	fsr2l,f,c
  3165   000C9A  0E00               	movlw	high (_plane+30)
  3166   000C9C  22DA               	addwfc	fsr2h,f,c
  3167   000C9E  0E01               	movlw	1
  3168   000CA0  6EDE               	movwf	postinc2,c
  3169   000CA2  0E00               	movlw	0
  3170   000CA4  6EDD               	movwf	postdec2,c
  3171   000CA6                     
  3172                           ;main.c: 353:         for(int i = 1; i < 4; i++){
  3173   000CA6  4A3A               	infsnz	pulsing@i^0,f,c
  3174   000CA8  2A3B               	incf	(pulsing@i+1)^0,f,c
  3175   000CAA  BE3B               	btfsc	(pulsing@i+1)^0,7,c
  3176   000CAC  EF61  F006         	goto	u2171
  3177   000CB0  503B               	movf	(pulsing@i+1)^0,w,c
  3178   000CB2  E109               	bnz	u2170
  3179   000CB4  0E04               	movlw	4
  3180   000CB6  5C3A               	subwf	pulsing@i^0,w,c
  3181   000CB8  A0D8               	btfss	status,0,c
  3182   000CBA  EF61  F006         	goto	u2171
  3183   000CBE  EF63  F006         	goto	u2170
  3184   000CC2                     u2171:
  3185   000CC2  EF39  F006         	goto	l2492
  3186   000CC6                     u2170:
  3187   000CC6                     
  3188                           ;main.c: 354:             plane[1][i] = 1;
  3189   000CC6  0E00               	movlw	0
  3190   000CC8  0100               	movlb	0	; () banked
  3191   000CCA  6F97               	movwf	(_plane+23)& (0+255),b
  3192   000CCC  0E01               	movlw	1
  3193   000CCE  6F96               	movwf	(_plane+22)& (0+255),b
  3194                           
  3195                           ;main.c: 355:             plane[2][i] = 1;
  3196   000CD0  0E00               	movlw	0
  3197   000CD2  6F9B               	movwf	(_plane+27)& (0+255),b
  3198   000CD4  0E01               	movlw	1
  3199   000CD6  6F9A               	movwf	(_plane+26)& (0+255),b
  3200   000CD8                     
  3201                           ; BSR set to: 0
  3202                           ;main.c: 356:             plane[3][i] = 1;
  3203   000CD8  EC53  F008         	call	_draw_plane	;wreg free
  3204   000CDC                     
  3205                           ;main.c: 357:         }
  3206   000CDC  0E00               	movlw	0
  3207   000CDE  6E07               	movwf	(plane_on@a+1)^0,c
  3208   000CE0  0E01               	movlw	1
  3209   000CE2  6E06               	movwf	plane_on@a^0,c
  3210   000CE4  EC19  F00C         	call	_plane_on	;wreg free
  3211   000CE8                     
  3212                           ;main.c: 358:         plane_on(1);
  3213   000CE8  0E00               	movlw	0
  3214   000CEA  6E07               	movwf	(plane_on@a+1)^0,c
  3215   000CEC  0E03               	movlw	3
  3216   000CEE  6E06               	movwf	plane_on@a^0,c
  3217   000CF0  EC19  F00C         	call	_plane_on	;wreg free
  3218   000CF4                     
  3219                           ;main.c: 359:         plane_on(2);
  3220   000CF4  0E41               	movlw	65
  3221   000CF6  6E34               	movwf	??_pulsing^0,c
  3222   000CF8  0EEE               	movlw	238
  3223   000CFA                     u2327:
  3224   000CFA  2EE8               	decfsz	wreg,f,c
  3225   000CFC  D7FE               	bra	u2327
  3226   000CFE  2E34               	decfsz	??_pulsing^0,f,c
  3227   000D00  D7FC               	bra	u2327
  3228   000D02  D000               	nop2	
  3229   000D04                     
  3230                           ;main.c: 360:         plane_on(3);
  3231   000D04  0E00               	movlw	0
  3232   000D06  6E37               	movwf	(pulsing@i_753+1)^0,c
  3233   000D08  0E00               	movlw	0
  3234   000D0A  6E36               	movwf	pulsing@i_753^0,c
  3235   000D0C                     l2514:
  3236                           
  3237                           ;main.c: 361:         draw_plane();
  3238   000D0C  0E00               	movlw	0
  3239   000D0E  6E39               	movwf	(pulsing@j+1)^0,c
  3240   000D10  0E00               	movlw	0
  3241   000D12  6E38               	movwf	pulsing@j^0,c
  3242   000D14                     l2520:
  3243                           
  3244                           ;main.c: 362:         _delay((unsigned long)((50)*(4000000/4000.0)));
  3245   000D14  C036  F026         	movff	pulsing@i_753,___wmul@multiplier
  3246   000D18  C037  F027         	movff	pulsing@i_753+1,___wmul@multiplier+1
  3247   000D1C  0E00               	movlw	0
  3248   000D1E  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  3249   000D20  0E0A               	movlw	10
  3250   000D22  6E28               	movwf	___wmul@multiplicand^0,c
  3251   000D24  EC51  F00D         	call	___wmul	;wreg free
  3252   000D28  0E80               	movlw	low _plane
  3253   000D2A  2426               	addwf	?___wmul^0,w,c
  3254   000D2C  6E34               	movwf	??_pulsing^0,c
  3255   000D2E  0E00               	movlw	high _plane
  3256   000D30  2027               	addwfc	(?___wmul+1)^0,w,c
  3257   000D32  6E35               	movwf	(??_pulsing+1)^0,c
  3258   000D34  90D8               	bcf	status,0,c
  3259   000D36  3438               	rlcf	pulsing@j^0,w,c
  3260   000D38  6ED9               	movwf	fsr2l,c
  3261   000D3A  3439               	rlcf	(pulsing@j+1)^0,w,c
  3262   000D3C  6EDA               	movwf	fsr2h,c
  3263   000D3E  5034               	movf	??_pulsing^0,w,c
  3264   000D40  26D9               	addwf	fsr2l,f,c
  3265   000D42  5035               	movf	(??_pulsing+1)^0,w,c
  3266   000D44  22DA               	addwfc	fsr2h,f,c
  3267   000D46  0E01               	movlw	1
  3268   000D48  6EDE               	movwf	postinc2,c
  3269   000D4A  0E00               	movlw	0
  3270   000D4C  6EDD               	movwf	postdec2,c
  3271   000D4E  4A38               	infsnz	pulsing@j^0,f,c
  3272   000D50  2A39               	incf	(pulsing@j+1)^0,f,c
  3273   000D52  BE39               	btfsc	(pulsing@j+1)^0,7,c
  3274   000D54  EFB5  F006         	goto	u2181
  3275   000D58  5039               	movf	(pulsing@j+1)^0,w,c
  3276   000D5A  E109               	bnz	u2180
  3277   000D5C  0E05               	movlw	5
  3278   000D5E  5C38               	subwf	pulsing@j^0,w,c
  3279   000D60  A0D8               	btfss	status,0,c
  3280   000D62  EFB5  F006         	goto	u2181
  3281   000D66  EFB7  F006         	goto	u2180
  3282   000D6A                     u2181:
  3283   000D6A  EF8A  F006         	goto	l2520
  3284   000D6E                     u2180:
  3285   000D6E                     
  3286                           ;main.c: 363:     }
  3287   000D6E  4A36               	infsnz	pulsing@i_753^0,f,c
  3288   000D70  2A37               	incf	(pulsing@i_753+1)^0,f,c
  3289   000D72  BE37               	btfsc	(pulsing@i_753+1)^0,7,c
  3290   000D74  EFC5  F006         	goto	u2191
  3291   000D78  5037               	movf	(pulsing@i_753+1)^0,w,c
  3292   000D7A  E109               	bnz	u2190
  3293   000D7C  0E05               	movlw	5
  3294   000D7E  5C36               	subwf	pulsing@i_753^0,w,c
  3295   000D80  A0D8               	btfss	status,0,c
  3296   000D82  EFC5  F006         	goto	u2191
  3297   000D86  EFC7  F006         	goto	u2190
  3298   000D8A                     u2191:
  3299   000D8A  EF86  F006         	goto	l2514
  3300   000D8E                     u2190:
  3301   000D8E                     
  3302                           ;main.c: 364: }
  3303   000D8E  0E00               	movlw	0
  3304   000D90  6E07               	movwf	(plane_on@a+1)^0,c
  3305   000D92  0E00               	movlw	0
  3306   000D94  6E06               	movwf	plane_on@a^0,c
  3307   000D96  EC19  F00C         	call	_plane_on	;wreg free
  3308                           
  3309                           ;main.c: 365: 
  3310   000D9A  0E00               	movlw	0
  3311   000D9C  6E07               	movwf	(plane_on@a+1)^0,c
  3312   000D9E  0E04               	movlw	4
  3313   000DA0  6E06               	movwf	plane_on@a^0,c
  3314   000DA2  EC19  F00C         	call	_plane_on	;wreg free
  3315   000DA6                     
  3316                           ;main.c: 366: void main(void) {
  3317   000DA6  EC53  F008         	call	_draw_plane	;wreg free
  3318   000DAA                     
  3319                           ;main.c: 367:     init();
  3320   000DAA  0E41               	movlw	65
  3321   000DAC  6E34               	movwf	??_pulsing^0,c
  3322   000DAE  0EEE               	movlw	238
  3323   000DB0                     u2337:
  3324   000DB0  2EE8               	decfsz	wreg,f,c
  3325   000DB2  D7FE               	bra	u2337
  3326   000DB4  2E34               	decfsz	??_pulsing^0,f,c
  3327   000DB6  D7FC               	bra	u2337
  3328   000DB8  D000               	nop2	
  3329   000DBA                     
  3330                           ;main.c: 368: 
  3331   000DBA  EC7C  F00B         	call	_clear_cube	;wreg free
  3332   000DBE                     
  3333                           ;main.c: 369: 
  3334   000DBE  0E00               	movlw	0
  3335   000DC0  6E3D               	movwf	(pulsing@i_755+1)^0,c
  3336   000DC2  0E01               	movlw	1
  3337   000DC4  6E3C               	movwf	pulsing@i_755^0,c
  3338   000DC6                     l2544:
  3339                           
  3340                           ;main.c: 370: 
  3341   000DC6  90D8               	bcf	status,0,c
  3342   000DC8  343C               	rlcf	pulsing@i_755^0,w,c
  3343   000DCA  6ED9               	movwf	fsr2l,c
  3344   000DCC  343D               	rlcf	(pulsing@i_755+1)^0,w,c
  3345   000DCE  6EDA               	movwf	fsr2h,c
  3346   000DD0  0E8A               	movlw	low (_plane+10)
  3347   000DD2  26D9               	addwf	fsr2l,f,c
  3348   000DD4  0E00               	movlw	high (_plane+10)
  3349   000DD6  22DA               	addwfc	fsr2h,f,c
  3350   000DD8  0E01               	movlw	1
  3351   000DDA  6EDE               	movwf	postinc2,c
  3352   000DDC  0E00               	movlw	0
  3353   000DDE  6EDD               	movwf	postdec2,c
  3354                           
  3355                           ;main.c: 371: 
  3356   000DE0  90D8               	bcf	status,0,c
  3357   000DE2  343C               	rlcf	pulsing@i_755^0,w,c
  3358   000DE4  6ED9               	movwf	fsr2l,c
  3359   000DE6  343D               	rlcf	(pulsing@i_755+1)^0,w,c
  3360   000DE8  6EDA               	movwf	fsr2h,c
  3361   000DEA  0E94               	movlw	low (_plane+20)
  3362   000DEC  26D9               	addwf	fsr2l,f,c
  3363   000DEE  0E00               	movlw	high (_plane+20)
  3364   000DF0  22DA               	addwfc	fsr2h,f,c
  3365   000DF2  0E01               	movlw	1
  3366   000DF4  6EDE               	movwf	postinc2,c
  3367   000DF6  0E00               	movlw	0
  3368   000DF8  6EDD               	movwf	postdec2,c
  3369                           
  3370                           ;main.c: 372:     while(1){
  3371   000DFA  90D8               	bcf	status,0,c
  3372   000DFC  343C               	rlcf	pulsing@i_755^0,w,c
  3373   000DFE  6ED9               	movwf	fsr2l,c
  3374   000E00  343D               	rlcf	(pulsing@i_755+1)^0,w,c
  3375   000E02  6EDA               	movwf	fsr2h,c
  3376   000E04  0E9E               	movlw	low (_plane+30)
  3377   000E06  26D9               	addwf	fsr2l,f,c
  3378   000E08  0E00               	movlw	high (_plane+30)
  3379   000E0A  22DA               	addwfc	fsr2h,f,c
  3380   000E0C  0E01               	movlw	1
  3381   000E0E  6EDE               	movwf	postinc2,c
  3382   000E10  0E00               	movlw	0
  3383   000E12  6EDD               	movwf	postdec2,c
  3384   000E14                     
  3385                           ;main.c: 373: 
  3386   000E14  4A3C               	infsnz	pulsing@i_755^0,f,c
  3387   000E16  2A3D               	incf	(pulsing@i_755+1)^0,f,c
  3388   000E18  BE3D               	btfsc	(pulsing@i_755+1)^0,7,c
  3389   000E1A  EF18  F007         	goto	u2201
  3390   000E1E  503D               	movf	(pulsing@i_755+1)^0,w,c
  3391   000E20  E109               	bnz	u2200
  3392   000E22  0E04               	movlw	4
  3393   000E24  5C3C               	subwf	pulsing@i_755^0,w,c
  3394   000E26  A0D8               	btfss	status,0,c
  3395   000E28  EF18  F007         	goto	u2201
  3396   000E2C  EF1A  F007         	goto	u2200
  3397   000E30                     u2201:
  3398   000E30  EFE3  F006         	goto	l2544
  3399   000E34                     u2200:
  3400   000E34                     
  3401                           ;main.c: 374:         switch(mode){
  3402   000E34  0E00               	movlw	0
  3403   000E36  6E07               	movwf	(plane_on@a+1)^0,c
  3404   000E38  0E01               	movlw	1
  3405   000E3A  6E06               	movwf	plane_on@a^0,c
  3406   000E3C  EC19  F00C         	call	_plane_on	;wreg free
  3407                           
  3408                           ;main.c: 375:             case 0:
  3409   000E40  0E00               	movlw	0
  3410   000E42  6E07               	movwf	(plane_on@a+1)^0,c
  3411   000E44  0E02               	movlw	2
  3412   000E46  6E06               	movwf	plane_on@a^0,c
  3413   000E48  EC19  F00C         	call	_plane_on	;wreg free
  3414                           
  3415                           ;main.c: 376:                 cubeidle(0);
  3416   000E4C  0E00               	movlw	0
  3417   000E4E  6E07               	movwf	(plane_on@a+1)^0,c
  3418   000E50  0E03               	movlw	3
  3419   000E52  6E06               	movwf	plane_on@a^0,c
  3420   000E54  EC19  F00C         	call	_plane_on	;wreg free
  3421   000E58                     
  3422                           ;main.c: 377:                 break;
  3423   000E58  EC53  F008         	call	_draw_plane	;wreg free
  3424   000E5C                     
  3425                           ;main.c: 378:             case 1:
  3426   000E5C  0E41               	movlw	65
  3427   000E5E  6E34               	movwf	??_pulsing^0,c
  3428   000E60  0EEE               	movlw	238
  3429   000E62                     u2347:
  3430   000E62  2EE8               	decfsz	wreg,f,c
  3431   000E64  D7FE               	bra	u2347
  3432   000E66  2E34               	decfsz	??_pulsing^0,f,c
  3433   000E68  D7FC               	bra	u2347
  3434   000E6A  D000               	nop2	
  3435   000E6C                     l2556:
  3436                           
  3437                           ;main.c: 344:         for(int i = 0; i < 5; i++){
  3438   000E6C  5032               	movf	pulsing@id^0,w,c
  3439   000E6E  1854               	xorwf	_mode^0,w,c
  3440   000E70  E109               	bnz	u2210
  3441   000E72  5033               	movf	(pulsing@id+1)^0,w,c
  3442   000E74  1855               	xorwf	(_mode+1)^0,w,c
  3443   000E76  B4D8               	btfsc	status,2,c
  3444   000E78  EF40  F007         	goto	u2211
  3445   000E7C  EF42  F007         	goto	u2210
  3446   000E80                     u2211:
  3447   000E80  EF1E  F006         	goto	l2476
  3448   000E84                     u2210:
  3449   000E84  0012               	return		;funcret
  3450   000E86                     __end_of_pulsing:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _init *****************
  3454 ;; Defined at:
  3455 ;;		line 20 in file "main.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3469 ;;      Params:         0       0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text10
  3484   001988                     __ptext10:
  3485                           	callstack 0
  3486   001988                     _init:
  3487                           	callstack 29
  3488   001988                     
  3489                           ;main.c: 21:     ADCON2bits.ACQT = 0b010;
  3490   001988  0E00               	movlw	0
  3491   00198A  6E92               	movwf	146,c	;volatile
  3492                           
  3493                           ;main.c: 22:     ADCON0bits.ADON = 1;
  3494   00198C  0E00               	movlw	0
  3495   00198E  6E93               	movwf	147,c	;volatile
  3496                           
  3497                           ;main.c: 23:     ADCON2bits.ADFM = 1;
  3498   001990  0E00               	movlw	0
  3499   001992  6E94               	movwf	148,c	;volatile
  3500                           
  3501                           ;main.c: 24: 
  3502   001994  0E00               	movlw	0
  3503   001996  6E95               	movwf	149,c	;volatile
  3504                           
  3505                           ;main.c: 25:     PIE1bits.ADIE = 1;
  3506   001998  0E00               	movlw	0
  3507   00199A  6E96               	movwf	150,c	;volatile
  3508   00199C                     
  3509                           ;main.c: 26: 
  3510   00199C  8296               	bsf	150,1,c	;volatile
  3511   00199E                     
  3512                           ;main.c: 27:     PIR1bits.ADIF = 0;
  3513   00199E  8496               	bsf	150,2,c	;volatile
  3514   0019A0                     
  3515                           ;main.c: 28: 
  3516   0019A0  8E92               	bsf	146,7,c	;volatile
  3517   0019A2                     
  3518                           ;main.c: 29:     INTCONbits.PEIE = 1;
  3519   0019A2  8C92               	bsf	146,6,c	;volatile
  3520   0019A4                     
  3521                           ;main.c: 30: 
  3522   0019A4  8094               	bsf	148,0,c	;volatile
  3523                           
  3524                           ;main.c: 32:     ADCON0bits.GO = 1;
  3525   0019A6  50D3               	movf	211,w,c	;volatile
  3526   0019A8  0B8F               	andlw	-113
  3527   0019AA  0960               	iorlw	96
  3528   0019AC  6ED3               	movwf	211,c	;volatile
  3529   0019AE                     
  3530                           ;main.c: 33: }
  3531   0019AE  8A92               	bsf	146,5,c	;volatile
  3532                           
  3533                           ;main.c: 34: 
  3534   0019B0  0E09               	movlw	9
  3535   0019B2  6EC1               	movwf	193,c	;volatile
  3536                           
  3537                           ;main.c: 35: void draw_plane(){
  3538   0019B4  50C2               	movf	194,w,c	;volatile
  3539   0019B6  0BC3               	andlw	-61
  3540   0019B8  0914               	iorlw	20
  3541   0019BA  6EC2               	movwf	194,c	;volatile
  3542                           
  3543                           ;main.c: 36:     LATAbits.LA0 = plane[0][0];
  3544   0019BC  50C0               	movf	192,w,c	;volatile
  3545   0019BE  0BF8               	andlw	-8
  3546   0019C0  0904               	iorlw	4
  3547   0019C2  6EC0               	movwf	192,c	;volatile
  3548                           
  3549                           ;main.c: 37:     LATAbits.LA1 = plane[0][1];
  3550   0019C4  50C0               	movf	192,w,c	;volatile
  3551   0019C6  0BC7               	andlw	-57
  3552   0019C8  0910               	iorlw	16
  3553   0019CA  6EC0               	movwf	192,c	;volatile
  3554   0019CC                     
  3555                           ;main.c: 38:     LATAbits.LA2 = plane[0][2];
  3556   0019CC  80C2               	bsf	194,0,c	;volatile
  3557   0019CE                     
  3558                           ;main.c: 39:     LATAbits.LA3 = plane[0][3];
  3559   0019CE  8EC0               	bsf	192,7,c	;volatile
  3560   0019D0                     
  3561                           ;main.c: 41: 
  3562   0019D0  8C9D               	bsf	157,6,c	;volatile
  3563   0019D2                     
  3564                           ;main.c: 43:     LATCbits.LC2 = plane[1][1];
  3565   0019D2  9C9E               	bcf	158,6,c	;volatile
  3566   0019D4                     
  3567                           ;main.c: 45:     LATDbits.LD0 = plane[1][3];
  3568   0019D4  8CF2               	bsf	242,6,c	;volatile
  3569   0019D6                     
  3570                           ;main.c: 47: 
  3571   0019D6  8EF2               	bsf	242,7,c	;volatile
  3572   0019D8                     
  3573                           ;main.c: 48:     LATBbits.LB0 = plane[2][0];
  3574   0019D8  82C2               	bsf	194,1,c	;volatile
  3575   0019DA  0012               	return		;funcret
  3576   0019DC                     __end_of_init:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _cubeidle *****************
  3580 ;; Defined at:
  3581 ;;		line 322 in file "main.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  id              2   49[COMRAM] int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  i               2   59[COMRAM] int 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3595 ;;      Params:         2       0       0       0       0       0       0
  3596 ;;      Locals:         2       0       0       0       0       0       0
  3597 ;;      Temps:          8       0       0       0       0       0       0
  3598 ;;      Totals:        12       0       0       0       0       0       0
  3599 ;;Total ram usage:       12 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 4
  3602 ;; This function calls:
  3603 ;;		_clear_cube
  3604 ;;		_lighton
  3605 ;;		_srand
  3606 ;;		_time
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text11
  3613   0012FA                     __ptext11:
  3614                           	callstack 0
  3615   0012FA                     _cubeidle:
  3616                           	callstack 26
  3617   0012FA                     
  3618                           ;main.c: 323: 
  3619   0012FA  0E00               	movlw	0
  3620   0012FC  6E06               	movwf	time@t^0,c
  3621   0012FE  0E00               	movlw	0
  3622   001300  6E07               	movwf	(time@t+1)^0,c
  3623   001302  EC18  F00D         	call	_time	;wreg free
  3624   001306  C006  F034         	movff	?_time,??_cubeidle
  3625   00130A  C007  F035         	movff	?_time+1,??_cubeidle+1
  3626   00130E  C008  F036         	movff	?_time+2,??_cubeidle+2
  3627   001312  C009  F037         	movff	?_time+3,??_cubeidle+3
  3628   001316  C00A  F038         	movff	?_time+4,??_cubeidle+4
  3629   00131A  C00B  F039         	movff	?_time+5,??_cubeidle+5
  3630   00131E  C00C  F03A         	movff	?_time+6,??_cubeidle+6
  3631   001322  C00D  F03B         	movff	?_time+7,??_cubeidle+7
  3632   001326  C034  F00E         	movff	??_cubeidle,srand@s
  3633   00132A  C035  F00F         	movff	??_cubeidle+1,srand@s+1
  3634   00132E  EC64  F00D         	call	_srand	;wreg free
  3635   001332                     
  3636                           ;main.c: 324: }
  3637   001332  EC7C  F00B         	call	_clear_cube	;wreg free
  3638   001336                     
  3639                           ;main.c: 325: 
  3640   001336  0E00               	movlw	0
  3641   001338  6E2D               	movwf	(lighton@x+1)^0,c
  3642   00133A  0E00               	movlw	0
  3643   00133C  6E2C               	movwf	lighton@x^0,c
  3644   00133E  0EFF               	movlw	255
  3645   001340  6E2F               	movwf	(lighton@prev+1)^0,c
  3646   001342  682E               	setf	lighton@prev^0,c
  3647   001344  ECEA  F008         	call	_lighton	;wreg free
  3648                           
  3649                           ;main.c: 326: void pulsing(int id){
  3650   001348  EFE9  F009         	goto	l2472
  3651   00134C                     l2456:
  3652                           
  3653                           ;main.c: 327: 
  3654   00134C  0E00               	movlw	0
  3655   00134E  6E3D               	movwf	(cubeidle@i+1)^0,c
  3656   001350  0E01               	movlw	1
  3657   001352  6E3C               	movwf	cubeidle@i^0,c
  3658   001354  EFC1  F009         	goto	l2464
  3659   001358                     l2458:
  3660                           
  3661                           ;main.c: 328:     while(mode == id){
  3662   001358  C03C  F02C         	movff	cubeidle@i,lighton@x
  3663   00135C  C03D  F02D         	movff	cubeidle@i+1,lighton@x+1
  3664   001360  0EFF               	movlw	255
  3665   001362  243C               	addwf	cubeidle@i^0,w,c
  3666   001364  6E2E               	movwf	lighton@prev^0,c
  3667   001366  0EFF               	movlw	255
  3668   001368  203D               	addwfc	(cubeidle@i+1)^0,w,c
  3669   00136A  6E2F               	movwf	(lighton@prev+1)^0,c
  3670   00136C  ECEA  F008         	call	_lighton	;wreg free
  3671   001370                     
  3672                           ;main.c: 329:         clear_cube();
  3673   001370  0E0D               	movlw	13
  3674   001372  6E34               	movwf	??_cubeidle^0,c
  3675   001374  0EFC               	movlw	252
  3676   001376                     u2357:
  3677   001376  2EE8               	decfsz	wreg,f,c
  3678   001378  D7FE               	bra	u2357
  3679   00137A  2E34               	decfsz	??_cubeidle^0,f,c
  3680   00137C  D7FC               	bra	u2357
  3681   00137E                     
  3682                           ;main.c: 330:         plane[2][2] = 1;
  3683   00137E  4A3C               	infsnz	cubeidle@i^0,f,c
  3684   001380  2A3D               	incf	(cubeidle@i+1)^0,f,c
  3685   001382                     l2464:
  3686   001382  BE3D               	btfsc	(cubeidle@i+1)^0,7,c
  3687   001384  EFCF  F009         	goto	u2140
  3688   001388  503D               	movf	(cubeidle@i+1)^0,w,c
  3689   00138A  E107               	bnz	u2141
  3690   00138C  0E7D               	movlw	125
  3691   00138E  5C3C               	subwf	cubeidle@i^0,w,c
  3692   001390  B0D8               	btfsc	status,0,c
  3693   001392  EFCD  F009         	goto	u2141
  3694   001396  EFCF  F009         	goto	u2140
  3695   00139A                     u2141:
  3696   00139A  EFD8  F009         	goto	l2468
  3697   00139E                     u2140:
  3698   00139E  5054               	movf	_mode^0,w,c
  3699   0013A0  1055               	iorwf	(_mode+1)^0,w,c
  3700   0013A2  B4D8               	btfsc	status,2,c
  3701   0013A4  EFD6  F009         	goto	u2151
  3702   0013A8  EFD8  F009         	goto	u2150
  3703   0013AC                     u2151:
  3704   0013AC  EFAC  F009         	goto	l2458
  3705   0013B0                     u2150:
  3706   0013B0                     l2468:
  3707                           
  3708                           ;main.c: 331:         draw_plane();
  3709   0013B0  0E00               	movlw	0
  3710   0013B2  6E2D               	movwf	(lighton@x+1)^0,c
  3711   0013B4  0E00               	movlw	0
  3712   0013B6  6E2C               	movwf	lighton@x^0,c
  3713   0013B8  0E00               	movlw	0
  3714   0013BA  6E2F               	movwf	(lighton@prev+1)^0,c
  3715   0013BC  0E7C               	movlw	124
  3716   0013BE  6E2E               	movwf	lighton@prev^0,c
  3717   0013C0  ECEA  F008         	call	_lighton	;wreg free
  3718   0013C4                     
  3719                           ;main.c: 332:         plane_on(2);
  3720   0013C4  0E03               	movlw	3
  3721   0013C6  6E34               	movwf	??_cubeidle^0,c
  3722   0013C8  0E98               	movlw	152
  3723   0013CA                     u2367:
  3724   0013CA  2EE8               	decfsz	wreg,f,c
  3725   0013CC  D7FE               	bra	u2367
  3726   0013CE  2E34               	decfsz	??_cubeidle^0,f,c
  3727   0013D0  D7FC               	bra	u2367
  3728   0013D2                     l2472:
  3729                           
  3730                           ;main.c: 326: void pulsing(int id){
  3731   0013D2  5032               	movf	cubeidle@id^0,w,c
  3732   0013D4  1854               	xorwf	_mode^0,w,c
  3733   0013D6  E109               	bnz	u2160
  3734   0013D8  5033               	movf	(cubeidle@id+1)^0,w,c
  3735   0013DA  1855               	xorwf	(_mode+1)^0,w,c
  3736   0013DC  B4D8               	btfsc	status,2,c
  3737   0013DE  EFF3  F009         	goto	u2161
  3738   0013E2  EFF5  F009         	goto	u2160
  3739   0013E6                     u2161:
  3740   0013E6  EFA6  F009         	goto	l2456
  3741   0013EA                     u2160:
  3742   0013EA  0012               	return		;funcret
  3743   0013EC                     __end_of_cubeidle:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _time *****************
  3747 ;; Defined at:
  3748 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\time.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  t               2    5[COMRAM] PTR long long 
  3751 ;;		 -> NULL(0), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  8    5[COMRAM] long long 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         8       0       0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0
  3766 ;;      Totals:         8       0       0       0       0       0       0
  3767 ;;Total ram usage:        8 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_random_pattern
  3774 ;;		_cubeidle
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text12
  3779   001A30                     __ptext12:
  3780                           	callstack 0
  3781   001A30                     _time:
  3782                           	callstack 28
  3783   001A30  5006               	movf	time@t^0,w,c
  3784   001A32  1007               	iorwf	(time@t+1)^0,w,c
  3785   001A34  B4D8               	btfsc	status,2,c
  3786   001A36  EF1F  F00D         	goto	u1681
  3787   001A3A  EF21  F00D         	goto	u1680
  3788   001A3E                     u1681:
  3789   001A3E  EF35  F00D         	goto	l2034
  3790   001A42                     u1680:
  3791   001A42  C006  FFD9         	movff	time@t,fsr2l
  3792   001A46  C007  FFDA         	movff	time@t+1,fsr2h
  3793   001A4A  0EFF               	movlw	255
  3794   001A4C  6EDE               	movwf	postinc2,c
  3795   001A4E  0EFF               	movlw	255
  3796   001A50  6EDE               	movwf	postinc2,c
  3797   001A52  0EFF               	movlw	255
  3798   001A54  6EDE               	movwf	postinc2,c
  3799   001A56  0EFF               	movlw	255
  3800   001A58  6EDE               	movwf	postinc2,c
  3801   001A5A  0EFF               	movlw	255
  3802   001A5C  6EDE               	movwf	postinc2,c
  3803   001A5E  0EFF               	movlw	255
  3804   001A60  6EDE               	movwf	postinc2,c
  3805   001A62  0EFF               	movlw	255
  3806   001A64  6EDE               	movwf	postinc2,c
  3807   001A66  0EFF               	movlw	255
  3808   001A68  6EDD               	movwf	postdec2,c
  3809   001A6A                     l2034:
  3810   001A6A  6806               	setf	?_time^0,c
  3811   001A6C  6807               	setf	(?_time+1)^0,c
  3812   001A6E  6808               	setf	(?_time+2)^0,c
  3813   001A70  6809               	setf	(?_time+3)^0,c
  3814   001A72  680A               	setf	(?_time+4)^0,c
  3815   001A74  680B               	setf	(?_time+5)^0,c
  3816   001A76  680C               	setf	(?_time+6)^0,c
  3817   001A78  680D               	setf	(?_time+7)^0,c
  3818   001A7A  0012               	return		;funcret
  3819   001A7C                     __end_of_time:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _srand *****************
  3823 ;; Defined at:
  3824 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  s               2   13[COMRAM] unsigned int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3838 ;;      Params:         2       0       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0
  3840 ;;      Temps:          2       0       0       0       0       0       0
  3841 ;;      Totals:         4       0       0       0       0       0       0
  3842 ;;Total ram usage:        4 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_random_pattern
  3849 ;;		_cubeidle
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text13
  3854   001AC8                     __ptext13:
  3855                           	callstack 0
  3856   001AC8                     _srand:
  3857                           	callstack 28
  3858   001AC8  0EFF               	movlw	255
  3859   001ACA  240E               	addwf	srand@s^0,w,c
  3860   001ACC  6E10               	movwf	??_srand^0,c
  3861   001ACE  0EFF               	movlw	255
  3862   001AD0  200F               	addwfc	(srand@s+1)^0,w,c
  3863   001AD2  6E11               	movwf	(??_srand+1)^0,c
  3864   001AD4  C010  F056         	movff	??_srand,_seed
  3865   001AD8  C011  F057         	movff	??_srand+1,_seed+1
  3866   001ADC  6A58               	clrf	(_seed+2)^0,c
  3867   001ADE  6A59               	clrf	(_seed+3)^0,c
  3868   001AE0  0012               	return		;funcret
  3869   001AE2                     __end_of_srand:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _lighton *****************
  3873 ;; Defined at:
  3874 ;;		line 151 in file "main.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  x               2   43[COMRAM] int 
  3877 ;;  prev            2   45[COMRAM] int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3889 ;;      Params:         4       0       0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0
  3891 ;;      Temps:          2       0       0       0       0       0       0
  3892 ;;      Totals:         6       0       0       0       0       0       0
  3893 ;;Total ram usage:        6 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 3
  3896 ;; This function calls:
  3897 ;;		___awdiv
  3898 ;;		___awmod
  3899 ;;		___wmul
  3900 ;;		_draw_plane
  3901 ;;		_set_plane
  3902 ;; This function is called by:
  3903 ;;		_random_pattern
  3904 ;;		_cubeidle
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text14
  3909   0011D4                     __ptext14:
  3910                           	callstack 0
  3911   0011D4                     _lighton:
  3912                           	callstack 26
  3913   0011D4                     
  3914                           ;main.c: 152:     clear_plane();
  3915   0011D4  C02C  F01E         	movff	lighton@x,___awdiv@dividend
  3916   0011D8  C02D  F01F         	movff	lighton@x+1,___awdiv@dividend+1
  3917   0011DC  0E00               	movlw	0
  3918   0011DE  6E21               	movwf	(___awdiv@divisor+1)^0,c
  3919   0011E0  0E19               	movlw	25
  3920   0011E2  6E20               	movwf	___awdiv@divisor^0,c
  3921   0011E4  EC64  F00A         	call	___awdiv	;wreg free
  3922   0011E8  C01E  F026         	movff	?___awdiv,set_plane@a
  3923   0011EC  C01F  F027         	movff	?___awdiv+1,set_plane@a+1
  3924   0011F0  EC71  F00D         	call	_set_plane	;wreg free
  3925   0011F4                     
  3926                           ;main.c: 153:     srand(time(((void*)0)));
  3927   0011F4  282E               	incf	lighton@prev^0,w,c
  3928   0011F6  E108               	bnz	u1550
  3929   0011F8  282F               	incf	(lighton@prev+1)^0,w,c
  3930   0011FA  B4D8               	btfsc	status,2,c
  3931   0011FC  EF02  F009         	goto	u1551
  3932   001200  EF04  F009         	goto	u1550
  3933   001204                     u1551:
  3934   001204  EF3F  F009         	goto	l93
  3935   001208                     u1550:
  3936   001208  0E00               	movlw	0
  3937   00120A  6E21               	movwf	(___awdiv@divisor+1)^0,c
  3938   00120C  0E05               	movlw	5
  3939   00120E  6E20               	movwf	___awdiv@divisor^0,c
  3940   001210  0E00               	movlw	0
  3941   001212  6E1B               	movwf	(___awmod@divisor+1)^0,c
  3942   001214  0E19               	movlw	25
  3943   001216  6E1A               	movwf	___awmod@divisor^0,c
  3944   001218  C02E  F018         	movff	lighton@prev,___awmod@dividend
  3945   00121C  C02F  F019         	movff	lighton@prev+1,___awmod@dividend+1
  3946   001220  EC24  F00B         	call	___awmod	;wreg free
  3947   001224  C018  F01E         	movff	?___awmod,___awdiv@dividend
  3948   001228  C019  F01F         	movff	?___awmod+1,___awdiv@dividend+1
  3949   00122C  EC64  F00A         	call	___awdiv	;wreg free
  3950   001230  C01E  F026         	movff	?___awdiv,___wmul@multiplier
  3951   001234  C01F  F027         	movff	?___awdiv+1,___wmul@multiplier+1
  3952   001238  0E00               	movlw	0
  3953   00123A  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  3954   00123C  0E0A               	movlw	10
  3955   00123E  6E28               	movwf	___wmul@multiplicand^0,c
  3956   001240  EC51  F00D         	call	___wmul	;wreg free
  3957   001244  0E80               	movlw	low _plane
  3958   001246  2426               	addwf	?___wmul^0,w,c
  3959   001248  6E30               	movwf	??_lighton^0,c
  3960   00124A  0E00               	movlw	high _plane
  3961   00124C  2027               	addwfc	(?___wmul+1)^0,w,c
  3962   00124E  6E31               	movwf	(??_lighton+1)^0,c
  3963   001250  C02E  F018         	movff	lighton@prev,___awmod@dividend
  3964   001254  C02F  F019         	movff	lighton@prev+1,___awmod@dividend+1
  3965   001258  0E00               	movlw	0
  3966   00125A  6E1B               	movwf	(___awmod@divisor+1)^0,c
  3967   00125C  0E05               	movlw	5
  3968   00125E  6E1A               	movwf	___awmod@divisor^0,c
  3969   001260  EC24  F00B         	call	___awmod	;wreg free
  3970   001264  90D8               	bcf	status,0,c
  3971   001266  3618               	rlcf	?___awmod^0,f,c
  3972   001268  3619               	rlcf	(?___awmod+1)^0,f,c
  3973   00126A  5018               	movf	?___awmod^0,w,c
  3974   00126C  2430               	addwf	??_lighton^0,w,c
  3975   00126E  6ED9               	movwf	fsr2l,c
  3976   001270  5019               	movf	(?___awmod+1)^0,w,c
  3977   001272  2031               	addwfc	(??_lighton+1)^0,w,c
  3978   001274  6EDA               	movwf	fsr2h,c
  3979   001276  0E00               	movlw	0
  3980   001278  6EDE               	movwf	postinc2,c
  3981   00127A  0E00               	movlw	0
  3982   00127C  6EDD               	movwf	postdec2,c
  3983   00127E                     l93:
  3984                           
  3985                           ;main.c: 154:     int x = 0, r = 0, prevr, prevx = -1;
  3986   00127E  0E00               	movlw	0
  3987   001280  6E21               	movwf	(___awdiv@divisor+1)^0,c
  3988   001282  0E05               	movlw	5
  3989   001284  6E20               	movwf	___awdiv@divisor^0,c
  3990   001286  0E00               	movlw	0
  3991   001288  6E1B               	movwf	(___awmod@divisor+1)^0,c
  3992   00128A  0E19               	movlw	25
  3993   00128C  6E1A               	movwf	___awmod@divisor^0,c
  3994   00128E  C02C  F018         	movff	lighton@x,___awmod@dividend
  3995   001292  C02D  F019         	movff	lighton@x+1,___awmod@dividend+1
  3996   001296  EC24  F00B         	call	___awmod	;wreg free
  3997   00129A  C018  F01E         	movff	?___awmod,___awdiv@dividend
  3998   00129E  C019  F01F         	movff	?___awmod+1,___awdiv@dividend+1
  3999   0012A2  EC64  F00A         	call	___awdiv	;wreg free
  4000   0012A6  C01E  F026         	movff	?___awdiv,___wmul@multiplier
  4001   0012AA  C01F  F027         	movff	?___awdiv+1,___wmul@multiplier+1
  4002   0012AE  0E00               	movlw	0
  4003   0012B0  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  4004   0012B2  0E0A               	movlw	10
  4005   0012B4  6E28               	movwf	___wmul@multiplicand^0,c
  4006   0012B6  EC51  F00D         	call	___wmul	;wreg free
  4007   0012BA  0E80               	movlw	low _plane
  4008   0012BC  2426               	addwf	?___wmul^0,w,c
  4009   0012BE  6E30               	movwf	??_lighton^0,c
  4010   0012C0  0E00               	movlw	high _plane
  4011   0012C2  2027               	addwfc	(?___wmul+1)^0,w,c
  4012   0012C4  6E31               	movwf	(??_lighton+1)^0,c
  4013   0012C6  C02C  F018         	movff	lighton@x,___awmod@dividend
  4014   0012CA  C02D  F019         	movff	lighton@x+1,___awmod@dividend+1
  4015   0012CE  0E00               	movlw	0
  4016   0012D0  6E1B               	movwf	(___awmod@divisor+1)^0,c
  4017   0012D2  0E05               	movlw	5
  4018   0012D4  6E1A               	movwf	___awmod@divisor^0,c
  4019   0012D6  EC24  F00B         	call	___awmod	;wreg free
  4020   0012DA  90D8               	bcf	status,0,c
  4021   0012DC  3618               	rlcf	?___awmod^0,f,c
  4022   0012DE  3619               	rlcf	(?___awmod+1)^0,f,c
  4023   0012E0  5018               	movf	?___awmod^0,w,c
  4024   0012E2  2430               	addwf	??_lighton^0,w,c
  4025   0012E4  6ED9               	movwf	fsr2l,c
  4026   0012E6  5019               	movf	(?___awmod+1)^0,w,c
  4027   0012E8  2031               	addwfc	(??_lighton+1)^0,w,c
  4028   0012EA  6EDA               	movwf	fsr2h,c
  4029   0012EC  0E01               	movlw	1
  4030   0012EE  6EDE               	movwf	postinc2,c
  4031   0012F0  0E00               	movlw	0
  4032   0012F2  6EDD               	movwf	postdec2,c
  4033   0012F4                     
  4034                           ;main.c: 155:     int x2 = 0, r2 = 0, prevr2, prevx2 = -1;
  4035   0012F4  EC53  F008         	call	_draw_plane	;wreg free
  4036   0012F8  0012               	return		;funcret
  4037   0012FA                     __end_of_lighton:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _set_plane *****************
  4041 ;; Defined at:
  4042 ;;		line 122 in file "main.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  a               2   37[COMRAM] int 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         2       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0
  4059 ;;      Totals:         2       0       0       0       0       0       0
  4060 ;;Total ram usage:        2 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; Hardware stack levels required when called: 2
  4063 ;; This function calls:
  4064 ;;		_plane_on
  4065 ;; This function is called by:
  4066 ;;		_lighton
  4067 ;;		_rainfall
  4068 ;;		_scan
  4069 ;;		_speedup
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text15
  4074   001AE2                     __ptext15:
  4075                           	callstack 0
  4076   001AE2                     _set_plane:
  4077                           	callstack 27
  4078   001AE2                     
  4079                           ;main.c: 123:     TRISE = 0;
  4080   001AE2  8296               	bsf	150,1,c	;volatile
  4081                           
  4082                           ;main.c: 124:     TRISEbits.TRISE1 = 1;
  4083   001AE4  8496               	bsf	150,2,c	;volatile
  4084                           
  4085                           ;main.c: 125:     TRISEbits.TRISE2 = 1;
  4086   001AE6  8E92               	bsf	146,7,c	;volatile
  4087                           
  4088                           ;main.c: 126:     TRISAbits.TRISA7 = 1;
  4089   001AE8  8C92               	bsf	146,6,c	;volatile
  4090                           
  4091                           ;main.c: 127:     TRISAbits.TRISA6 = 1;
  4092   001AEA  8094               	bsf	148,0,c	;volatile
  4093   001AEC                     
  4094                           ;main.c: 128:     TRISCbits.TRISC0 = 1;
  4095   001AEC  C026  F006         	movff	set_plane@a,plane_on@a
  4096   001AF0  C027  F007         	movff	set_plane@a+1,plane_on@a+1
  4097   001AF4  EC19  F00C         	call	_plane_on	;wreg free
  4098   001AF8  0012               	return		;funcret
  4099   001AFA                     __end_of_set_plane:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _plane_on *****************
  4103 ;; Defined at:
  4104 ;;		line 90 in file "main.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  a               2    5[COMRAM] int 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4118 ;;      Params:         2       0       0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0
  4120 ;;      Temps:          2       0       0       0       0       0       0
  4121 ;;      Totals:         4       0       0       0       0       0       0
  4122 ;;Total ram usage:        4 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_set_plane
  4129 ;;		_scan
  4130 ;;		_pulsing
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text16
  4135   001832                     __ptext16:
  4136                           	callstack 0
  4137   001832                     _plane_on:
  4138                           	callstack 27
  4139   001832                     
  4140                           ;main.c: 91:             break;
  4141   001832  EF36  F00C         	goto	l1806
  4142   001836                     l73:
  4143                           
  4144                           ;main.c: 93:             TRISCbits.TRISC0 = 0;
  4145   001836  9296               	bcf	150,1,c	;volatile
  4146                           
  4147                           ;main.c: 94:             LATCbits.LC0 = 1 ;
  4148   001838  828D               	bsf	141,1,c	;volatile
  4149                           
  4150                           ;main.c: 95:             break;
  4151   00183A  EF58  F00C         	goto	l80
  4152   00183E                     l75:
  4153                           
  4154                           ;main.c: 97:             TRISEbits.TRISE1 = 1;
  4155   00183E  9496               	bcf	150,2,c	;volatile
  4156                           
  4157                           ;main.c: 98:             TRISEbits.TRISE2 = 1;
  4158   001840  848D               	bsf	141,2,c	;volatile
  4159                           
  4160                           ;main.c: 99:             TRISAbits.TRISA7 = 1;
  4161   001842  EF58  F00C         	goto	l80
  4162   001846                     l76:
  4163                           
  4164                           ;main.c: 101:             TRISCbits.TRISC0 = 1;
  4165   001846  9E92               	bcf	146,7,c	;volatile
  4166                           
  4167                           ;main.c: 102:             break;
  4168   001848  8E89               	bsf	137,7,c	;volatile
  4169                           
  4170                           ;main.c: 103:     }
  4171   00184A  EF58  F00C         	goto	l80
  4172   00184E                     l77:
  4173                           
  4174                           ;main.c: 105: 
  4175   00184E  9C92               	bcf	146,6,c	;volatile
  4176                           
  4177                           ;main.c: 106: void set_plane(int a){
  4178   001850  8C89               	bsf	137,6,c	;volatile
  4179                           
  4180                           ;main.c: 107:     TRISEbits.TRISE1 = 1;
  4181   001852  EF58  F00C         	goto	l80
  4182   001856                     l78:
  4183                           
  4184                           ;main.c: 109:     TRISAbits.TRISA7 = 1;
  4185   001856  9094               	bcf	148,0,c	;volatile
  4186                           
  4187                           ;main.c: 110:     TRISAbits.TRISA6 = 1;
  4188   001858  808B               	bsf	139,0,c	;volatile
  4189                           
  4190                           ;main.c: 111:     TRISCbits.TRISC0 = 1;
  4191   00185A  EF58  F00C         	goto	l80
  4192   00185E                     l79:
  4193                           
  4194                           ;main.c: 113: }
  4195   00185E  8296               	bsf	150,1,c	;volatile
  4196                           
  4197                           ;main.c: 114: 
  4198   001860  8496               	bsf	150,2,c	;volatile
  4199                           
  4200                           ;main.c: 115: 
  4201   001862  8E92               	bsf	146,7,c	;volatile
  4202                           
  4203                           ;main.c: 116: 
  4204   001864  8C92               	bsf	146,6,c	;volatile
  4205                           
  4206                           ;main.c: 117: void clear_cube(){
  4207   001866  8094               	bsf	148,0,c	;volatile
  4208                           
  4209                           ;main.c: 118: 
  4210   001868  EF58  F00C         	goto	l80
  4211   00186C                     l1806:
  4212   00186C  C006  F008         	movff	plane_on@a,??_plane_on
  4213   001870  C007  F009         	movff	plane_on@a+1,??_plane_on+1
  4214                           
  4215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4216                           ; Switch size 1, requested type "simple"
  4217                           ; Number of cases is 1, Range of values is 0 to 0
  4218                           ; switch strategies available:
  4219                           ; Name         Instructions Cycles
  4220                           ; simple_byte            4     3 (average)
  4221                           ;	Chosen strategy is simple_byte
  4222   001874  5009               	movf	(??_plane_on+1)^0,w,c
  4223   001876  0A00               	xorlw	0	; case 0
  4224   001878  B4D8               	btfsc	status,2,c
  4225   00187A  EF41  F00C         	goto	l2624
  4226   00187E  EF2F  F00C         	goto	l79
  4227   001882                     l2624:
  4228                           
  4229                           ; Switch size 1, requested type "simple"
  4230                           ; Number of cases is 5, Range of values is 0 to 4
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; simple_byte           16     9 (average)
  4234                           ;	Chosen strategy is simple_byte
  4235   001882  5008               	movf	??_plane_on^0,w,c
  4236   001884  0A00               	xorlw	0	; case 0
  4237   001886  B4D8               	btfsc	status,2,c
  4238   001888  EF1B  F00C         	goto	l73
  4239   00188C  0A01               	xorlw	1	; case 1
  4240   00188E  B4D8               	btfsc	status,2,c
  4241   001890  EF1F  F00C         	goto	l75
  4242   001894  0A03               	xorlw	3	; case 2
  4243   001896  B4D8               	btfsc	status,2,c
  4244   001898  EF23  F00C         	goto	l76
  4245   00189C  0A01               	xorlw	1	; case 3
  4246   00189E  B4D8               	btfsc	status,2,c
  4247   0018A0  EF27  F00C         	goto	l77
  4248   0018A4  0A07               	xorlw	7	; case 4
  4249   0018A6  B4D8               	btfsc	status,2,c
  4250   0018A8  EF2B  F00C         	goto	l78
  4251   0018AC  EF2F  F00C         	goto	l79
  4252   0018B0                     l80:
  4253   0018B0  0012               	return		;funcret
  4254   0018B2                     __end_of_plane_on:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _draw_plane *****************
  4258 ;; Defined at:
  4259 ;;		line 51 in file "main.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		None
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4273 ;;      Params:         0       0       0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 1
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_clear_plane
  4284 ;;		_lighton
  4285 ;;		_rainfall
  4286 ;;		_scan
  4287 ;;		_speedup
  4288 ;;		_pulsing
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text17
  4293   0010A6                     __ptext17:
  4294                           	callstack 0
  4295   0010A6                     _draw_plane:
  4296                           	callstack 28
  4297   0010A6                     
  4298                           ;main.c: 52:     LATBbits.LB4 = plane[2][4];
  4299   0010A6  0100               	movlb	0	; () banked
  4300   0010A8  B180               	btfsc	_plane& (0+255),0,b
  4301   0010AA  D002               	bra	u1125
  4302   0010AC  9089               	bcf	137,0,c	;volatile
  4303   0010AE  D001               	bra	u1126
  4304   0010B0                     u1125:
  4305   0010B0  8089               	bsf	137,0,c	;volatile
  4306   0010B2                     u1126:
  4307                           
  4308                           ;main.c: 53: 
  4309   0010B2  0100               	movlb	0	; () banked
  4310   0010B4  B182               	btfsc	(_plane+2)& (0+255),0,b
  4311   0010B6  D002               	bra	u1135
  4312   0010B8  9289               	bcf	137,1,c	;volatile
  4313   0010BA  D001               	bra	u1136
  4314   0010BC                     u1135:
  4315   0010BC  8289               	bsf	137,1,c	;volatile
  4316   0010BE                     u1136:
  4317                           
  4318                           ;main.c: 54:     LATCbits.LC7 = plane[3][0];
  4319   0010BE  0100               	movlb	0	; () banked
  4320   0010C0  B184               	btfsc	(_plane+4)& (0+255),0,b
  4321   0010C2  D002               	bra	u1145
  4322   0010C4  9489               	bcf	137,2,c	;volatile
  4323   0010C6  D001               	bra	u1146
  4324   0010C8                     u1145:
  4325   0010C8  8489               	bsf	137,2,c	;volatile
  4326   0010CA                     u1146:
  4327                           
  4328                           ;main.c: 55:     LATDbits.LD4 = plane[3][1];
  4329   0010CA  0100               	movlb	0	; () banked
  4330   0010CC  B186               	btfsc	(_plane+6)& (0+255),0,b
  4331   0010CE  D002               	bra	u1155
  4332   0010D0  9689               	bcf	137,3,c	;volatile
  4333   0010D2  D001               	bra	u1156
  4334   0010D4                     u1155:
  4335   0010D4  8689               	bsf	137,3,c	;volatile
  4336   0010D6                     u1156:
  4337                           
  4338                           ;main.c: 56:     LATDbits.LD5 = plane[3][2];
  4339   0010D6  0100               	movlb	0	; () banked
  4340   0010D8  B188               	btfsc	(_plane+8)& (0+255),0,b
  4341   0010DA  D002               	bra	u1165
  4342   0010DC  9889               	bcf	137,4,c	;volatile
  4343   0010DE  D001               	bra	u1166
  4344   0010E0                     u1165:
  4345   0010E0  8889               	bsf	137,4,c	;volatile
  4346   0010E2                     u1166:
  4347                           
  4348                           ;main.c: 58:     LATDbits.LD7 = plane[3][4];
  4349   0010E2  0100               	movlb	0	; () banked
  4350   0010E4  B18A               	btfsc	(_plane+10)& (0+255),0,b
  4351   0010E6  D002               	bra	u1175
  4352   0010E8  928B               	bcf	139,1,c	;volatile
  4353   0010EA  D001               	bra	u1176
  4354   0010EC                     u1175:
  4355   0010EC  828B               	bsf	139,1,c	;volatile
  4356   0010EE                     u1176:
  4357                           
  4358                           ;main.c: 59: 
  4359   0010EE  0100               	movlb	0	; () banked
  4360   0010F0  B18C               	btfsc	(_plane+12)& (0+255),0,b
  4361   0010F2  D002               	bra	u1185
  4362   0010F4  948B               	bcf	139,2,c	;volatile
  4363   0010F6  D001               	bra	u1186
  4364   0010F8                     u1185:
  4365   0010F8  848B               	bsf	139,2,c	;volatile
  4366   0010FA                     u1186:
  4367                           
  4368                           ;main.c: 60:     LATDbits.LD2 = plane[4][0];
  4369   0010FA  0100               	movlb	0	; () banked
  4370   0010FC  B18E               	btfsc	(_plane+14)& (0+255),0,b
  4371   0010FE  D002               	bra	u1195
  4372   001100  968B               	bcf	139,3,c	;volatile
  4373   001102  D001               	bra	u1196
  4374   001104                     u1195:
  4375   001104  868B               	bsf	139,3,c	;volatile
  4376   001106                     u1196:
  4377                           
  4378                           ;main.c: 61:     LATDbits.LD3 = plane[4][1];
  4379   001106  0100               	movlb	0	; () banked
  4380   001108  B190               	btfsc	(_plane+16)& (0+255),0,b
  4381   00110A  D002               	bra	u1205
  4382   00110C  908C               	bcf	140,0,c	;volatile
  4383   00110E  D001               	bra	u1206
  4384   001110                     u1205:
  4385   001110  808C               	bsf	140,0,c	;volatile
  4386   001112                     u1206:
  4387                           
  4388                           ;main.c: 62:     LATCbits.LC4 = plane[4][2];
  4389   001112  0100               	movlb	0	; () banked
  4390   001114  B192               	btfsc	(_plane+18)& (0+255),0,b
  4391   001116  D002               	bra	u1215
  4392   001118  928C               	bcf	140,1,c	;volatile
  4393   00111A  D001               	bra	u1216
  4394   00111C                     u1215:
  4395   00111C  828C               	bsf	140,1,c	;volatile
  4396   00111E                     u1216:
  4397                           
  4398                           ;main.c: 64:     LATCbits.LC6 = plane[4][4];
  4399   00111E  0100               	movlb	0	; () banked
  4400   001120  B194               	btfsc	(_plane+20)& (0+255),0,b
  4401   001122  D002               	bra	u1225
  4402   001124  908A               	bcf	138,0,c	;volatile
  4403   001126  D001               	bra	u1226
  4404   001128                     u1225:
  4405   001128  808A               	bsf	138,0,c	;volatile
  4406   00112A                     u1226:
  4407                           
  4408                           ;main.c: 65: }
  4409   00112A  0100               	movlb	0	; () banked
  4410   00112C  B196               	btfsc	(_plane+22)& (0+255),0,b
  4411   00112E  D002               	bra	u1235
  4412   001130  928A               	bcf	138,1,c	;volatile
  4413   001132  D001               	bra	u1236
  4414   001134                     u1235:
  4415   001134  828A               	bsf	138,1,c	;volatile
  4416   001136                     u1236:
  4417                           
  4418                           ;main.c: 66: 
  4419   001136  0100               	movlb	0	; () banked
  4420   001138  B198               	btfsc	(_plane+24)& (0+255),0,b
  4421   00113A  D002               	bra	u1245
  4422   00113C  948A               	bcf	138,2,c	;volatile
  4423   00113E  D001               	bra	u1246
  4424   001140                     u1245:
  4425   001140  848A               	bsf	138,2,c	;volatile
  4426   001142                     u1246:
  4427                           
  4428                           ;main.c: 67: void clear_plane(){
  4429   001142  0100               	movlb	0	; () banked
  4430   001144  B19A               	btfsc	(_plane+26)& (0+255),0,b
  4431   001146  D002               	bra	u1255
  4432   001148  968A               	bcf	138,3,c	;volatile
  4433   00114A  D001               	bra	u1256
  4434   00114C                     u1255:
  4435   00114C  868A               	bsf	138,3,c	;volatile
  4436   00114E                     u1256:
  4437                           
  4438                           ;main.c: 68:     for(int i = 0; i < 5; i++)
  4439   00114E  0100               	movlb	0	; () banked
  4440   001150  B19C               	btfsc	(_plane+28)& (0+255),0,b
  4441   001152  D002               	bra	u1265
  4442   001154  988A               	bcf	138,4,c	;volatile
  4443   001156  D001               	bra	u1266
  4444   001158                     u1265:
  4445   001158  888A               	bsf	138,4,c	;volatile
  4446   00115A                     u1266:
  4447                           
  4448                           ;main.c: 70:             plane[i][j] = 0;
  4449   00115A  0100               	movlb	0	; () banked
  4450   00115C  B19E               	btfsc	(_plane+30)& (0+255),0,b
  4451   00115E  D002               	bra	u1275
  4452   001160  9E8B               	bcf	139,7,c	;volatile
  4453   001162  D001               	bra	u1276
  4454   001164                     u1275:
  4455   001164  8E8B               	bsf	139,7,c	;volatile
  4456   001166                     u1276:
  4457                           
  4458                           ;main.c: 71:     draw_plane();
  4459   001166  0100               	movlb	0	; () banked
  4460   001168  B1A0               	btfsc	(_plane+32)& (0+255),0,b
  4461   00116A  D002               	bra	u1285
  4462   00116C  988C               	bcf	140,4,c	;volatile
  4463   00116E  D001               	bra	u1286
  4464   001170                     u1285:
  4465   001170  888C               	bsf	140,4,c	;volatile
  4466   001172                     u1286:
  4467                           
  4468                           ;main.c: 72: }
  4469   001172  0100               	movlb	0	; () banked
  4470   001174  B1A2               	btfsc	(_plane+34)& (0+255),0,b
  4471   001176  D002               	bra	u1295
  4472   001178  9A8C               	bcf	140,5,c	;volatile
  4473   00117A  D001               	bra	u1296
  4474   00117C                     u1295:
  4475   00117C  8A8C               	bsf	140,5,c	;volatile
  4476   00117E                     u1296:
  4477                           
  4478                           ;main.c: 73: 
  4479   00117E  0100               	movlb	0	; () banked
  4480   001180  B1A4               	btfsc	(_plane+36)& (0+255),0,b
  4481   001182  D002               	bra	u1305
  4482   001184  9C8C               	bcf	140,6,c	;volatile
  4483   001186  D001               	bra	u1306
  4484   001188                     u1305:
  4485   001188  8C8C               	bsf	140,6,c	;volatile
  4486   00118A                     u1306:
  4487                           
  4488                           ;main.c: 74: void plane_on(int a){
  4489   00118A  0100               	movlb	0	; () banked
  4490   00118C  B1A6               	btfsc	(_plane+38)& (0+255),0,b
  4491   00118E  D002               	bra	u1315
  4492   001190  9E8C               	bcf	140,7,c	;volatile
  4493   001192  D001               	bra	u1316
  4494   001194                     u1315:
  4495   001194  8E8C               	bsf	140,7,c	;volatile
  4496   001196                     u1316:
  4497                           
  4498                           ;main.c: 76:         case 0:
  4499   001196  0100               	movlb	0	; () banked
  4500   001198  B1A8               	btfsc	(_plane+40)& (0+255),0,b
  4501   00119A  D002               	bra	u1325
  4502   00119C  948C               	bcf	140,2,c	;volatile
  4503   00119E  D001               	bra	u1326
  4504   0011A0                     u1325:
  4505   0011A0  848C               	bsf	140,2,c	;volatile
  4506   0011A2                     u1326:
  4507                           
  4508                           ;main.c: 77:             TRISEbits.TRISE1 = 0;
  4509   0011A2  0100               	movlb	0	; () banked
  4510   0011A4  B1AA               	btfsc	(_plane+42)& (0+255),0,b
  4511   0011A6  D002               	bra	u1335
  4512   0011A8  968C               	bcf	140,3,c	;volatile
  4513   0011AA  D001               	bra	u1336
  4514   0011AC                     u1335:
  4515   0011AC  868C               	bsf	140,3,c	;volatile
  4516   0011AE                     u1336:
  4517                           
  4518                           ;main.c: 78:             LATEbits.LE1 = 1;
  4519   0011AE  0100               	movlb	0	; () banked
  4520   0011B0  B1AC               	btfsc	(_plane+44)& (0+255),0,b
  4521   0011B2  D002               	bra	u1345
  4522   0011B4  988B               	bcf	139,4,c	;volatile
  4523   0011B6  D001               	bra	u1346
  4524   0011B8                     u1345:
  4525   0011B8  888B               	bsf	139,4,c	;volatile
  4526   0011BA                     u1346:
  4527                           
  4528                           ;main.c: 79:             break;
  4529   0011BA  0100               	movlb	0	; () banked
  4530   0011BC  B1AE               	btfsc	(_plane+46)& (0+255),0,b
  4531   0011BE  D002               	bra	u1355
  4532   0011C0  9A8B               	bcf	139,5,c	;volatile
  4533   0011C2  D001               	bra	u1356
  4534   0011C4                     u1355:
  4535   0011C4  8A8B               	bsf	139,5,c	;volatile
  4536   0011C6                     u1356:
  4537                           
  4538                           ;main.c: 80:         case 1:
  4539   0011C6  0100               	movlb	0	; () banked
  4540   0011C8  B1B0               	btfsc	(_plane+48)& (0+255),0,b
  4541   0011CA  D002               	bra	u1365
  4542   0011CC  9C8B               	bcf	139,6,c	;volatile
  4543   0011CE  D001               	bra	u1366
  4544   0011D0                     u1365:
  4545   0011D0  8C8B               	bsf	139,6,c	;volatile
  4546   0011D2                     u1366:
  4547   0011D2  0012               	return		;funcret
  4548   0011D4                     __end_of_draw_plane:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function ___awmod *****************
  4552 ;; Defined at:
  4553 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  dividend        2   23[COMRAM] int 
  4556 ;;  divisor         2   25[COMRAM] int 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  sign            1   28[COMRAM] unsigned char 
  4559 ;;  counter         1   27[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2   23[COMRAM] int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:         4       0       0       0       0       0       0
  4570 ;;      Locals:         2       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:         6       0       0       0       0       0       0
  4573 ;;Total ram usage:        6 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 1
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_lighton
  4580 ;;		_move
  4581 ;;		_random_pattern
  4582 ;;		_rainfall
  4583 ;;		_speedup
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text18
  4588   001648                     __ptext18:
  4589                           	callstack 0
  4590   001648                     ___awmod:
  4591                           	callstack 28
  4592   001648  0E00               	movlw	0
  4593   00164A  6E1D               	movwf	___awmod@sign^0,c
  4594   00164C  BE19               	btfsc	(___awmod@dividend+1)^0,7,c
  4595   00164E  EF2D  F00B         	goto	u1450
  4596   001652  EF2B  F00B         	goto	u1451
  4597   001656                     u1451:
  4598   001656  EF33  F00B         	goto	l1886
  4599   00165A                     u1450:
  4600   00165A  6C18               	negf	___awmod@dividend^0,c
  4601   00165C  1E19               	comf	(___awmod@dividend+1)^0,f,c
  4602   00165E  B0D8               	btfsc	status,0,c
  4603   001660  2A19               	incf	(___awmod@dividend+1)^0,f,c
  4604   001662  0E01               	movlw	1
  4605   001664  6E1D               	movwf	___awmod@sign^0,c
  4606   001666                     l1886:
  4607   001666  BE1B               	btfsc	(___awmod@divisor+1)^0,7,c
  4608   001668  EF3A  F00B         	goto	u1460
  4609   00166C  EF38  F00B         	goto	u1461
  4610   001670                     u1461:
  4611   001670  EF3E  F00B         	goto	l1890
  4612   001674                     u1460:
  4613   001674  6C1A               	negf	___awmod@divisor^0,c
  4614   001676  1E1B               	comf	(___awmod@divisor+1)^0,f,c
  4615   001678  B0D8               	btfsc	status,0,c
  4616   00167A  2A1B               	incf	(___awmod@divisor+1)^0,f,c
  4617   00167C                     l1890:
  4618   00167C  501A               	movf	___awmod@divisor^0,w,c
  4619   00167E  101B               	iorwf	(___awmod@divisor+1)^0,w,c
  4620   001680  B4D8               	btfsc	status,2,c
  4621   001682  EF45  F00B         	goto	u1471
  4622   001686  EF47  F00B         	goto	u1470
  4623   00168A                     u1471:
  4624   00168A  EF6B  F00B         	goto	l1906
  4625   00168E                     u1470:
  4626   00168E  0E01               	movlw	1
  4627   001690  6E1C               	movwf	___awmod@counter^0,c
  4628   001692  EF4F  F00B         	goto	l1896
  4629   001696                     l1894:
  4630   001696  90D8               	bcf	status,0,c
  4631   001698  361A               	rlcf	___awmod@divisor^0,f,c
  4632   00169A  361B               	rlcf	(___awmod@divisor+1)^0,f,c
  4633   00169C  2A1C               	incf	___awmod@counter^0,f,c
  4634   00169E                     l1896:
  4635   00169E  AE1B               	btfss	(___awmod@divisor+1)^0,7,c
  4636   0016A0  EF54  F00B         	goto	u1481
  4637   0016A4  EF56  F00B         	goto	u1480
  4638   0016A8                     u1481:
  4639   0016A8  EF4B  F00B         	goto	l1894
  4640   0016AC                     u1480:
  4641   0016AC                     l1898:
  4642   0016AC  501A               	movf	___awmod@divisor^0,w,c
  4643   0016AE  5C18               	subwf	___awmod@dividend^0,w,c
  4644   0016B0  501B               	movf	(___awmod@divisor+1)^0,w,c
  4645   0016B2  5819               	subwfb	(___awmod@dividend+1)^0,w,c
  4646   0016B4  A0D8               	btfss	status,0,c
  4647   0016B6  EF5F  F00B         	goto	u1491
  4648   0016BA  EF61  F00B         	goto	u1490
  4649   0016BE                     u1491:
  4650   0016BE  EF65  F00B         	goto	l1902
  4651   0016C2                     u1490:
  4652   0016C2  501A               	movf	___awmod@divisor^0,w,c
  4653   0016C4  5E18               	subwf	___awmod@dividend^0,f,c
  4654   0016C6  501B               	movf	(___awmod@divisor+1)^0,w,c
  4655   0016C8  5A19               	subwfb	(___awmod@dividend+1)^0,f,c
  4656   0016CA                     l1902:
  4657   0016CA  90D8               	bcf	status,0,c
  4658   0016CC  321B               	rrcf	(___awmod@divisor+1)^0,f,c
  4659   0016CE  321A               	rrcf	___awmod@divisor^0,f,c
  4660   0016D0  2E1C               	decfsz	___awmod@counter^0,f,c
  4661   0016D2  EF56  F00B         	goto	l1898
  4662   0016D6                     l1906:
  4663   0016D6  501D               	movf	___awmod@sign^0,w,c
  4664   0016D8  B4D8               	btfsc	status,2,c
  4665   0016DA  EF71  F00B         	goto	u1501
  4666   0016DE  EF73  F00B         	goto	u1500
  4667   0016E2                     u1501:
  4668   0016E2  EF77  F00B         	goto	l1910
  4669   0016E6                     u1500:
  4670   0016E6  6C18               	negf	___awmod@dividend^0,c
  4671   0016E8  1E19               	comf	(___awmod@dividend+1)^0,f,c
  4672   0016EA  B0D8               	btfsc	status,0,c
  4673   0016EC  2A19               	incf	(___awmod@dividend+1)^0,f,c
  4674   0016EE                     l1910:
  4675   0016EE  C018  F018         	movff	___awmod@dividend,?___awmod
  4676   0016F2  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
  4677   0016F6  0012               	return		;funcret
  4678   0016F8                     __end_of___awmod:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function ___awdiv *****************
  4682 ;; Defined at:
  4683 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  dividend        2   29[COMRAM] int 
  4686 ;;  divisor         2   31[COMRAM] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  quotient        2   35[COMRAM] int 
  4689 ;;  sign            1   34[COMRAM] unsigned char 
  4690 ;;  counter         1   33[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2   29[COMRAM] int 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4700 ;;      Params:         4       0       0       0       0       0       0
  4701 ;;      Locals:         4       0       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0
  4703 ;;      Totals:         8       0       0       0       0       0       0
  4704 ;;Total ram usage:        8 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; Hardware stack levels required when called: 1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_lighton
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text19
  4715   0014C8                     __ptext19:
  4716                           	callstack 0
  4717   0014C8                     ___awdiv:
  4718                           	callstack 27
  4719   0014C8  0E00               	movlw	0
  4720   0014CA  6E23               	movwf	___awdiv@sign^0,c
  4721   0014CC  BE21               	btfsc	(___awdiv@divisor+1)^0,7,c
  4722   0014CE  EF6D  F00A         	goto	u1390
  4723   0014D2  EF6B  F00A         	goto	u1391
  4724   0014D6                     u1391:
  4725   0014D6  EF73  F00A         	goto	l1842
  4726   0014DA                     u1390:
  4727   0014DA  6C20               	negf	___awdiv@divisor^0,c
  4728   0014DC  1E21               	comf	(___awdiv@divisor+1)^0,f,c
  4729   0014DE  B0D8               	btfsc	status,0,c
  4730   0014E0  2A21               	incf	(___awdiv@divisor+1)^0,f,c
  4731   0014E2  0E01               	movlw	1
  4732   0014E4  6E23               	movwf	___awdiv@sign^0,c
  4733   0014E6                     l1842:
  4734   0014E6  BE1F               	btfsc	(___awdiv@dividend+1)^0,7,c
  4735   0014E8  EF7A  F00A         	goto	u1400
  4736   0014EC  EF78  F00A         	goto	u1401
  4737   0014F0                     u1401:
  4738   0014F0  EF80  F00A         	goto	l1848
  4739   0014F4                     u1400:
  4740   0014F4  6C1E               	negf	___awdiv@dividend^0,c
  4741   0014F6  1E1F               	comf	(___awdiv@dividend+1)^0,f,c
  4742   0014F8  B0D8               	btfsc	status,0,c
  4743   0014FA  2A1F               	incf	(___awdiv@dividend+1)^0,f,c
  4744   0014FC  0E01               	movlw	1
  4745   0014FE  1A23               	xorwf	___awdiv@sign^0,f,c
  4746   001500                     l1848:
  4747   001500  0E00               	movlw	0
  4748   001502  6E25               	movwf	(___awdiv@quotient+1)^0,c
  4749   001504  0E00               	movlw	0
  4750   001506  6E24               	movwf	___awdiv@quotient^0,c
  4751   001508  5020               	movf	___awdiv@divisor^0,w,c
  4752   00150A  1021               	iorwf	(___awdiv@divisor+1)^0,w,c
  4753   00150C  B4D8               	btfsc	status,2,c
  4754   00150E  EF8B  F00A         	goto	u1411
  4755   001512  EF8D  F00A         	goto	u1410
  4756   001516                     u1411:
  4757   001516  EFB5  F00A         	goto	l1870
  4758   00151A                     u1410:
  4759   00151A  0E01               	movlw	1
  4760   00151C  6E22               	movwf	___awdiv@counter^0,c
  4761   00151E  EF95  F00A         	goto	l1856
  4762   001522                     l1854:
  4763   001522  90D8               	bcf	status,0,c
  4764   001524  3620               	rlcf	___awdiv@divisor^0,f,c
  4765   001526  3621               	rlcf	(___awdiv@divisor+1)^0,f,c
  4766   001528  2A22               	incf	___awdiv@counter^0,f,c
  4767   00152A                     l1856:
  4768   00152A  AE21               	btfss	(___awdiv@divisor+1)^0,7,c
  4769   00152C  EF9A  F00A         	goto	u1421
  4770   001530  EF9C  F00A         	goto	u1420
  4771   001534                     u1421:
  4772   001534  EF91  F00A         	goto	l1854
  4773   001538                     u1420:
  4774   001538                     l1858:
  4775   001538  90D8               	bcf	status,0,c
  4776   00153A  3624               	rlcf	___awdiv@quotient^0,f,c
  4777   00153C  3625               	rlcf	(___awdiv@quotient+1)^0,f,c
  4778   00153E  5020               	movf	___awdiv@divisor^0,w,c
  4779   001540  5C1E               	subwf	___awdiv@dividend^0,w,c
  4780   001542  5021               	movf	(___awdiv@divisor+1)^0,w,c
  4781   001544  581F               	subwfb	(___awdiv@dividend+1)^0,w,c
  4782   001546  A0D8               	btfss	status,0,c
  4783   001548  EFA8  F00A         	goto	u1431
  4784   00154C  EFAA  F00A         	goto	u1430
  4785   001550                     u1431:
  4786   001550  EFAF  F00A         	goto	l1866
  4787   001554                     u1430:
  4788   001554  5020               	movf	___awdiv@divisor^0,w,c
  4789   001556  5E1E               	subwf	___awdiv@dividend^0,f,c
  4790   001558  5021               	movf	(___awdiv@divisor+1)^0,w,c
  4791   00155A  5A1F               	subwfb	(___awdiv@dividend+1)^0,f,c
  4792   00155C  8024               	bsf	___awdiv@quotient^0,0,c
  4793   00155E                     l1866:
  4794   00155E  90D8               	bcf	status,0,c
  4795   001560  3221               	rrcf	(___awdiv@divisor+1)^0,f,c
  4796   001562  3220               	rrcf	___awdiv@divisor^0,f,c
  4797   001564  2E22               	decfsz	___awdiv@counter^0,f,c
  4798   001566  EF9C  F00A         	goto	l1858
  4799   00156A                     l1870:
  4800   00156A  5023               	movf	___awdiv@sign^0,w,c
  4801   00156C  B4D8               	btfsc	status,2,c
  4802   00156E  EFBB  F00A         	goto	u1441
  4803   001572  EFBD  F00A         	goto	u1440
  4804   001576                     u1441:
  4805   001576  EFC1  F00A         	goto	l1874
  4806   00157A                     u1440:
  4807   00157A  6C24               	negf	___awdiv@quotient^0,c
  4808   00157C  1E25               	comf	(___awdiv@quotient+1)^0,f,c
  4809   00157E  B0D8               	btfsc	status,0,c
  4810   001580  2A25               	incf	(___awdiv@quotient+1)^0,f,c
  4811   001582                     l1874:
  4812   001582  C024  F01E         	movff	___awdiv@quotient,?___awdiv
  4813   001586  C025  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  4814   00158A  0012               	return		;funcret
  4815   00158C                     __end_of___awdiv:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _clear_cube *****************
  4819 ;; Defined at:
  4820 ;;		line 133 in file "main.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  j               2   47[COMRAM] int 
  4825 ;;  i               2   45[COMRAM] int 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4835 ;;      Params:         0       0       0       0       0       0       0
  4836 ;;      Locals:         4       0       0       0       0       0       0
  4837 ;;      Temps:          2       0       0       0       0       0       0
  4838 ;;      Totals:         6       0       0       0       0       0       0
  4839 ;;Total ram usage:        6 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 2
  4842 ;; This function calls:
  4843 ;;		___wmul
  4844 ;; This function is called by:
  4845 ;;		_rainfall
  4846 ;;		_scan
  4847 ;;		_speedup
  4848 ;;		_cubeidle
  4849 ;;		_pulsing
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text20
  4855   0016F8                     __ptext20:
  4856                           	callstack 0
  4857   0016F8                     _clear_cube:
  4858                           	callstack 27
  4859   0016F8                     
  4860                           ;main.c: 135: void lighton(int x, int prev){
  4861   0016F8  0E00               	movlw	0
  4862   0016FA  6E92               	movwf	146,c	;volatile
  4863                           
  4864                           ;main.c: 136:     set_plane(x/25);
  4865   0016FC  0E00               	movlw	0
  4866   0016FE  6E93               	movwf	147,c	;volatile
  4867                           
  4868                           ;main.c: 137:     if(prev != -1)plane[(prev%25)/5][prev%5] = 0;
  4869   001700  0E00               	movlw	0
  4870   001702  6E94               	movwf	148,c	;volatile
  4871                           
  4872                           ;main.c: 138:     plane[(x%25)/5][x%5] = 1;
  4873   001704  0E00               	movlw	0
  4874   001706  6E95               	movwf	149,c	;volatile
  4875                           
  4876                           ;main.c: 139:     draw_plane();
  4877   001708  0E00               	movlw	0
  4878   00170A  6E96               	movwf	150,c	;volatile
  4879   00170C                     
  4880                           ;main.c: 140: }
  4881   00170C  8296               	bsf	150,1,c	;volatile
  4882   00170E                     
  4883                           ;main.c: 141: int move(int x, int r){
  4884   00170E  8496               	bsf	150,2,c	;volatile
  4885   001710                     
  4886                           ;main.c: 142:     if(r == 0)x = (x%5 == 4) ? x-4 : x+1;
  4887   001710  8E92               	bsf	146,7,c	;volatile
  4888   001712                     
  4889                           ;main.c: 143:     else if(r == 1)x = (x%5 == 0) ? x+4 : x-1;
  4890   001712  8C92               	bsf	146,6,c	;volatile
  4891   001714                     
  4892                           ;main.c: 144:     else if(r == 2)x = (x%25 >= 20) ? x-20 : x+5;
  4893   001714  8094               	bsf	148,0,c	;volatile
  4894                           
  4895                           ;main.c: 145:     else if(r == 3)x = (x%25 < 5) ? x+20 : x-5;
  4896   001716  0E00               	movlw	0
  4897   001718  6E2F               	movwf	(clear_cube@i+1)^0,c
  4898   00171A  0E00               	movlw	0
  4899   00171C  6E2E               	movwf	clear_cube@i^0,c
  4900   00171E                     l1954:
  4901                           
  4902                           ;main.c: 146:     else if(r == 4)x = (x >= 100) ? x-100 : x+25;
  4903   00171E  0E00               	movlw	0
  4904   001720  6E31               	movwf	(clear_cube@j+1)^0,c
  4905   001722  0E00               	movlw	0
  4906   001724  6E30               	movwf	clear_cube@j^0,c
  4907   001726                     l1960:
  4908                           
  4909                           ;main.c: 147:     else if(r == 5)x = (x<25) ? x+100 : x-25;
  4910   001726  C02E  F026         	movff	clear_cube@i,___wmul@multiplier
  4911   00172A  C02F  F027         	movff	clear_cube@i+1,___wmul@multiplier+1
  4912   00172E  0E00               	movlw	0
  4913   001730  6E29               	movwf	(___wmul@multiplicand+1)^0,c
  4914   001732  0E0A               	movlw	10
  4915   001734  6E28               	movwf	___wmul@multiplicand^0,c
  4916   001736  EC51  F00D         	call	___wmul	;wreg free
  4917   00173A  0E80               	movlw	low _plane
  4918   00173C  2426               	addwf	?___wmul^0,w,c
  4919   00173E  6E2C               	movwf	??_clear_cube^0,c
  4920   001740  0E00               	movlw	high _plane
  4921   001742  2027               	addwfc	(?___wmul+1)^0,w,c
  4922   001744  6E2D               	movwf	(??_clear_cube+1)^0,c
  4923   001746  90D8               	bcf	status,0,c
  4924   001748  3430               	rlcf	clear_cube@j^0,w,c
  4925   00174A  6ED9               	movwf	fsr2l,c
  4926   00174C  3431               	rlcf	(clear_cube@j+1)^0,w,c
  4927   00174E  6EDA               	movwf	fsr2h,c
  4928   001750  502C               	movf	??_clear_cube^0,w,c
  4929   001752  26D9               	addwf	fsr2l,f,c
  4930   001754  502D               	movf	(??_clear_cube+1)^0,w,c
  4931   001756  22DA               	addwfc	fsr2h,f,c
  4932   001758  0E00               	movlw	0
  4933   00175A  6EDE               	movwf	postinc2,c
  4934   00175C  0E00               	movlw	0
  4935   00175E  6EDD               	movwf	postdec2,c
  4936   001760  4A30               	infsnz	clear_cube@j^0,f,c
  4937   001762  2A31               	incf	(clear_cube@j+1)^0,f,c
  4938   001764  BE31               	btfsc	(clear_cube@j+1)^0,7,c
  4939   001766  EFBE  F00B         	goto	u1531
  4940   00176A  5031               	movf	(clear_cube@j+1)^0,w,c
  4941   00176C  E109               	bnz	u1530
  4942   00176E  0E05               	movlw	5
  4943   001770  5C30               	subwf	clear_cube@j^0,w,c
  4944   001772  A0D8               	btfss	status,0,c
  4945   001774  EFBE  F00B         	goto	u1531
  4946   001778  EFC0  F00B         	goto	u1530
  4947   00177C                     u1531:
  4948   00177C  EF93  F00B         	goto	l1960
  4949   001780                     u1530:
  4950   001780  4A2E               	infsnz	clear_cube@i^0,f,c
  4951   001782  2A2F               	incf	(clear_cube@i+1)^0,f,c
  4952   001784  BE2F               	btfsc	(clear_cube@i+1)^0,7,c
  4953   001786  EFCE  F00B         	goto	u1541
  4954   00178A  502F               	movf	(clear_cube@i+1)^0,w,c
  4955   00178C  E109               	bnz	u1540
  4956   00178E  0E05               	movlw	5
  4957   001790  5C2E               	subwf	clear_cube@i^0,w,c
  4958   001792  A0D8               	btfss	status,0,c
  4959   001794  EFCE  F00B         	goto	u1541
  4960   001798  EFD0  F00B         	goto	u1540
  4961   00179C                     u1541:
  4962   00179C  EF8F  F00B         	goto	l1954
  4963   0017A0                     u1540:
  4964   0017A0  0012               	return		;funcret
  4965   0017A2                     __end_of_clear_cube:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function ___wmul *****************
  4969 ;; Defined at:
  4970 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  multiplier      2   37[COMRAM] unsigned int 
  4973 ;;  multiplicand    2   39[COMRAM] unsigned int 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  product         2   41[COMRAM] unsigned int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  2   37[COMRAM] unsigned int 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, prodl, prodh
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4985 ;;      Params:         4       0       0       0       0       0       0
  4986 ;;      Locals:         2       0       0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0
  4988 ;;      Totals:         6       0       0       0       0       0       0
  4989 ;;Total ram usage:        6 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_clear_plane
  4996 ;;		_clear_cube
  4997 ;;		_lighton
  4998 ;;		_rainfall
  4999 ;;		_scan
  5000 ;;		_speedup
  5001 ;;		_pulsing
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text21
  5006   001AA2                     __ptext21:
  5007                           	callstack 0
  5008   001AA2                     ___wmul:
  5009                           	callstack 27
  5010   001AA2  5026               	movf	___wmul@multiplier^0,w,c
  5011   001AA4  0228               	mulwf	___wmul@multiplicand^0,c
  5012   001AA6  CFF3 F02A          	movff	prodl,___wmul@product
  5013   001AAA  CFF4 F02B          	movff	prodh,___wmul@product+1
  5014   001AAE  5026               	movf	___wmul@multiplier^0,w,c
  5015   001AB0  0229               	mulwf	(___wmul@multiplicand+1)^0,c
  5016   001AB2  50F3               	movf	243,w,c
  5017   001AB4  262B               	addwf	(___wmul@product+1)^0,f,c
  5018   001AB6  5027               	movf	(___wmul@multiplier+1)^0,w,c
  5019   001AB8  0228               	mulwf	___wmul@multiplicand^0,c
  5020   001ABA  50F3               	movf	243,w,c
  5021   001ABC  262B               	addwf	(___wmul@product+1)^0,f,c
  5022   001ABE  C02A  F026         	movff	___wmul@product,?___wmul
  5023   001AC2  C02B  F027         	movff	___wmul@product+1,?___wmul+1
  5024   001AC6  0012               	return		;funcret
  5025   001AC8                     __end_of___wmul:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _H_ISR *****************
  5029 ;; Defined at:
  5030 ;;		line 418 in file "main.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  value           2    2[COMRAM] int 
  5035 ;;  mapResult       1    4[COMRAM] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5045 ;;      Params:         0       0       0       0       0       0       0
  5046 ;;      Locals:         3       0       0       0       0       0       0
  5047 ;;      Temps:          2       0       0       0       0       0       0
  5048 ;;      Totals:         5       0       0       0       0       0       0
  5049 ;;Total ram usage:        5 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		Interrupt level 2
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	intcode
  5059   000008                     __pintcode:
  5060                           	callstack 0
  5061   000008                     _H_ISR:
  5062                           	callstack 26
  5063                           
  5064                           ;incstack = 0
  5065   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5066   00000A  EDEE  F00C         	call	int_func,f	;refresh shadow registers
  5067                           
  5068                           	psect	intcode_body
  5069   0019DC                     __pintcode_body:
  5070                           	callstack 26
  5071   0019DC                     int_func:
  5072                           	callstack 26
  5073   0019DC  0006               	pop		; remove dummy address from shadow register refresh
  5074   0019DE                     
  5075                           ;main.c: 420: 
  5076   0019DE  50C4               	movf	196,w,c	;volatile
  5077   0019E0  6E02               	movwf	(??_H_ISR+1)^0,c
  5078   0019E2  6A01               	clrf	??_H_ISR^0,c
  5079   0019E4  50C3               	movf	195,w,c	;volatile
  5080   0019E6  2401               	addwf	??_H_ISR^0,w,c
  5081   0019E8  6E03               	movwf	H_ISR@value^0,c
  5082   0019EA  0E00               	movlw	0
  5083   0019EC  2002               	addwfc	(??_H_ISR+1)^0,w,c
  5084   0019EE  6E04               	movwf	(H_ISR@value+1)^0,c
  5085   0019F0                     
  5086                           ;main.c: 423:     ADCON0bits.GO = 1;
  5087   0019F0  0E00               	movlw	0
  5088   0019F2  6E05               	movwf	H_ISR@mapResult^0,c
  5089                           
  5090                           ;main.c: 425:     return;
  5091   0019F4  EF01  F00D         	goto	i2l1792
  5092   0019F8                     i2l1788:
  5093                           
  5094                           ;main.c: 426: }
  5095   0019F8  0E4C               	movlw	76
  5096   0019FA  2603               	addwf	H_ISR@value^0,f,c
  5097   0019FC  0EFF               	movlw	255
  5098   0019FE  2204               	addwfc	(H_ISR@value+1)^0,f,c
  5099   001A00  2A05               	incf	H_ISR@mapResult^0,f,c
  5100   001A02                     i2l1792:
  5101                           
  5102                           ;main.c: 425:     return;
  5103   001A02  BE04               	btfsc	(H_ISR@value+1)^0,7,c
  5104   001A04  EF0F  F00D         	goto	i2u111_40
  5105   001A08  5004               	movf	(H_ISR@value+1)^0,w,c
  5106   001A0A  E107               	bnz	i2u111_41
  5107   001A0C  0EB5               	movlw	181
  5108   001A0E  5C03               	subwf	H_ISR@value^0,w,c
  5109   001A10  B0D8               	btfsc	status,0,c
  5110   001A12  EF0D  F00D         	goto	i2u111_41
  5111   001A16  EF0F  F00D         	goto	i2u111_40
  5112   001A1A                     i2u111_41:
  5113   001A1A  EFFC  F00C         	goto	i2l1788
  5114   001A1E                     i2u111_40:
  5115   001A1E  C005  F054         	movff	H_ISR@mapResult,_mode
  5116   001A22  6A55               	clrf	(_mode+1)^0,c
  5117   001A24  9C9E               	bcf	158,6,c	;volatile
  5118   001A26  D000               	nop2		;2 cycle nop
  5119   001A28  D000               	nop2		;2 cycle nop
  5120   001A2A  82C2               	bsf	194,1,c	;volatile
  5121   001A2C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5122   001A2E  0011               	retfie		f
  5123   001A30                     __end_of_H_ISR:
  5124                           	callstack 0
  5125   000000                     
  5126                           	psect	rparam
  5127   000000                     
  5128                           	psect	temp
  5129   00005A                     btemp:
  5130                           	callstack 0
  5131   00005A                     	ds	1
  5132   000000                     int$flags	set	btemp
  5133   000000                     wtemp8	set	btemp+1
  5134   000000                     ttemp5	set	btemp+1
  5135   000000                     ttemp6	set	btemp+4
  5136   000000                     ttemp7	set	btemp+8
  5137                           
  5138                           	psect	idloc
  5139                           
  5140                           ;Config register IDLOC0 @ 0x200000
  5141                           ;	unspecified, using default values
  5142   200000                     	org	2097152
  5143   200000  FF                 	db	255
  5144                           
  5145                           ;Config register IDLOC1 @ 0x200001
  5146                           ;	unspecified, using default values
  5147   200001                     	org	2097153
  5148   200001  FF                 	db	255
  5149                           
  5150                           ;Config register IDLOC2 @ 0x200002
  5151                           ;	unspecified, using default values
  5152   200002                     	org	2097154
  5153   200002  FF                 	db	255
  5154                           
  5155                           ;Config register IDLOC3 @ 0x200003
  5156                           ;	unspecified, using default values
  5157   200003                     	org	2097155
  5158   200003  FF                 	db	255
  5159                           
  5160                           ;Config register IDLOC4 @ 0x200004
  5161                           ;	unspecified, using default values
  5162   200004                     	org	2097156
  5163   200004  FF                 	db	255
  5164                           
  5165                           ;Config register IDLOC5 @ 0x200005
  5166                           ;	unspecified, using default values
  5167   200005                     	org	2097157
  5168   200005  FF                 	db	255
  5169                           
  5170                           ;Config register IDLOC6 @ 0x200006
  5171                           ;	unspecified, using default values
  5172   200006                     	org	2097158
  5173   200006  FF                 	db	255
  5174                           
  5175                           ;Config register IDLOC7 @ 0x200007
  5176                           ;	unspecified, using default values
  5177   200007                     	org	2097159
  5178   200007  FF                 	db	255
  5179                           
  5180                           	psect	config
  5181                           
  5182                           ; Padding undefined space
  5183   300000                     	org	3145728
  5184   300000  FF                 	db	255
  5185                           
  5186                           ;Config register CONFIG1H @ 0x300001
  5187                           ;	Oscillator Selection bits
  5188                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5189                           ;	Fail-Safe Clock Monitor Enable bit
  5190                           ;	FCMEN = 0x0, unprogrammed default
  5191                           ;	Internal/External Oscillator Switchover bit
  5192                           ;	IESO = 0x0, unprogrammed default
  5193   300001                     	org	3145729
  5194   300001  08                 	db	8
  5195                           
  5196                           ;Config register CONFIG2L @ 0x300002
  5197                           ;	Power-up Timer Enable bit
  5198                           ;	PWRT = OFF, PWRT disabled
  5199                           ;	Brown-out Reset Enable bits
  5200                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  5201                           ;	Brown Out Reset Voltage bits
  5202                           ;	BORV = 0x3, unprogrammed default
  5203   300002                     	org	3145730
  5204   300002  1B                 	db	27
  5205                           
  5206                           ;Config register CONFIG2H @ 0x300003
  5207                           ;	Watchdog Timer Enable bit
  5208                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5209                           ;	Watchdog Timer Postscale Select bits
  5210                           ;	WDTPS = 0xF, unprogrammed default
  5211   300003                     	org	3145731
  5212   300003  1E                 	db	30
  5213                           
  5214                           ; Padding undefined space
  5215   300004                     	org	3145732
  5216   300004  FF                 	db	255
  5217                           
  5218                           ;Config register CONFIG3H @ 0x300005
  5219                           ;	CCP2 MUX bit
  5220                           ;	CCP2MX = 0x1, unprogrammed default
  5221                           ;	PORTB A/D Enable bit
  5222                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5223                           ;	Low-Power Timer1 Oscillator Enable bit
  5224                           ;	LPT1OSC = 0x0, unprogrammed default
  5225                           ;	MCLR Pin Enable bit
  5226                           ;	MCLRE = 0x1, unprogrammed default
  5227   300005                     	org	3145733
  5228   300005  81                 	db	129
  5229                           
  5230                           ;Config register CONFIG4L @ 0x300006
  5231                           ;	Stack Full/Underflow Reset Enable bit
  5232                           ;	STVREN = 0x1, unprogrammed default
  5233                           ;	Single-Supply ICSP Enable bit
  5234                           ;	LVP = OFF, Single-Supply ICSP disabled
  5235                           ;	Extended Instruction Set Enable bit
  5236                           ;	XINST = 0x0, unprogrammed default
  5237                           ;	Background Debugger Enable bit
  5238                           ;	DEBUG = 0x1, unprogrammed default
  5239   300006                     	org	3145734
  5240   300006  81                 	db	129
  5241                           
  5242                           ; Padding undefined space
  5243   300007                     	org	3145735
  5244   300007  FF                 	db	255
  5245                           
  5246                           ;Config register CONFIG5L @ 0x300008
  5247                           ;	unspecified, using default values
  5248                           ;	Code Protection bit
  5249                           ;	CP0 = 0x1, unprogrammed default
  5250                           ;	Code Protection bit
  5251                           ;	CP1 = 0x1, unprogrammed default
  5252                           ;	Code Protection bit
  5253                           ;	CP2 = 0x1, unprogrammed default
  5254                           ;	Code Protection bit
  5255                           ;	CP3 = 0x1, unprogrammed default
  5256   300008                     	org	3145736
  5257   300008  0F                 	db	15
  5258                           
  5259                           ;Config register CONFIG5H @ 0x300009
  5260                           ;	Boot Block Code Protection bit
  5261                           ;	CPB = 0x1, unprogrammed default
  5262                           ;	Data EEPROM Code Protection bit
  5263                           ;	CPD = OFF, Data EEPROM not code-protected
  5264   300009                     	org	3145737
  5265   300009  C0                 	db	192
  5266                           
  5267                           ;Config register CONFIG6L @ 0x30000A
  5268                           ;	unspecified, using default values
  5269                           ;	Write Protection bit
  5270                           ;	WRT0 = 0x1, unprogrammed default
  5271                           ;	Write Protection bit
  5272                           ;	WRT1 = 0x1, unprogrammed default
  5273                           ;	Write Protection bit
  5274                           ;	WRT2 = 0x1, unprogrammed default
  5275                           ;	Write Protection bit
  5276                           ;	WRT3 = 0x1, unprogrammed default
  5277   30000A                     	org	3145738
  5278   30000A  0F                 	db	15
  5279                           
  5280                           ;Config register CONFIG6H @ 0x30000B
  5281                           ;	unspecified, using default values
  5282                           ;	Configuration Register Write Protection bit
  5283                           ;	WRTC = 0x1, unprogrammed default
  5284                           ;	Boot Block Write Protection bit
  5285                           ;	WRTB = 0x1, unprogrammed default
  5286                           ;	Data EEPROM Write Protection bit
  5287                           ;	WRTD = 0x1, unprogrammed default
  5288   30000B                     	org	3145739
  5289   30000B  E0                 	db	224
  5290                           
  5291                           ;Config register CONFIG7L @ 0x30000C
  5292                           ;	unspecified, using default values
  5293                           ;	Table Read Protection bit
  5294                           ;	EBTR0 = 0x1, unprogrammed default
  5295                           ;	Table Read Protection bit
  5296                           ;	EBTR1 = 0x1, unprogrammed default
  5297                           ;	Table Read Protection bit
  5298                           ;	EBTR2 = 0x1, unprogrammed default
  5299                           ;	Table Read Protection bit
  5300                           ;	EBTR3 = 0x1, unprogrammed default
  5301   30000C                     	org	3145740
  5302   30000C  0F                 	db	15
  5303                           
  5304                           ;Config register CONFIG7H @ 0x30000D
  5305                           ;	unspecified, using default values
  5306                           ;	Boot Block Table Read Protection bit
  5307                           ;	EBTRB = 0x1, unprogrammed default
  5308   30000D                     	org	3145741
  5309   30000D  40                 	db	64
  5310                           tosu	equ	0xFFF
  5311                           tosh	equ	0xFFE
  5312                           tosl	equ	0xFFD
  5313                           stkptr	equ	0xFFC
  5314                           pclatu	equ	0xFFB
  5315                           pclath	equ	0xFFA
  5316                           pcl	equ	0xFF9
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           indf0	equ	0xFEF
  5324                           postinc0	equ	0xFEE
  5325                           postdec0	equ	0xFED
  5326                           preinc0	equ	0xFEC
  5327                           plusw0	equ	0xFEB
  5328                           fsr0h	equ	0xFEA
  5329                           fsr0l	equ	0xFE9
  5330                           wreg	equ	0xFE8
  5331                           indf1	equ	0xFE7
  5332                           postinc1	equ	0xFE6
  5333                           postdec1	equ	0xFE5
  5334                           preinc1	equ	0xFE4
  5335                           plusw1	equ	0xFE3
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           bsr	equ	0xFE0
  5339                           indf2	equ	0xFDF
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           preinc2	equ	0xFDC
  5343                           plusw2	equ	0xFDB
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     83      89
    BANK0           128      0      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_scan
    _speedup->_clear_cube
    _scan->_clear_cube
    _scan->_clear_plane
    _random_pattern->_clear_plane
    _random_pattern->_lighton
    _rand->___lmul
    _move->___awmod
    _clear_plane->___wmul
    _rainfall->_clear_cube
    _pulsing->_clear_cube
    _cubeidle->_clear_cube
    _cubeidle->_lighton
    _srand->_time
    _lighton->___wmul
    _set_plane->___awdiv
    ___awmod->_rand
    ___awdiv->___awmod
    _clear_cube->___wmul
    ___wmul->___awdiv

Critical Paths under _H_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   77744
                                             81 COMRAM     2     2      0
                         _clear_cube
                           _cubeidle
                               _init
                            _pulsing
                           _rainfall
                     _random_pattern
                               _scan
                            _speedup
 ---------------------------------------------------------------------------------
 (1) _speedup                                             15    13      2   10685
                                             49 COMRAM    15    13      2
                            ___awmod
                             ___wmul
                         _clear_cube
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _scan                                                32    30      2   11069
                                             49 COMRAM    32    30      2
                             ___wmul
                         _clear_cube
                        _clear_plane
                         _draw_plane
                           _plane_on
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _random_pattern                                      26    24      2   23266
                                             49 COMRAM    26    24      2
                            ___awmod
                        _clear_plane
                            _lighton
                               _move
                               _rand
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _move                                                 4     0      4    4962
                                             29 COMRAM     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _clear_plane                                          6     6      0    2727
                                             43 COMRAM     6     6      0
                             ___wmul
                         _draw_plane
 ---------------------------------------------------------------------------------
 (1) _rainfall                                             6     4      2   10299
                                             49 COMRAM     6     4      2
                            ___awmod
                             ___wmul
                         _clear_cube
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _pulsing                                             12    10      2    6536
                                             49 COMRAM    12    10      2
                             ___wmul
                         _clear_cube
                         _draw_plane
                           _plane_on
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cubeidle                                            12    10      2   13162
                                             49 COMRAM    12    10      2
                         _clear_cube
                            _lighton
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     196
                                              5 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2     174
                                             13 COMRAM     4     2      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _lighton                                              6     2      4    9899
                                             43 COMRAM     6     2      4
                            ___awdiv
                            ___awmod
                             ___wmul
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (2) _set_plane                                            2     0      2    1260
                                             37 COMRAM     2     0      2
                            ___awdiv (ARG)
                           _plane_on
 ---------------------------------------------------------------------------------
 (3) _plane_on                                             4     2      2     782
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _draw_plane                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3488
                                             23 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                             29 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _clear_cube                                           6     6      0    2727
                                             43 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2591
                                             37 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _H_ISR                                                5     5      0      30
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_cube
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
           _rand (ARG)
             ___lmul
       ___awmod (ARG)
   _cubeidle
     _clear_cube
     _lighton
       ___awdiv
       ___awmod
       ___wmul
       _draw_plane
       _set_plane
         ___awdiv (ARG)
         _plane_on (ARG)
     _srand
       _time (ARG)
     _time
   _init
   _pulsing
     ___wmul
     _clear_cube
     _draw_plane
     _plane_on
   _rainfall
     ___awmod
     ___wmul
     _clear_cube
     _draw_plane
     _set_plane
   _random_pattern
     ___awmod
     _clear_plane
       ___wmul
       _draw_plane
     _lighton
     _move
       ___awmod
     _rand
     _srand
     _time
   _scan
     ___wmul
     _clear_cube
     _clear_plane
     _draw_plane
     _plane_on
     _set_plane
   _speedup
     ___awmod
     ___wmul
     _clear_cube
     _draw_plane
     _set_plane

 _H_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      32       4       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     53      59       1       70.6%
BITBIGSFR_1l        21      0       0      21        0.0%
BITBIGSFR_1hh        E      0       0      20        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFRll          9      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFRh           5      0       0      22        0.0%
BITBIGSFRlhh         4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B      25        0.0%
DATA                 0      0      8B      27        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 12 06:02:14 2023

                     l62 11D2                       l80 18B0                       l73 1836  
                     l90 17A0                       l75 183E                       l83 1AF8  
                     l59 19DA                       l76 1846                       l77 184E  
                     l93 127E                       l69 1830                       l78 1856  
                     l94 12F8                       l79 185E             ___awdiv@sign 0023  
    ___wmul@multiplicand 0028             speedup@j_745 003F             speedup@j_746 0035  
        random_pattern@r 004A          random_pattern@x 0044                      l132 10A4  
                    l302 1976                      l303 1986                      l143 0324  
                    l136 01B6                      l216 0952                      l229 0B4C  
                    l238 0C36                      l263 0E84                      l184 14C6  
                    l249 13EA                      l522 158A                      l178 052A  
                    l291 1AC6                      l535 16F6                      l970 191C  
                    l974 1A7A                      l967 1AE0             ___awmod@sign 001D  
                    wreg 000FE8         random_pattern@r2 0048         random_pattern@x2 0046  
       random_pattern@id 0032                     l2000 0F8C                     l2010 1000  
                   l2002 0F9C                     l1220 1988                     l2020 1064  
                   l2012 1014                     l2004 0FB0                     l2100 01BE  
                   l2030 1A30                     l1230 19A4                     l1222 199C  
                   l2022 1080                     l2014 1030                     l2006 0FE0  
                   l2110 0248                     l2102 01DE                     l2032 1A42  
                   l1240 19D2                     l1232 19AE                     l1224 199E  
                   l2024 1090                     l2016 1040                     l2008 0FF0  
                   l2040 18B2                     l2120 02CC                     l2112 025C  
                   l2104 01F0                     l2034 1A6A                     l1242 19D4  
                   l1234 19CC                     l1226 19A0                     l2018 1050  
                   l2026 109C                     l2042 18EE                     l2130 035E  
                   l2122 02E4                     l2114 0274                     l2106 0206  
                   l2050 004E                     l2210 05A2                     l2202 0544  
                   l1244 19D6                     l1236 19CE                     l1228 19A2  
                   l2140 03E2                     l2132 0374                     l2124 0304  
                   l2116 0294                     l2108 0226                     l2060 005E  
                   l2052 0056                     l2300 07A2                     l2220 05D2  
                   l2212 05BE                     l2204 057E                     l2038 1AC8  
                   l1246 19D8                     l1238 19D0                     l2150 0472  
                   l2142 0402                     l2134 0394                     l2126 032C  
                   l2118 02B8                     l2070 00AC                     l2062 005E  
                   l2054 0056                     l2046 0012                     l2302 07A6  
                   l2222 05D6                     l2206 0582   __end_of_random_pattern 052C  
                   l2160 04FA                     l2144 0426                     l2152 0492  
                   l2136 03B6                     l2128 034C                     l2080 010E  
                   l2072 00C0                     l2064 0070                     l2056 0056  
                   l2048 0016                     l2304 07B6                     l2240 0656  
                   l2232 060E                     l2224 05EA                     l2208 059E  
                   l2400 0A4C                     l2170 13F8                     l2162 0502  
                   l2154 04AE                     l2146 043A                     l2138 03CA  
                   l2090 016A                     l2082 0122                     l2074 00D2  
                   l2066 0090                     l2058 005E                     l2330 0848  
                   l2322 07EA                     l2314 07DE                     l2306 07BA  
                   l2250 066E                     l2234 0622                     l2226 0606  
                   l2218 05C6                     l2410 0AC4                     l2402 0A6C  
                   l2500 0CD8                     l2180 1464                     l2172 1406  
                   l2156 04C2                     l2148 0452                     l2164 0512  
                   l2092 0172                     l2084 0132                     l2076 00F2  
                   l2068 0090                     l2332 0858                     l2324 0824  
                   l2316 07E2                     l2308 07D6                     l2260 0696  
                   l2252 068A                     l2236 0626                     l2420 0B24  
                   l2412 0ADE                     l2502 0CDC                     l2182 149E  
                   l2174 1440                     l2166 13EC                     l2158 04CA  
                   l2094 017A                     l2086 013A                     l2078 00F2  
                   l2350 08CC                     l2342 08A0                     l2334 085C  
                   l2326 0828                     l2270 06DC                     l2246 065E  
                   l2238 063A                     l2190 0534                     l2430 0B6A  
                   l2422 0B28                     l2414 0AF8                     l2520 0D14  
                   l2504 0CE8                     l2184 14AA                     l2176 1444  
                   l2168 13F0                     l2096 0196                     l2088 0156  
                   l2360 0932                     l2352 0916                     l2344 08A4  
                   l2336 0878                     l2328 0844                     l2280 072C  
                   l2272 06F8                     l2248 066A                     l2440 0BC8  
                   l2432 0B82                     l2424 0B34                     l2416 0AFC  
                   l2408 0A74                     l1802 1832                     l2450 12FA  
                   l2530 0D8E                     l2522 0D4E                     l2514 0D0C  
                   l2506 0CF4                     l2178 1448                     l2186 14AE  
                   l2098 01AA                     l2346 08AC                     l2338 0880  
                   l2274 06FC                     l2266 069E                     l2258 0692  
                   l2442 0BDC                     l2434 0B86                     l2426 0B40  
                   l2418 0B18                     l2370 0960                     l1820 1ABE  
                   l1900 16C2                     l1812 10A6                     l2460 1370  
                   l2452 1332                     l2532 0DA6                     l2524 0D52  
                   l2508 0D04                     l2356 091E                     l2276 070C  
                   l2268 06D8                     l2196 053C                     l2364 093A  
                   l2188 052C                     l2444 0BE2                     l2436 0BA2  
                   l2428 0B48                     l2380 098A                     l2372 0968  
                   l1910 16EE                     l1902 16CA                     l1806 186C  
                   l1814 1AE2                     l2470 13C4                     l2462 137E  
                   l2454 1336                     l2550 0E34                     l2534 0DAA  
                   l2526 0D6E                     l1830 194C                     l2358 0922  
                   l2294 0740                     l2286 0734                     l2278 0710  
                   l2446 0BFE                     l2438 0BAE                     l2382 0996  
                   l2374 0970                     l2366 0954                     l2622 160E  
                   l1840 14E2                     l1904 16D0                     l2624 1882  
                   l1816 1AEC                     l2464 1382                     l2456 134C  
                   l2472 13D2                     l2552 0E58                     l2544 0DC6  
                   l2536 0DBA                     l2528 0D72                     l2480 0C4A  
                   l1920 17AA                     l1832 1956                     l1824 191E  
                   l2296 0782                     l2288 0738                     l2392 09C4  
                   l2384 09A8                     l2448 0C1E                     l2376 097A  
                   l2368 0958                     l2560 1594                     l1818 1AA2  
                   l1850 1508                     l1842 14E6                     l1834 14C8  
                   l1906 16D6                     l2466 139E                     l2458 1358  
                   l2554 0E5C                     l2546 0E14                     l2538 0DBE  
                   l2482 0C4E                     l2474 0C38                     l1930 17F0  
                   l1914 17A2                     l1826 192E                     l2298 0786  
                   l2394 0A14                     l2386 09BC                     l2378 0982  
                   l2570 15E4                     l2562 15A4                     l1940 170C  
                   l1860 153E                     l1852 151A                     l1844 14F4  
                   l1836 14CC                     l1908 16E6                     l2468 13B0  
                   l2548 0E18                     l2492 0C72                     l2484 0C5A  
                   l2476 0C3C                     l2556 0E6C                     l1932 180C  
                   l1828 193C                     l2396 0A2E                     l2572 15F4  
                   l2564 15B4                     l1942 170E                     l1862 1554  
                   l1854 1522                     l1870 156A                     l1846 14FC  
                   l1838 14DA                     l2494 0CA6                     l2486 0C6A  
                   l2478 0C40                     l1934 1810                     l1926 17B2  
                   l2398 0A48                     l2566 15C4                     l2558 158C  
                   l1960 1726                     l1944 1710                     l1872 157A  
                   l1864 155C                     l1856 152A                     l1848 1500  
                   l1880 164C                     l2496 0CAA                     l1936 182C  
                   l1928 17EC                     l2568 15D4                     l2576 15F8  
                   l1962 1760                     l1954 171E                     l1946 1712  
                   l1938 16F8                     l1874 1582                     l1866 155E  
                   l1858 1538                     l1890 167C                     l1882 165A  
                   l1970 11D4                     l2498 0CC6                     l1964 1764  
                   l1948 1714                     l1868 1564                     l1892 168E  
                   l1884 1662                     l1972 11F4                     l1980 0E98  
                   l1966 1780                     l1894 1696                     l1886 1666  
                   l1878 1648                     l1974 1208                     l1990 0F18  
                   l1982 0EC0                     l1968 1784                     l1896 169E  
                   l1888 1674                     l1976 12F4                     l1992 0F28  
                   l1984 0ED0                     l1898 16AC                     l1994 0F38  
                   l1986 0EE0                     l1978 0E86                     l1996 0F4C  
                   l1988 0EF2                     l1998 0F7C                     u2000 0878  
                   u2001 0874                     u2010 089C                     u2011 0898  
                   u2020 08C8                     u2100 0BA2                     u1205 1110  
                   u1125 10B0                     u2021 08C4                     u2101 0B9E  
                   u1206 1112                     u1126 10B2                     u2030 0952  
                   u2110 0BC8                     u1215 111C                     u1135 10BC  
                   u2031 094E                     u2111 0BC4                     u1400 14F4  
                   u1216 111E                     u1136 10BE                     u2200 0E34  
                   u2120 0BDC                     u2040 09A8                     u1401 14F0  
                   u1305 1188                     u1225 1128                     u1145 10C8  
                   u2201 0E30                     u2121 0BD8                     u2041 09A4  
                   u1410 151A                     u1306 118A                     u1226 112A  
                   u1146 10CA                     u2210 0E84                     u2130 0C36  
                   u2050 09BC                     u1411 1516                     u1315 1194  
                   u1235 1134                     u1155 10D4                     u2211 0E80  
                   u2131 0C32                     u2051 09B8                     u1420 1538  
                   u1500 16E6                     u1316 1196                     u1236 1136  
                   u1156 10D6                     u2140 139E                     u2060 0A68  
                   u1421 1534                     u1501 16E2                     u1325 11A0  
                   u1245 1140                     u1165 10E0                     u2141 139A  
                   u2061 0A64                     u1430 1554                     u1326 11A2  
                   u1246 1142                     u1166 10E2                     u2150 13B0  
                   u1510 180C                     u2070 0B18                     u1431 1550  
                   u1335 11AC                     u1255 114C                     u1175 10EC  
                   u2151 13AC                     u1511 1808                     u2071 0B14  
                   u1440 157A                     u1336 11AE                     u1256 114E  
                   u1176 10EE                     u2160 13EA                     u1520 182C  
                   u1600 0F4C                     u2080 0B6A                     u1441 1576  
                   u1345 11B8                     u1265 1158                     u1185 10F8  
                   u2161 13E6                     u1521 1828                     u1601 0F48  
                   u2081 0B66                     u1530 1780                     u1450 165A  
                   u1346 11BA                     u1266 115A                     u1186 10FA  
                   u2170 0CC6                     u1610 0F7C                     u1370 193C  
                   u2090 0B82                     u1531 177C                     u1451 1656  
                   u1355 11C4                     u1275 1164                     u1195 1104  
                   u2171 0CC2                     u1611 0F78                     u1371 1938  
                   u2307 0508                     u2091 0B7E                     u2227 0B42  
                   u1540 17A0                     u1460 1674                     u1356 11C6  
                   u1276 1166                     u1196 1106                     u2180 0D6E  
                   u1620 0FB0                     u1380 1976                     u1700 01F0  
                   u1541 179C                     u1461 1670                     u1365 11D0  
                   u1285 1170                     u2181 0D6A                     u2317 0C60  
                   u1621 0FAC                     u1381 1972                     u1701 01EC  
                   u2237 05DC                     u1390 14DA                     u1470 168E  
                   u1366 11D2                     u1286 1172                     u1550 1208  
                   u2190 0D8E                     u1630 0FE0                     u1710 0202  
                   u1391 14D6                     u1471 168A                     u1295 117C  
                   u1551 1204                     u2191 0D8A                     u2327 0CFA  
                   u1631 0FDC                     u1711 01FE                     u2247 062C  
                   u1480 16AC                     u1296 117E                     u1640 1014  
                   u1560 0E98                     u1800 0370                     u1720 0244  
                   u1481 16A8                     u2337 0DB0                     u1641 1010  
                   u1561 0E94                     u1801 036C                     u1721 0240  
                   u2257 0702                     u1490 16C2                     u1650 1030  
                   u1570 0EC0                     u1810 03B2                     u1730 025C  
                   u1491 16BE                     u2347 0E62                     u1651 102C  
                   u1571 0EBC                     u1811 03AE                     u1731 0258  
                   u2267 07AC                     u1660 1064                     u1580 0EF2  
                   u1820 03CA                     u1740 0270                     u1900 059E  
                   u2357 1376                     u1661 1060                     u1581 0EEE  
                   u1821 03C6                     u1741 026C                     u2277 084E  
                   u1901 059A                     u1670 1080                     u1590 0F18  
                   u1830 03DE                     u1750 02B4                     u1910 05BE  
                   u2367 13CA                     u1671 107C                     u1591 0F14  
                   u1831 03DA                     u1751 02B0                     u2287 0928  
                   u1911 05BA                     u1680 1A42                     u1840 0422  
                   u1760 02CC                     u1920 0606                     u1681 1A3E  
                   u1841 041E                     u1761 02C8                     u2297 0128  
                   u1921 0602                     u1690 190E                     u1850 043A  
                   u1770 02E0                     u1930 0656                     u1851 0436  
                   u1771 02DC                     u1931 0652                     u1860 044E  
                   u1780 0324                     u1940 068A                     u1861 044A  
                   u1781 0320                     u1941 0686                     u1870 0492  
                   u1790 035E                     u1950 06F8                     u1695 1904  
                   u1871 048E                     u1791 035A                     u1951 06F4  
                   u1880 052A                     u1960 072C                     u1881 0526  
                   u1961 0728                     u1890 14C6                     u1970 07A2  
                   u1891 14C2                     u1971 079E                     u1980 07D6  
                   u1981 07D2                     u1990 0844                     u1991 0840  
                   _main 158C                     _init 1988                     _mode 0054  
                   _rand 18B2                     _scan 052C                     _seed 0056  
                   _move 0E86                     _time 1A30                     fsr2h 000FDA  
                   fsr2l 000FD9                     btemp 005A                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ?_main 0001                    ?_init 0001                    ?_scan 0032  
                  ?_rand 0012          __end_of___awdiv 158C                    ?_move 001E  
        __end_of___awmod 16F8                    ?_time 0006          ___awdiv@divisor 0020  
                  i2l287 1A1E                    i2l288 1A2C          ___awdiv@counter 0022  
                  _H_ISR 0008                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 000A          __end_of_lighton 12FA                    _plane 0080  
                  _srand 1AC8          ?_random_pattern 0032                    scan@i 0038  
                  scan@j 003A                    move@r 0020                    move@x 001E  
                  time@t 0006          __end_of_speedup 0C38                    ttemp5 005B  
                  ttemp6 005E                    ttemp7 0062          __end_of_pulsing 0E86  
                  status 000FD8                    wtemp8 005B          __initialization 1A7C  
           __end_of_main 1648             __end_of_init 19DC             __end_of_rand 191E  
           __end_of_scan 0954             __end_of_move 10A6             __end_of_time 1A7C  
                 ??_main 0052                   ??_init 0006                   ??_scan 0034  
                 ??_rand 0014                   ??_move 0022                   ??_time 000E  
          __activetblptr 000002                   ?_H_ISR 0001                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 001E  
                 ?_srand 000E                   i2l1790 1A00                   i2l1792 1A02  
                 i2l1784 19DE                   i2l1786 19F0                   i2l1788 19F8  
       __end_of_cubeidle 13EC                   ___lmul 191E                   ___wmul 1AA2  
              ??___awdiv 0022                ??___awmod 001C              lighton@prev 002E  
           pulsing@i_753 0036             pulsing@i_755 003C                   clear_0 1A82  
       ___awdiv@quotient 0024          ___awmod@divisor 001A                   isa$std 000001  
       __end_of_rainfall 14C8          ___awmod@counter 001C         __end_of_plane_on 18B2  
                 scan@id 0032                ??_lighton 0030                   tblptru 000FF8  
                 srand@s 000E                ??_speedup 0034                ??_pulsing 0034  
             __accesstop 0080  __end_of__initialization 1A94      random_pattern@prevr 003C  
    random_pattern@prevx 0040            ___rparam_used 000001            __end_of_H_ISR 1A30  
         __pcstackCOMRAM 0001            __end_of_srand 1AE2                  ??_H_ISR 0001  
                ??_srand 0010               __pbssBANK0 0080               _clear_cube 16F8  
                ?___lmul 0006                  ?___wmul 0026           ___lmul@product 000E  
       ??_random_pattern 0034                ?_cubeidle 0032               _draw_plane 10A6  
              ?_rainfall 0032                ?_plane_on 0006                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 14C8                  ___awmod 1648  
                __pcinit 1A7C                  __ramtop 0600                  __ptext0 158C  
                __ptext1 0954                  __ptext2 052C                  __ptext3 0012  
                __ptext4 18B2                  __ptext5 191E                  __ptext6 0E86  
                __ptext7 17A2                  __ptext8 13EC                  __ptext9 0C38  
                _lighton 11D4         ___awmod@dividend 0018                  _speedup 0954  
                _pulsing 0C38               ??_cubeidle 0034           __pintcode_body 19DC  
   end_of_initialization 1A94            __Lmediumconst 0000                  int_func 19DC  
      __end_of_set_plane 1AFA               ??_rainfall 0034               ??_plane_on 0008  
          ??_clear_plane 002C              ?_clear_cube 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _TRISAbits 000F92  
              _TRISCbits 000F94                _TRISEbits 000F96              ?_draw_plane 0001  
   random_pattern@prevr2 003E              speedup@dcnt 0037     random_pattern@prevx2 0042  
             cubeidle@id 0032           __end_of___lmul 1988           __end_of___wmul 1AC8  
    __end_of_clear_plane 1832      start_initialization 1A7C                 ??___lmul 000E  
               ??___wmul 002A              __pbssCOMRAM 0054               rainfall@id 0032  
            _clear_plane 17A2                __pintcode 0008                 ?___awdiv 001E  
               ?___awmod 0018               H_ISR@value 0003                 ?_lighton 002C  
               ?_speedup 0032                 ?_pulsing 0032           ___wmul@product 002A  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
             set_plane@a 0026                 _LATDbits 000F8C                 _LATEbits 000F8D  
               _PIE1bits 000F9D                 i2u111_40 1A1E                 i2u111_41 1A1A  
           ??_clear_cube 002C                 _PIR1bits 000F9E                _set_plane 1AE2  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0        ___wmul@multiplier 0026  
             speedup@del 0039                cubeidle@i 003C       __end_of_clear_cube 17A2  
           ??_draw_plane 0006        ___lmul@multiplier 0006                scan@i_730 0040  
              scan@i_731 0042                scan@i_733 0046                scan@i_735 004A  
              scan@i_728 003C                scan@i_737 004E                scan@i_729 003E  
               __Hrparam 0000                scan@j_732 0044                scan@j_734 0048  
              scan@j_736 004C                scan@j_738 0050                 __Lrparam 0000  
             ?_set_plane 0026             clear_plane@i 002E             clear_plane@j 0030  
     __end_of_draw_plane 11D4                rainfall@x 0036                plane_on@a 0006  
               __ptext10 1988                 __ptext11 12FA                 __ptext20 16F8  
               __ptext12 1A30                 __ptext21 1AA2                 __ptext13 1AC8  
               __ptext14 11D4                 __ptext15 1AE2                 __ptext16 1832  
               __ptext17 10A6                 __ptext18 1648                 __ptext19 14C8  
               _cubeidle 12FA                 _rainfall 13EC                 _plane_on 1832  
               isa$xinst 000000                 int$flags 005A                speedup@id 0032  
             _INTCONbits 000FF2              clear_cube@i 002E              clear_cube@j 0030  
               lighton@x 002C                pulsing@id 0032                 intlevel2 0000  
             _OSCCONbits 000FD3             ?_clear_plane 0001           H_ISR@mapResult 0005  
            ??_set_plane 0028                 speedup@i 003B                 speedup@j 003D  
               pulsing@i 003A                 pulsing@j 0038           _random_pattern 0012  
