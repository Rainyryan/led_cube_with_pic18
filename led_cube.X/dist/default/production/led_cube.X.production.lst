

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 12 11:47:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Version 2.40
    42                           ; Generated 04/07/2022 GMT
    43                           ; 
    44                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     _ADRESL	set	4035
    77   000000                     _ADRESH	set	4036
    78   000000                     _LATBbits	set	3978
    79   000000                     _LATCbits	set	3979
    80   000000                     _ADCON0bits	set	4034
    81   000000                     _TRISCbits	set	3988
    82   000000                     _TRISAbits	set	3986
    83   000000                     _TRISEbits	set	3990
    84   000000                     _LATAbits	set	3977
    85   000000                     _TRISA	set	3986
    86   000000                     _PIE1bits	set	3997
    87   000000                     _ADCON2bits	set	4032
    88   000000                     _ADCON1bits	set	4033
    89   000000                     _OSCCONbits	set	4051
    90   000000                     _TRISE	set	3990
    91   000000                     _TRISD	set	3989
    92   000000                     _TRISC	set	3988
    93   000000                     _TRISB	set	3987
    94   000000                     _INTCONbits	set	4082
    95   000000                     _PIR1bits	set	3998
    96   000000                     _LATEbits	set	3981
    97   000000                     _LATDbits	set	3980
    98                           
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   0023DA                     __pcinit:
   103                           	callstack 0
   104   0023DA                     start_initialization:
   105                           	callstack 0
   106   0023DA                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Clear objects allocated to BANK0 (50 bytes)
   110   0023DA  EE00  F080         	lfsr	0,__pbssBANK0
   111   0023DE  0E32               	movlw	50
   112   0023E0                     clear_0:
   113   0023E0  6AEE               	clrf	postinc0,c
   114   0023E2  06E8               	decf	wreg,f,c
   115   0023E4  E1FD               	bnz	clear_0
   116                           
   117                           ; Clear objects allocated to COMRAM (18 bytes)
   118   0023E6  EE00  F059         	lfsr	0,__pbssCOMRAM
   119   0023EA  0E12               	movlw	18
   120   0023EC                     clear_1:
   121   0023EC  6AEE               	clrf	postinc0,c
   122   0023EE  06E8               	decf	wreg,f,c
   123   0023F0  E1FD               	bnz	clear_1
   124   0023F2                     end_of_initialization:
   125                           	callstack 0
   126   0023F2                     __end_of__initialization:
   127                           	callstack 0
   128   0023F2  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129   0023F4  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130   0023F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   131   0023F8  6EF8               	movwf	tblptru,c
   132   0023FA  0100               	movlb	0
   133   0023FC  EF20  F00E         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136   000059                     __pbssCOMRAM:
   137                           	callstack 0
   138   000059                     	ds	10
   139   000063                     _flag:
   140                           	callstack 0
   141   000063                     	ds	2
   142   000065                     _mode:
   143                           	callstack 0
   144   000065                     	ds	2
   145   000067                     _seed:
   146                           	callstack 0
   147   000067                     	ds	4
   148                           
   149                           	psect	bssBANK0
   150   000080                     __pbssBANK0:
   151                           	callstack 0
   152   000080                     _plane:
   153                           	callstack 0
   154   000080                     	ds	50
   155                           
   156                           	psect	cstackCOMRAM
   157   000001                     __pcstackCOMRAM:
   158                           	callstack 0
   159   000001                     ?i2___awmod:
   160                           	callstack 0
   161   000001                     i2___awmod@dividend:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x0
   165   000001                     	ds	2
   166   000003                     i2___awmod@divisor:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0x2
   170   000003                     	ds	2
   171   000005                     i2___awmod@counter:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175   000005                     	ds	1
   176   000006                     i2___awmod@sign:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180   000006                     	ds	1
   181   000007                     ??_H_ISR:
   182                           
   183                           ; 1 bytes @ 0x6
   184   000007                     	ds	2
   185   000009                     H_ISR@value:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x8
   189   000009                     	ds	2
   190   00000B                     ?___lmul:
   191                           	callstack 0
   192   00000B                     ?_time:
   193                           	callstack 0
   194   00000B                     plane_on@a:
   195                           	callstack 0
   196   00000B                     time@t:
   197                           	callstack 0
   198   00000B                     ___lmul@multiplier:
   199                           	callstack 0
   200                           
   201                           ; 4 bytes @ 0xA
   202   00000B                     	ds	2
   203   00000D                     ??_plane_on:
   204                           
   205                           ; 1 bytes @ 0xC
   206   00000D                     	ds	2
   207   00000F                     ___lmul@multiplicand:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0xE
   211   00000F                     	ds	4
   212   000013                     srand@s:
   213                           	callstack 0
   214   000013                     ___lmul@product:
   215                           	callstack 0
   216                           
   217                           ; 4 bytes @ 0x12
   218   000013                     	ds	2
   219   000015                     ??_srand:
   220                           
   221                           ; 1 bytes @ 0x14
   222   000015                     	ds	2
   223   000017                     ?_rand:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x16
   227   000017                     	ds	2
   228   000019                     ??_rand:
   229                           
   230                           ; 1 bytes @ 0x18
   231   000019                     	ds	4
   232   00001D                     ?___awmod:
   233                           	callstack 0
   234   00001D                     ___awmod@dividend:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x1C
   238   00001D                     	ds	2
   239   00001F                     ___awmod@divisor:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x1E
   243   00001F                     	ds	2
   244   000021                     ___awmod@counter:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x20
   248   000021                     	ds	1
   249   000022                     ___awmod@sign:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x21
   253   000022                     	ds	1
   254   000023                     ?_move:
   255                           	callstack 0
   256   000023                     ?___awdiv:
   257                           	callstack 0
   258   000023                     move@x:
   259                           	callstack 0
   260   000023                     ___awdiv@dividend:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x22
   264   000023                     	ds	2
   265   000025                     move@r:
   266                           	callstack 0
   267   000025                     ___awdiv@divisor:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x24
   271   000025                     	ds	2
   272   000027                     ___awdiv@counter:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x26
   276   000027                     	ds	1
   277   000028                     ___awdiv@sign:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x27
   281   000028                     	ds	1
   282   000029                     ___awdiv@quotient:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x28
   286   000029                     	ds	2
   287   00002B                     ?___wmul:
   288                           	callstack 0
   289   00002B                     set_plane@a:
   290                           	callstack 0
   291   00002B                     ___wmul@multiplier:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x2A
   295   00002B                     	ds	2
   296   00002D                     ___wmul@multiplicand:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2C
   300   00002D                     	ds	2
   301   00002F                     ___wmul@product:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2E
   305   00002F                     	ds	2
   306   000031                     ??_clear_plane:
   307   000031                     ??_clear_cube:
   308   000031                     lighton@x:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x30
   312   000031                     	ds	2
   313   000033                     clear_plane@i:
   314                           	callstack 0
   315   000033                     clear_cube@i:
   316                           	callstack 0
   317   000033                     lighton@prev:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x32
   321   000033                     	ds	2
   322   000035                     ??_lighton:
   323   000035                     clear_plane@j:
   324                           	callstack 0
   325   000035                     clear_cube@j:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x34
   329   000035                     	ds	2
   330   000037                     random_pattern@id:
   331                           	callstack 0
   332   000037                     antirainfall@id:
   333                           	callstack 0
   334   000037                     hitler@id:
   335                           	callstack 0
   336   000037                     scan@id:
   337                           	callstack 0
   338   000037                     speedup@id:
   339                           	callstack 0
   340   000037                     cubeidle@id:
   341                           	callstack 0
   342   000037                     pulsing@id:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x36
   346   000037                     	ds	2
   347   000039                     ??_random_pattern:
   348   000039                     ??_antirainfall:
   349   000039                     ??_hitler:
   350   000039                     ??_scan:
   351   000039                     ??_speedup:
   352   000039                     ??_cubeidle:
   353   000039                     ??_pulsing:
   354                           
   355                           ; 1 bytes @ 0x38
   356   000039                     	ds	1
   357   00003A                     hitler@it:
   358                           	callstack 0
   359   00003A                     speedup@j_809:
   360                           	callstack 0
   361   00003A                     cubeidle@i:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x39
   365   00003A                     	ds	1
   366   00003B                     pulsing@i_816:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x3A
   370   00003B                     	ds	1
   371   00003C                     hitler@itcnt:
   372                           	callstack 0
   373   00003C                     speedup@dcnt:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x3B
   377   00003C                     	ds	1
   378   00003D                     scan@i:
   379                           	callstack 0
   380   00003D                     pulsing@j:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x3C
   384   00003D                     	ds	1
   385   00003E                     hitler@x:
   386                           	callstack 0
   387   00003E                     speedup@del:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x3D
   391   00003E                     	ds	1
   392   00003F                     scan@j:
   393                           	callstack 0
   394   00003F                     pulsing@i:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x3E
   398   00003F                     	ds	1
   399   000040                     hitler@cnt:
   400                           	callstack 0
   401   000040                     speedup@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x3F
   405   000040                     	ds	1
   406   000041                     random_pattern@prevr:
   407                           	callstack 0
   408   000041                     scan@i_791:
   409                           	callstack 0
   410   000041                     pulsing@i_818:
   411                           	callstack 0
   412   000041                     antirainfall@a:
   413                           	callstack 0
   414                           
   415                           ; 10 bytes @ 0x40
   416   000041                     	ds	1
   417   000042                     speedup@j:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x41
   421   000042                     	ds	1
   422   000043                     random_pattern@prevx:
   423                           	callstack 0
   424   000043                     scan@i_792:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x42
   428   000043                     	ds	1
   429   000044                     speedup@j_808:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x43
   433   000044                     	ds	1
   434   000045                     random_pattern@x:
   435                           	callstack 0
   436   000045                     scan@i_793:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x44
   440   000045                     	ds	2
   441   000047                     random_pattern@r:
   442                           	callstack 0
   443   000047                     scan@i_794:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x46
   447   000047                     	ds	2
   448   000049                     scan@j_795:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x48
   452   000049                     	ds	2
   453   00004B                     antirainfall@tmp:
   454                           	callstack 0
   455   00004B                     scan@i_796:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x4A
   459   00004B                     	ds	2
   460   00004D                     antirainfall@i_779:
   461                           	callstack 0
   462   00004D                     scan@j_797:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x4C
   466   00004D                     	ds	2
   467   00004F                     antirainfall@i:
   468                           	callstack 0
   469   00004F                     scan@i_798:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x4E
   473   00004F                     	ds	2
   474   000051                     antirainfall@i_780:
   475                           	callstack 0
   476   000051                     scan@j_799:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x50
   480   000051                     	ds	2
   481   000053                     antirainfall@idx:
   482                           	callstack 0
   483   000053                     scan@i_800:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x52
   487   000053                     	ds	2
   488   000055                     scan@j_801:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x54
   492   000055                     	ds	2
   493   000057                     ??_main:
   494                           
   495                           ; 1 bytes @ 0x56
   496   000057                     	ds	2
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 610 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0
   519 ;;      Temps:          2       0       0       0       0       0       0
   520 ;;      Totals:         2       0       0       0       0       0       0
   521 ;;Total ram usage:        2 bytes
   522 ;; Hardware stack levels required when called: 6
   523 ;; This function calls:
   524 ;;		_antirainfall
   525 ;;		_clear_cube
   526 ;;		_cubeidle
   527 ;;		_hitler
   528 ;;		_init
   529 ;;		_pulsing
   530 ;;		_random_pattern
   531 ;;		_scan
   532 ;;		_speedup
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539   001C40                     __ptext0:
   540                           	callstack 0
   541   001C40                     _main:
   542                           	callstack 25
   543   001C40                     
   544                           ;main.c: 611:                 break;
   545   001C40  EC99  F011         	call	_init	;wreg free
   546   001C44  EF5C  F00E         	goto	l3239
   547   001C48                     l3223:
   548                           
   549                           ;main.c: 620:                 break;
   550   001C48  0E00               	movlw	0
   551   001C4A  6E38               	movwf	(speedup@id+1)^0,c
   552   001C4C  0E00               	movlw	0
   553   001C4E  6E37               	movwf	speedup@id^0,c
   554   001C50  EC7D  F006         	call	_speedup	;wreg free
   555                           
   556                           ;main.c: 621:             case 6:
   557   001C54  EF5C  F00E         	goto	l3239
   558   001C58                     l3225:
   559                           
   560                           ;main.c: 623:             default:
   561   001C58  0E00               	movlw	0
   562   001C5A  6E38               	movwf	(cubeidle@id+1)^0,c
   563   001C5C  0E01               	movlw	1
   564   001C5E  6E37               	movwf	cubeidle@id^0,c
   565   001C60  ECEA  F00E         	call	_cubeidle	;wreg free
   566                           
   567                           ;main.c: 624:                 clear_cube();
   568   001C64  EF5C  F00E         	goto	l3239
   569   001C68                     l3227:
   570                           
   571                           ;main.c: 626:         }
   572   001C68  0E00               	movlw	0
   573   001C6A  6E38               	movwf	(pulsing@id+1)^0,c
   574   001C6C  0E02               	movlw	2
   575   001C6E  6E37               	movwf	pulsing@id^0,c
   576   001C70  EC56  F009         	call	_pulsing	;wreg free
   577                           
   578                           ;main.c: 627: 
   579   001C74  EF5C  F00E         	goto	l3239
   580   001C78                     l3229:
   581                           
   582                           ;main.c: 629:     return;
   583   001C78  0E00               	movlw	0
   584   001C7A  6E38               	movwf	(random_pattern@id+1)^0,c
   585   001C7C  0E03               	movlw	3
   586   001C7E  6E37               	movwf	random_pattern@id^0,c
   587   001C80  EC9A  F00A         	call	_random_pattern	;wreg free
   588                           
   589                           ;main.c: 630: }
   590   001C84  EF5C  F00E         	goto	l3239
   591   001C88                     l3231:
   592                           
   593                           ;main.c: 632: void __attribute__((picinterrupt(("high_priority"))))H_ISR(){
   594   001C88  0E00               	movlw	0
   595   001C8A  6E38               	movwf	(hitler@id+1)^0,c
   596   001C8C  0E04               	movlw	4
   597   001C8E  6E37               	movwf	hitler@id^0,c
   598   001C90  EC09  F000         	call	_hitler	;wreg free
   599                           
   600                           ;main.c: 633: 
   601   001C94  EF5C  F00E         	goto	l3239
   602   001C98                     l3233:
   603                           
   604                           ;main.c: 635: 
   605   001C98  0E00               	movlw	0
   606   001C9A  6E38               	movwf	(scan@id+1)^0,c
   607   001C9C  0E05               	movlw	5
   608   001C9E  6E37               	movwf	scan@id^0,c
   609   001CA0  EC69  F004         	call	_scan	;wreg free
   610                           
   611                           ;main.c: 636: 
   612   001CA4  EF5C  F00E         	goto	l3239
   613   001CA8                     l3235:
   614                           
   615                           ;main.c: 638:     if(!flag && value > 200){
   616   001CA8  0E00               	movlw	0
   617   001CAA  6E38               	movwf	(antirainfall@id+1)^0,c
   618   001CAC  0E06               	movlw	6
   619   001CAE  6E37               	movwf	antirainfall@id^0,c
   620   001CB0  ECEF  F007         	call	_antirainfall	;wreg free
   621   001CB4                     l370:
   622                           
   623                           ;main.c: 640:         mode++;
   624   001CB4  EC51  F010         	call	_clear_cube	;wreg free
   625   001CB8                     l3239:
   626   001CB8  C065  F057         	movff	_mode,??_main
   627   001CBC  C066  F058         	movff	_mode+1,??_main+1
   628                           
   629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   630                           ; Switch size 1, requested type "simple"
   631                           ; Number of cases is 1, Range of values is 0 to 0
   632                           ; switch strategies available:
   633                           ; Name         Instructions Cycles
   634                           ; simple_byte            4     3 (average)
   635                           ;	Chosen strategy is simple_byte
   636   001CC0  5058               	movf	(??_main+1)^0,w,c
   637   001CC2  0A00               	xorlw	0	; case 0
   638   001CC4  B4D8               	btfsc	status,2,c
   639   001CC6  EF67  F00E         	goto	l3313
   640   001CCA  EF5A  F00E         	goto	l370
   641   001CCE                     l3313:
   642                           
   643                           ; Switch size 1, requested type "simple"
   644                           ; Number of cases is 7, Range of values is 0 to 6
   645                           ; switch strategies available:
   646                           ; Name         Instructions Cycles
   647                           ; simple_byte           22    12 (average)
   648                           ;	Chosen strategy is simple_byte
   649   001CCE  5057               	movf	??_main^0,w,c
   650   001CD0  0A00               	xorlw	0	; case 0
   651   001CD2  B4D8               	btfsc	status,2,c
   652   001CD4  EF24  F00E         	goto	l3223
   653   001CD8  0A01               	xorlw	1	; case 1
   654   001CDA  B4D8               	btfsc	status,2,c
   655   001CDC  EF2C  F00E         	goto	l3225
   656   001CE0  0A03               	xorlw	3	; case 2
   657   001CE2  B4D8               	btfsc	status,2,c
   658   001CE4  EF34  F00E         	goto	l3227
   659   001CE8  0A01               	xorlw	1	; case 3
   660   001CEA  B4D8               	btfsc	status,2,c
   661   001CEC  EF3C  F00E         	goto	l3229
   662   001CF0  0A07               	xorlw	7	; case 4
   663   001CF2  B4D8               	btfsc	status,2,c
   664   001CF4  EF44  F00E         	goto	l3231
   665   001CF8  0A01               	xorlw	1	; case 5
   666   001CFA  B4D8               	btfsc	status,2,c
   667   001CFC  EF4C  F00E         	goto	l3233
   668   001D00  0A03               	xorlw	3	; case 6
   669   001D02  B4D8               	btfsc	status,2,c
   670   001D04  EF54  F00E         	goto	l3235
   671   001D08  EF5A  F00E         	goto	l370
   672   001D0C  EF07  F000         	goto	start
   673   001D10                     __end_of_main:
   674                           	callstack 0
   675                           
   676 ;; *************** function _speedup *****************
   677 ;; Defined at:
   678 ;;		line 509 in file "main.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  id              2   54[COMRAM] int 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  j               2   67[COMRAM] int 
   683 ;;  j               2   65[COMRAM] int 
   684 ;;  j               2   57[COMRAM] int 
   685 ;;  i               2   63[COMRAM] int 
   686 ;;  del             2   61[COMRAM] int 
   687 ;;  dcnt            2   59[COMRAM] int 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   697 ;;      Params:         2       0       0       0       0       0       0
   698 ;;      Locals:        12       0       0       0       0       0       0
   699 ;;      Temps:          1       0       0       0       0       0       0
   700 ;;      Totals:        15       0       0       0       0       0       0
   701 ;;Total ram usage:       15 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 4
   704 ;; This function calls:
   705 ;;		___awmod
   706 ;;		___wmul
   707 ;;		_clear_cube
   708 ;;		_draw_plane
   709 ;;		_set_plane
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text1
   716   000CFA                     __ptext1:
   717                           	callstack 0
   718   000CFA                     _speedup:
   719                           	callstack 26
   720   000CFA                     
   721                           ;main.c: 510:                 plane[j][0] = 0;
   722   000CFA  EC51  F010         	call	_clear_cube	;wreg free
   723   000CFE                     
   724                           ;main.c: 511:                 plane[j][4] = 0;
   725   000CFE  0E00               	movlw	0
   726   000D00  6E41               	movwf	(speedup@i+1)^0,c
   727   000D02  0E00               	movlw	0
   728   000D04  6E40               	movwf	speedup@i^0,c
   729   000D06  0E00               	movlw	0
   730   000D08  6E3D               	movwf	(speedup@dcnt+1)^0,c
   731   000D0A  0E00               	movlw	0
   732   000D0C  6E3C               	movwf	speedup@dcnt^0,c
   733   000D0E  0E00               	movlw	0
   734   000D10  6E3F               	movwf	(speedup@del+1)^0,c
   735   000D12  0E32               	movlw	50
   736   000D14  6E3E               	movwf	speedup@del^0,c
   737   000D16                     
   738                           ;main.c: 512:                 plane[0][j] = 0;
   739   000D16  0E00               	movlw	0
   740   000D18  0100               	movlb	0	; () banked
   741   000D1A  6F81               	movwf	(_plane+1)& (0+255),b
   742   000D1C  0E01               	movlw	1
   743   000D1E  6F80               	movwf	_plane& (0+255),b
   744   000D20                     
   745                           ; BSR set to: 0
   746                           ;main.c: 513:                 plane[4][j] = 0;
   747   000D20  0E00               	movlw	0
   748   000D22  6F89               	movwf	(_plane+9)& (0+255),b
   749   000D24  0E01               	movlw	1
   750   000D26  6F88               	movwf	(_plane+8)& (0+255),b
   751   000D28                     
   752                           ; BSR set to: 0
   753                           ;main.c: 514:             }
   754   000D28  0E00               	movlw	0
   755   000D2A  6FA9               	movwf	(_plane+41)& (0+255),b
   756   000D2C  0E01               	movlw	1
   757   000D2E  6FA8               	movwf	(_plane+40)& (0+255),b
   758   000D30                     
   759                           ; BSR set to: 0
   760                           ;main.c: 515:         }
   761   000D30  0E00               	movlw	0
   762   000D32  6FB1               	movwf	(_plane+49)& (0+255),b
   763   000D34  0E01               	movlw	1
   764   000D36  6FB0               	movwf	(_plane+48)& (0+255),b
   765                           
   766                           ;main.c: 516: 
   767   000D38  EFE2  F007         	goto	l3045
   768   000D3C                     l2979:
   769                           
   770                           ;main.c: 517:         set_plane(5);
   771   000D3C  5040               	movf	speedup@i^0,w,c
   772   000D3E  1041               	iorwf	(speedup@i+1)^0,w,c
   773   000D40  B4D8               	btfsc	status,2,c
   774   000D42  EFA5  F006         	goto	u3081
   775   000D46  EFA7  F006         	goto	u3080
   776   000D4A                     u3081:
   777   000D4A  EFB1  F006         	goto	l2983
   778   000D4E                     u3080:
   779   000D4E  0E04               	movlw	4
   780   000D50  1840               	xorwf	speedup@i^0,w,c
   781   000D52  1041               	iorwf	(speedup@i+1)^0,w,c
   782   000D54  A4D8               	btfss	status,2,c
   783   000D56  EFAF  F006         	goto	u3091
   784   000D5A  EFB1  F006         	goto	u3090
   785   000D5E                     u3091:
   786   000D5E  EF09  F007         	goto	l2999
   787   000D62                     u3090:
   788   000D62                     l2983:
   789                           
   790                           ;main.c: 518:         draw_plane();
   791   000D62  0E00               	movlw	0
   792   000D64  6E43               	movwf	(speedup@j+1)^0,c
   793   000D66  0E01               	movlw	1
   794   000D68  6E42               	movwf	speedup@j^0,c
   795   000D6A                     l2989:
   796                           
   797                           ;main.c: 519:         set_plane(i);
   798   000D6A  C042  F02B         	movff	speedup@j,___wmul@multiplier
   799   000D6E  C043  F02C         	movff	speedup@j+1,___wmul@multiplier+1
   800   000D72  0E00               	movlw	0
   801   000D74  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   802   000D76  0E0A               	movlw	10
   803   000D78  6E2D               	movwf	___wmul@multiplicand^0,c
   804   000D7A  EC00  F012         	call	___wmul	;wreg free
   805   000D7E  0E80               	movlw	low _plane
   806   000D80  242B               	addwf	?___wmul^0,w,c
   807   000D82  6ED9               	movwf	fsr2l,c
   808   000D84  0E00               	movlw	high _plane
   809   000D86  202C               	addwfc	(?___wmul+1)^0,w,c
   810   000D88  6EDA               	movwf	fsr2h,c
   811   000D8A  0E01               	movlw	1
   812   000D8C  6EDE               	movwf	postinc2,c
   813   000D8E  0E00               	movlw	0
   814   000D90  6EDD               	movwf	postdec2,c
   815                           
   816                           ;main.c: 520:         for(int j=0;j<del && mode == id;j++)_delay((unsigned long)((1)*(40
      +                          00000/4000.0)));
   817   000D92  C042  F02B         	movff	speedup@j,___wmul@multiplier
   818   000D96  C043  F02C         	movff	speedup@j+1,___wmul@multiplier+1
   819   000D9A  0E00               	movlw	0
   820   000D9C  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   821   000D9E  0E0A               	movlw	10
   822   000DA0  6E2D               	movwf	___wmul@multiplicand^0,c
   823   000DA2  EC00  F012         	call	___wmul	;wreg free
   824   000DA6  0E88               	movlw	low (_plane+8)
   825   000DA8  242B               	addwf	?___wmul^0,w,c
   826   000DAA  6ED9               	movwf	fsr2l,c
   827   000DAC  0E00               	movlw	high (_plane+8)
   828   000DAE  202C               	addwfc	(?___wmul+1)^0,w,c
   829   000DB0  6EDA               	movwf	fsr2h,c
   830   000DB2  0E01               	movlw	1
   831   000DB4  6EDE               	movwf	postinc2,c
   832   000DB6  0E00               	movlw	0
   833   000DB8  6EDD               	movwf	postdec2,c
   834   000DBA                     
   835                           ;main.c: 521:         dcnt++;
   836   000DBA  90D8               	bcf	status,0,c
   837   000DBC  3442               	rlcf	speedup@j^0,w,c
   838   000DBE  6ED9               	movwf	fsr2l,c
   839   000DC0  3443               	rlcf	(speedup@j+1)^0,w,c
   840   000DC2  6EDA               	movwf	fsr2h,c
   841   000DC4  0E80               	movlw	low _plane
   842   000DC6  26D9               	addwf	fsr2l,f,c
   843   000DC8  0E00               	movlw	high _plane
   844   000DCA  22DA               	addwfc	fsr2h,f,c
   845   000DCC  0E01               	movlw	1
   846   000DCE  6EDE               	movwf	postinc2,c
   847   000DD0  0E00               	movlw	0
   848   000DD2  6EDD               	movwf	postdec2,c
   849   000DD4                     
   850                           ;main.c: 522:         if(del>10)del-=2;
   851   000DD4  90D8               	bcf	status,0,c
   852   000DD6  3442               	rlcf	speedup@j^0,w,c
   853   000DD8  6ED9               	movwf	fsr2l,c
   854   000DDA  3443               	rlcf	(speedup@j+1)^0,w,c
   855   000DDC  6EDA               	movwf	fsr2h,c
   856   000DDE  0EA8               	movlw	low (_plane+40)
   857   000DE0  26D9               	addwf	fsr2l,f,c
   858   000DE2  0E00               	movlw	high (_plane+40)
   859   000DE4  22DA               	addwfc	fsr2h,f,c
   860   000DE6  0E01               	movlw	1
   861   000DE8  6EDE               	movwf	postinc2,c
   862   000DEA  0E00               	movlw	0
   863   000DEC  6EDD               	movwf	postdec2,c
   864   000DEE                     
   865                           ;main.c: 523:         else if(del>0 && dcnt == 10)del-=1;
   866   000DEE  4A42               	infsnz	speedup@j^0,f,c
   867   000DF0  2A43               	incf	(speedup@j+1)^0,f,c
   868   000DF2  BE43               	btfsc	(speedup@j+1)^0,7,c
   869   000DF4  EF05  F007         	goto	u3101
   870   000DF8  5043               	movf	(speedup@j+1)^0,w,c
   871   000DFA  E109               	bnz	u3100
   872   000DFC  0E04               	movlw	4
   873   000DFE  5C42               	subwf	speedup@j^0,w,c
   874   000E00  A0D8               	btfss	status,0,c
   875   000E02  EF05  F007         	goto	u3101
   876   000E06  EF07  F007         	goto	u3100
   877   000E0A                     u3101:
   878   000E0A  EFB5  F006         	goto	l2989
   879   000E0E                     u3100:
   880   000E0E  EF5F  F007         	goto	l3015
   881   000E12                     l2999:
   882                           
   883                           ;main.c: 525:         i++;
   884   000E12  0E00               	movlw	0
   885   000E14  6E45               	movwf	(speedup@j_808+1)^0,c
   886   000E16  0E01               	movlw	1
   887   000E18  6E44               	movwf	speedup@j_808^0,c
   888   000E1A                     l3005:
   889                           
   890                           ;main.c: 526:         i%=5;
   891   000E1A  C044  F02B         	movff	speedup@j_808,___wmul@multiplier
   892   000E1E  C045  F02C         	movff	speedup@j_808+1,___wmul@multiplier+1
   893   000E22  0E00               	movlw	0
   894   000E24  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   895   000E26  0E0A               	movlw	10
   896   000E28  6E2D               	movwf	___wmul@multiplicand^0,c
   897   000E2A  EC00  F012         	call	___wmul	;wreg free
   898   000E2E  0E80               	movlw	low _plane
   899   000E30  242B               	addwf	?___wmul^0,w,c
   900   000E32  6ED9               	movwf	fsr2l,c
   901   000E34  0E00               	movlw	high _plane
   902   000E36  202C               	addwfc	(?___wmul+1)^0,w,c
   903   000E38  6EDA               	movwf	fsr2h,c
   904   000E3A  0E00               	movlw	0
   905   000E3C  6EDE               	movwf	postinc2,c
   906   000E3E  0E00               	movlw	0
   907   000E40  6EDD               	movwf	postdec2,c
   908                           
   909                           ;main.c: 527:     }
   910   000E42  C044  F02B         	movff	speedup@j_808,___wmul@multiplier
   911   000E46  C045  F02C         	movff	speedup@j_808+1,___wmul@multiplier+1
   912   000E4A  0E00               	movlw	0
   913   000E4C  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
   914   000E4E  0E0A               	movlw	10
   915   000E50  6E2D               	movwf	___wmul@multiplicand^0,c
   916   000E52  EC00  F012         	call	___wmul	;wreg free
   917   000E56  0E88               	movlw	low (_plane+8)
   918   000E58  242B               	addwf	?___wmul^0,w,c
   919   000E5A  6ED9               	movwf	fsr2l,c
   920   000E5C  0E00               	movlw	high (_plane+8)
   921   000E5E  202C               	addwfc	(?___wmul+1)^0,w,c
   922   000E60  6EDA               	movwf	fsr2h,c
   923   000E62  0E00               	movlw	0
   924   000E64  6EDE               	movwf	postinc2,c
   925   000E66  0E00               	movlw	0
   926   000E68  6EDD               	movwf	postdec2,c
   927   000E6A                     
   928                           ;main.c: 528: }
   929   000E6A  90D8               	bcf	status,0,c
   930   000E6C  3444               	rlcf	speedup@j_808^0,w,c
   931   000E6E  6ED9               	movwf	fsr2l,c
   932   000E70  3445               	rlcf	(speedup@j_808+1)^0,w,c
   933   000E72  6EDA               	movwf	fsr2h,c
   934   000E74  0E80               	movlw	low _plane
   935   000E76  26D9               	addwf	fsr2l,f,c
   936   000E78  0E00               	movlw	high _plane
   937   000E7A  22DA               	addwfc	fsr2h,f,c
   938   000E7C  0E00               	movlw	0
   939   000E7E  6EDE               	movwf	postinc2,c
   940   000E80  0E00               	movlw	0
   941   000E82  6EDD               	movwf	postdec2,c
   942   000E84                     
   943                           ;main.c: 529: 
   944   000E84  90D8               	bcf	status,0,c
   945   000E86  3444               	rlcf	speedup@j_808^0,w,c
   946   000E88  6ED9               	movwf	fsr2l,c
   947   000E8A  3445               	rlcf	(speedup@j_808+1)^0,w,c
   948   000E8C  6EDA               	movwf	fsr2h,c
   949   000E8E  0EA8               	movlw	low (_plane+40)
   950   000E90  26D9               	addwf	fsr2l,f,c
   951   000E92  0E00               	movlw	high (_plane+40)
   952   000E94  22DA               	addwfc	fsr2h,f,c
   953   000E96  0E00               	movlw	0
   954   000E98  6EDE               	movwf	postinc2,c
   955   000E9A  0E00               	movlw	0
   956   000E9C  6EDD               	movwf	postdec2,c
   957   000E9E                     
   958                           ;main.c: 530: void cubeidle(int id){
   959   000E9E  4A44               	infsnz	speedup@j_808^0,f,c
   960   000EA0  2A45               	incf	(speedup@j_808+1)^0,f,c
   961   000EA2  BE45               	btfsc	(speedup@j_808+1)^0,7,c
   962   000EA4  EF5D  F007         	goto	u3111
   963   000EA8  5045               	movf	(speedup@j_808+1)^0,w,c
   964   000EAA  E109               	bnz	u3110
   965   000EAC  0E04               	movlw	4
   966   000EAE  5C44               	subwf	speedup@j_808^0,w,c
   967   000EB0  A0D8               	btfss	status,0,c
   968   000EB2  EF5D  F007         	goto	u3111
   969   000EB6  EF5F  F007         	goto	u3110
   970   000EBA                     u3111:
   971   000EBA  EF0D  F007         	goto	l3005
   972   000EBE                     u3110:
   973   000EBE                     l3015:
   974                           
   975                           ;main.c: 533:     while(mode == id){
   976   000EBE  0E00               	movlw	0
   977   000EC0  6E2C               	movwf	(set_plane@a+1)^0,c
   978   000EC2  0E05               	movlw	5
   979   000EC4  6E2B               	movwf	set_plane@a^0,c
   980   000EC6  EC20  F012         	call	_set_plane	;wreg free
   981   000ECA                     
   982                           ;main.c: 534:         for(int i=1;i<125 && mode == id;i++){
   983   000ECA  EC89  F00D         	call	_draw_plane	;wreg free
   984   000ECE                     
   985                           ;main.c: 535:             lighton(i,i-1);
   986   000ECE  C040  F02B         	movff	speedup@i,set_plane@a
   987   000ED2  C041  F02C         	movff	speedup@i+1,set_plane@a+1
   988   000ED6  EC20  F012         	call	_set_plane	;wreg free
   989   000EDA                     
   990                           ;main.c: 536:             _delay((unsigned long)((10)*(4000000/4000.0)));
   991   000EDA  0E00               	movlw	0
   992   000EDC  6E3B               	movwf	(speedup@j_809+1)^0,c
   993   000EDE  0E00               	movlw	0
   994   000EE0  6E3A               	movwf	speedup@j_809^0,c
   995   000EE2  EF79  F007         	goto	l321
   996   000EE6                     l3023:
   997   000EE6  0EC8               	movlw	200
   998   000EE8                     u3377:
   999   000EE8  D000               	nop2	
  1000   000EEA  2EE8               	decfsz	wreg,f,c
  1001   000EEC  D7FD               	bra	u3377
  1002   000EEE  4A3A               	infsnz	speedup@j_809^0,f,c
  1003   000EF0  2A3B               	incf	(speedup@j_809+1)^0,f,c
  1004   000EF2                     l321:
  1005   000EF2  503E               	movf	speedup@del^0,w,c
  1006   000EF4  5C3A               	subwf	speedup@j_809^0,w,c
  1007   000EF6  503B               	movf	(speedup@j_809+1)^0,w,c
  1008   000EF8  0A80               	xorlw	128
  1009   000EFA  6E39               	movwf	??_speedup^0,c
  1010   000EFC  503F               	movf	(speedup@del+1)^0,w,c
  1011   000EFE  0A80               	xorlw	128
  1012   000F00  5839               	subwfb	??_speedup^0,w,c
  1013   000F02  B0D8               	btfsc	status,0,c
  1014   000F04  EF86  F007         	goto	u3121
  1015   000F08  EF88  F007         	goto	u3120
  1016   000F0C                     u3121:
  1017   000F0C  EF94  F007         	goto	l3029
  1018   000F10                     u3120:
  1019   000F10  5037               	movf	speedup@id^0,w,c
  1020   000F12  1865               	xorwf	_mode^0,w,c
  1021   000F14  E109               	bnz	u3130
  1022   000F16  5038               	movf	(speedup@id+1)^0,w,c
  1023   000F18  1866               	xorwf	(_mode+1)^0,w,c
  1024   000F1A  B4D8               	btfsc	status,2,c
  1025   000F1C  EF92  F007         	goto	u3131
  1026   000F20  EF94  F007         	goto	u3130
  1027   000F24                     u3131:
  1028   000F24  EF73  F007         	goto	l3023
  1029   000F28                     u3130:
  1030   000F28                     l3029:
  1031                           
  1032                           ;main.c: 537:         }
  1033   000F28  4A3C               	infsnz	speedup@dcnt^0,f,c
  1034   000F2A  2A3D               	incf	(speedup@dcnt+1)^0,f,c
  1035   000F2C                     
  1036                           ;main.c: 538:         lighton(0,124);
  1037   000F2C  BE3F               	btfsc	(speedup@del+1)^0,7,c
  1038   000F2E  EFA2  F007         	goto	u3141
  1039   000F32  503F               	movf	(speedup@del+1)^0,w,c
  1040   000F34  E109               	bnz	u3140
  1041   000F36  0E0B               	movlw	11
  1042   000F38  5C3E               	subwf	speedup@del^0,w,c
  1043   000F3A  A0D8               	btfss	status,0,c
  1044   000F3C  EFA2  F007         	goto	u3141
  1045   000F40  EFA4  F007         	goto	u3140
  1046   000F44                     u3141:
  1047   000F44  EFAA  F007         	goto	l3035
  1048   000F48                     u3140:
  1049   000F48  0EFE               	movlw	254
  1050   000F4A  263E               	addwf	speedup@del^0,f,c
  1051   000F4C  0EFF               	movlw	255
  1052   000F4E  223F               	addwfc	(speedup@del+1)^0,f,c
  1053   000F50  EFC4  F007         	goto	l3041
  1054   000F54                     l3035:
  1055   000F54  BE3F               	btfsc	(speedup@del+1)^0,7,c
  1056   000F56  EFB5  F007         	goto	u3151
  1057   000F5A  503F               	movf	(speedup@del+1)^0,w,c
  1058   000F5C  E108               	bnz	u3150
  1059   000F5E  043E               	decf	speedup@del^0,w,c
  1060   000F60  A0D8               	btfss	status,0,c
  1061   000F62  EFB5  F007         	goto	u3151
  1062   000F66  EFB7  F007         	goto	u3150
  1063   000F6A                     u3151:
  1064   000F6A  EFC4  F007         	goto	l3041
  1065   000F6E                     u3150:
  1066   000F6E  0E0A               	movlw	10
  1067   000F70  183C               	xorwf	speedup@dcnt^0,w,c
  1068   000F72  103D               	iorwf	(speedup@dcnt+1)^0,w,c
  1069   000F74  A4D8               	btfss	status,2,c
  1070   000F76  EFBF  F007         	goto	u3161
  1071   000F7A  EFC1  F007         	goto	u3160
  1072   000F7E                     u3161:
  1073   000F7E  EFC4  F007         	goto	l3041
  1074   000F82                     u3160:
  1075   000F82  063E               	decf	speedup@del^0,f,c
  1076   000F84  A0D8               	btfss	status,0,c
  1077   000F86  063F               	decf	(speedup@del+1)^0,f,c
  1078   000F88                     l3041:
  1079                           
  1080                           ;main.c: 540:     }
  1081   000F88  C03C  F01D         	movff	speedup@dcnt,___awmod@dividend
  1082   000F8C  C03D  F01E         	movff	speedup@dcnt+1,___awmod@dividend+1
  1083   000F90  0E00               	movlw	0
  1084   000F92  6E20               	movwf	(___awmod@divisor+1)^0,c
  1085   000F94  0E0A               	movlw	10
  1086   000F96  6E1F               	movwf	___awmod@divisor^0,c
  1087   000F98  EC4A  F00F         	call	___awmod	;wreg free
  1088   000F9C  C01D  F03C         	movff	?___awmod,speedup@dcnt
  1089   000FA0  C01E  F03D         	movff	?___awmod+1,speedup@dcnt+1
  1090   000FA4                     
  1091                           ;main.c: 541: 
  1092   000FA4  4A40               	infsnz	speedup@i^0,f,c
  1093   000FA6  2A41               	incf	(speedup@i+1)^0,f,c
  1094                           
  1095                           ;main.c: 542: 
  1096   000FA8  C040  F01D         	movff	speedup@i,___awmod@dividend
  1097   000FAC  C041  F01E         	movff	speedup@i+1,___awmod@dividend+1
  1098   000FB0  0E00               	movlw	0
  1099   000FB2  6E20               	movwf	(___awmod@divisor+1)^0,c
  1100   000FB4  0E05               	movlw	5
  1101   000FB6  6E1F               	movwf	___awmod@divisor^0,c
  1102   000FB8  EC4A  F00F         	call	___awmod	;wreg free
  1103   000FBC  C01D  F040         	movff	?___awmod,speedup@i
  1104   000FC0  C01E  F041         	movff	?___awmod+1,speedup@i+1
  1105   000FC4                     l3045:
  1106                           
  1107                           ;main.c: 516: 
  1108   000FC4  5037               	movf	speedup@id^0,w,c
  1109   000FC6  1865               	xorwf	_mode^0,w,c
  1110   000FC8  E109               	bnz	u3170
  1111   000FCA  5038               	movf	(speedup@id+1)^0,w,c
  1112   000FCC  1866               	xorwf	(_mode+1)^0,w,c
  1113   000FCE  B4D8               	btfsc	status,2,c
  1114   000FD0  EFEC  F007         	goto	u3171
  1115   000FD4  EFEE  F007         	goto	u3170
  1116   000FD8                     u3171:
  1117   000FD8  EF9E  F006         	goto	l2979
  1118   000FDC                     u3170:
  1119   000FDC  0012               	return		;funcret
  1120   000FDE                     __end_of_speedup:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _scan *****************
  1124 ;; Defined at:
  1125 ;;		line 452 in file "main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  id              2   54[COMRAM] int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  j               2   84[COMRAM] int 
  1130 ;;  j               2   80[COMRAM] int 
  1131 ;;  j               2   76[COMRAM] int 
  1132 ;;  j               2   72[COMRAM] int 
  1133 ;;  j               2   62[COMRAM] int 
  1134 ;;  i               2   82[COMRAM] int 
  1135 ;;  i               2   78[COMRAM] int 
  1136 ;;  i               2   74[COMRAM] int 
  1137 ;;  i               2   70[COMRAM] int 
  1138 ;;  i               2   68[COMRAM] int 
  1139 ;;  i               2   66[COMRAM] int 
  1140 ;;  i               2   64[COMRAM] int 
  1141 ;;  i               2   60[COMRAM] int 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         2       0       0       0       0       0       0
  1152 ;;      Locals:        26       0       0       0       0       0       0
  1153 ;;      Temps:          4       0       0       0       0       0       0
  1154 ;;      Totals:        32       0       0       0       0       0       0
  1155 ;;Total ram usage:       32 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 4
  1158 ;; This function calls:
  1159 ;;		___wmul
  1160 ;;		_clear_cube
  1161 ;;		_clear_plane
  1162 ;;		_draw_plane
  1163 ;;		_plane_on
  1164 ;;		_set_plane
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text2
  1171   0008D2                     __ptext2:
  1172                           	callstack 0
  1173   0008D2                     _scan:
  1174                           	callstack 26
  1175   0008D2                     
  1176                           ;main.c: 453:         }
  1177   0008D2  EC51  F010         	call	_clear_cube	;wreg free
  1178                           
  1179                           ;main.c: 455:             plane_on(i);
  1180   0008D6  EF70  F006         	goto	l2961
  1181   0008DA                     l2787:
  1182                           
  1183                           ;main.c: 456: 
  1184   0008DA  0E00               	movlw	0
  1185   0008DC  6E3E               	movwf	(scan@i+1)^0,c
  1186   0008DE  0E00               	movlw	0
  1187   0008E0  6E3D               	movwf	scan@i^0,c
  1188   0008E2                     l2793:
  1189                           
  1190                           ;main.c: 457:         for(int i = 0; i < 5; i++){
  1191   0008E2  0E00               	movlw	0
  1192   0008E4  6E40               	movwf	(scan@j+1)^0,c
  1193   0008E6  0E00               	movlw	0
  1194   0008E8  6E3F               	movwf	scan@j^0,c
  1195   0008EA                     l2799:
  1196                           
  1197                           ;main.c: 458:             clear_plane();
  1198   0008EA  C03D  F02B         	movff	scan@i,___wmul@multiplier
  1199   0008EE  C03E  F02C         	movff	scan@i+1,___wmul@multiplier+1
  1200   0008F2  0E00               	movlw	0
  1201   0008F4  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1202   0008F6  0E0A               	movlw	10
  1203   0008F8  6E2D               	movwf	___wmul@multiplicand^0,c
  1204   0008FA  EC00  F012         	call	___wmul	;wreg free
  1205   0008FE  0E80               	movlw	low _plane
  1206   000900  242B               	addwf	?___wmul^0,w,c
  1207   000902  6E39               	movwf	??_scan^0,c
  1208   000904  0E00               	movlw	high _plane
  1209   000906  202C               	addwfc	(?___wmul+1)^0,w,c
  1210   000908  6E3A               	movwf	(??_scan+1)^0,c
  1211   00090A  90D8               	bcf	status,0,c
  1212   00090C  343F               	rlcf	scan@j^0,w,c
  1213   00090E  6ED9               	movwf	fsr2l,c
  1214   000910  3440               	rlcf	(scan@j+1)^0,w,c
  1215   000912  6EDA               	movwf	fsr2h,c
  1216   000914  5039               	movf	??_scan^0,w,c
  1217   000916  26D9               	addwf	fsr2l,f,c
  1218   000918  503A               	movf	(??_scan+1)^0,w,c
  1219   00091A  22DA               	addwfc	fsr2h,f,c
  1220   00091C  0E01               	movlw	1
  1221   00091E  6EDE               	movwf	postinc2,c
  1222   000920  0E00               	movlw	0
  1223   000922  6EDD               	movwf	postdec2,c
  1224   000924  4A3F               	infsnz	scan@j^0,f,c
  1225   000926  2A40               	incf	(scan@j+1)^0,f,c
  1226   000928  BE40               	btfsc	(scan@j+1)^0,7,c
  1227   00092A  EFA0  F004         	goto	u2941
  1228   00092E  5040               	movf	(scan@j+1)^0,w,c
  1229   000930  E109               	bnz	u2940
  1230   000932  0E05               	movlw	5
  1231   000934  5C3F               	subwf	scan@j^0,w,c
  1232   000936  A0D8               	btfss	status,0,c
  1233   000938  EFA0  F004         	goto	u2941
  1234   00093C  EFA2  F004         	goto	u2940
  1235   000940                     u2941:
  1236   000940  EF75  F004         	goto	l2799
  1237   000944                     u2940:
  1238   000944  4A3D               	infsnz	scan@i^0,f,c
  1239   000946  2A3E               	incf	(scan@i+1)^0,f,c
  1240   000948  BE3E               	btfsc	(scan@i+1)^0,7,c
  1241   00094A  EFB0  F004         	goto	u2951
  1242   00094E  503E               	movf	(scan@i+1)^0,w,c
  1243   000950  E109               	bnz	u2950
  1244   000952  0E05               	movlw	5
  1245   000954  5C3D               	subwf	scan@i^0,w,c
  1246   000956  A0D8               	btfss	status,0,c
  1247   000958  EFB0  F004         	goto	u2951
  1248   00095C  EFB2  F004         	goto	u2950
  1249   000960                     u2951:
  1250   000960  EF71  F004         	goto	l2793
  1251   000964                     u2950:
  1252   000964                     
  1253                           ;main.c: 460:                 plane[i][j] = 1;
  1254   000964  0E00               	movlw	0
  1255   000966  6E42               	movwf	(scan@i_791+1)^0,c
  1256   000968  0E00               	movlw	0
  1257   00096A  6E41               	movwf	scan@i_791^0,c
  1258   00096C                     l2815:
  1259                           
  1260                           ;main.c: 461:             }
  1261   00096C  C041  F02B         	movff	scan@i_791,set_plane@a
  1262   000970  C042  F02C         	movff	scan@i_791+1,set_plane@a+1
  1263   000974  EC20  F012         	call	_set_plane	;wreg free
  1264   000978                     
  1265                           ;main.c: 462:             draw_plane();
  1266   000978  EC89  F00D         	call	_draw_plane	;wreg free
  1267   00097C                     
  1268                           ;main.c: 463:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1269   00097C  0E0B               	movlw	11
  1270   00097E  6E39               	movwf	??_scan^0,c
  1271   000980  0E62               	movlw	98
  1272   000982                     u3387:
  1273   000982  2EE8               	decfsz	wreg,f,c
  1274   000984  D7FE               	bra	u3387
  1275   000986  2E39               	decfsz	??_scan^0,f,c
  1276   000988  D7FC               	bra	u3387
  1277   00098A  D000               	nop2	
  1278                           
  1279                           ;main.c: 464:         }
  1280   00098C  4A41               	infsnz	scan@i_791^0,f,c
  1281   00098E  2A42               	incf	(scan@i_791+1)^0,f,c
  1282   000990  BE42               	btfsc	(scan@i_791+1)^0,7,c
  1283   000992  EFD4  F004         	goto	u2961
  1284   000996  5042               	movf	(scan@i_791+1)^0,w,c
  1285   000998  E109               	bnz	u2960
  1286   00099A  0E05               	movlw	5
  1287   00099C  5C41               	subwf	scan@i_791^0,w,c
  1288   00099E  A0D8               	btfss	status,0,c
  1289   0009A0  EFD4  F004         	goto	u2961
  1290   0009A4  EFD6  F004         	goto	u2960
  1291   0009A8                     u2961:
  1292   0009A8  EFB6  F004         	goto	l2815
  1293   0009AC                     u2960:
  1294   0009AC                     
  1295                           ;main.c: 465:         for(int i = 0; i < 4; i++){
  1296   0009AC  0E00               	movlw	0
  1297   0009AE  6E44               	movwf	(scan@i_792+1)^0,c
  1298   0009B0  0E00               	movlw	0
  1299   0009B2  6E43               	movwf	scan@i_792^0,c
  1300   0009B4                     l2829:
  1301                           
  1302                           ;main.c: 466:             clear_plane();
  1303   0009B4  5043               	movf	scan@i_792^0,w,c
  1304   0009B6  0804               	sublw	4
  1305   0009B8  6E2B               	movwf	set_plane@a^0,c
  1306   0009BA  5044               	movf	(scan@i_792+1)^0,w,c
  1307   0009BC  A0D8               	btfss	status,0,c
  1308   0009BE  2AE8               	incf	wreg,f,c
  1309   0009C0  0800               	sublw	0
  1310   0009C2  6E2C               	movwf	(set_plane@a+1)^0,c
  1311   0009C4  EC20  F012         	call	_set_plane	;wreg free
  1312   0009C8                     
  1313                           ;main.c: 467:             for(int j = 0; j < 5; j++){
  1314   0009C8  EC89  F00D         	call	_draw_plane	;wreg free
  1315   0009CC                     
  1316                           ;main.c: 468:                 plane[4-i][j] = 1;
  1317   0009CC  0E0B               	movlw	11
  1318   0009CE  6E39               	movwf	??_scan^0,c
  1319   0009D0  0E62               	movlw	98
  1320   0009D2                     u3397:
  1321   0009D2  2EE8               	decfsz	wreg,f,c
  1322   0009D4  D7FE               	bra	u3397
  1323   0009D6  2E39               	decfsz	??_scan^0,f,c
  1324   0009D8  D7FC               	bra	u3397
  1325   0009DA  D000               	nop2	
  1326                           
  1327                           ;main.c: 469:             }
  1328   0009DC  4A43               	infsnz	scan@i_792^0,f,c
  1329   0009DE  2A44               	incf	(scan@i_792+1)^0,f,c
  1330   0009E0  BE44               	btfsc	(scan@i_792+1)^0,7,c
  1331   0009E2  EFFC  F004         	goto	u2971
  1332   0009E6  5044               	movf	(scan@i_792+1)^0,w,c
  1333   0009E8  E109               	bnz	u2970
  1334   0009EA  0E04               	movlw	4
  1335   0009EC  5C43               	subwf	scan@i_792^0,w,c
  1336   0009EE  A0D8               	btfss	status,0,c
  1337   0009F0  EFFC  F004         	goto	u2971
  1338   0009F4  EFFE  F004         	goto	u2970
  1339   0009F8                     u2971:
  1340   0009F8  EFDA  F004         	goto	l2829
  1341   0009FC                     u2970:
  1342   0009FC                     
  1343                           ;main.c: 470:             draw_plane();
  1344   0009FC  0E00               	movlw	0
  1345   0009FE  6E46               	movwf	(scan@i_793+1)^0,c
  1346   000A00  0E00               	movlw	0
  1347   000A02  6E45               	movwf	scan@i_793^0,c
  1348   000A04                     l2843:
  1349                           
  1350                           ;main.c: 471:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1351   000A04  C045  F00B         	movff	scan@i_793,plane_on@a
  1352   000A08  C046  F00C         	movff	scan@i_793+1,plane_on@a+1
  1353   000A0C  ECEE  F010         	call	_plane_on	;wreg free
  1354   000A10  4A45               	infsnz	scan@i_793^0,f,c
  1355   000A12  2A46               	incf	(scan@i_793+1)^0,f,c
  1356   000A14  BE46               	btfsc	(scan@i_793+1)^0,7,c
  1357   000A16  EF16  F005         	goto	u2981
  1358   000A1A  5046               	movf	(scan@i_793+1)^0,w,c
  1359   000A1C  E109               	bnz	u2980
  1360   000A1E  0E05               	movlw	5
  1361   000A20  5C45               	subwf	scan@i_793^0,w,c
  1362   000A22  A0D8               	btfss	status,0,c
  1363   000A24  EF16  F005         	goto	u2981
  1364   000A28  EF18  F005         	goto	u2980
  1365   000A2C                     u2981:
  1366   000A2C  EF02  F005         	goto	l2843
  1367   000A30                     u2980:
  1368   000A30                     
  1369                           ;main.c: 473: 
  1370   000A30  0E00               	movlw	0
  1371   000A32  6E48               	movwf	(scan@i_794+1)^0,c
  1372   000A34  0E00               	movlw	0
  1373   000A36  6E47               	movwf	scan@i_794^0,c
  1374   000A38                     l2855:
  1375                           
  1376                           ;main.c: 474:         for(int i = 0; i < 5; i++){
  1377   000A38  ECA6  F010         	call	_clear_plane	;wreg free
  1378   000A3C                     
  1379                           ;main.c: 475:             clear_plane();
  1380   000A3C  0E00               	movlw	0
  1381   000A3E  6E4A               	movwf	(scan@j_795+1)^0,c
  1382   000A40  0E00               	movlw	0
  1383   000A42  6E49               	movwf	scan@j_795^0,c
  1384   000A44                     l2863:
  1385                           
  1386                           ;main.c: 476:             for(int j = 0; j < 5; j++){
  1387   000A44  C047  F02B         	movff	scan@i_794,___wmul@multiplier
  1388   000A48  C048  F02C         	movff	scan@i_794+1,___wmul@multiplier+1
  1389   000A4C  0E00               	movlw	0
  1390   000A4E  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1391   000A50  0E0A               	movlw	10
  1392   000A52  6E2D               	movwf	___wmul@multiplicand^0,c
  1393   000A54  EC00  F012         	call	___wmul	;wreg free
  1394   000A58  0E80               	movlw	low _plane
  1395   000A5A  242B               	addwf	?___wmul^0,w,c
  1396   000A5C  6E39               	movwf	??_scan^0,c
  1397   000A5E  0E00               	movlw	high _plane
  1398   000A60  202C               	addwfc	(?___wmul+1)^0,w,c
  1399   000A62  6E3A               	movwf	(??_scan+1)^0,c
  1400   000A64  90D8               	bcf	status,0,c
  1401   000A66  3449               	rlcf	scan@j_795^0,w,c
  1402   000A68  6ED9               	movwf	fsr2l,c
  1403   000A6A  344A               	rlcf	(scan@j_795+1)^0,w,c
  1404   000A6C  6EDA               	movwf	fsr2h,c
  1405   000A6E  5039               	movf	??_scan^0,w,c
  1406   000A70  26D9               	addwf	fsr2l,f,c
  1407   000A72  503A               	movf	(??_scan+1)^0,w,c
  1408   000A74  22DA               	addwfc	fsr2h,f,c
  1409   000A76  0E01               	movlw	1
  1410   000A78  6EDE               	movwf	postinc2,c
  1411   000A7A  0E00               	movlw	0
  1412   000A7C  6EDD               	movwf	postdec2,c
  1413   000A7E                     
  1414                           ;main.c: 477:                 plane[j][i] = 1;
  1415   000A7E  4A49               	infsnz	scan@j_795^0,f,c
  1416   000A80  2A4A               	incf	(scan@j_795+1)^0,f,c
  1417   000A82  BE4A               	btfsc	(scan@j_795+1)^0,7,c
  1418   000A84  EF4D  F005         	goto	u2991
  1419   000A88  504A               	movf	(scan@j_795+1)^0,w,c
  1420   000A8A  E109               	bnz	u2990
  1421   000A8C  0E05               	movlw	5
  1422   000A8E  5C49               	subwf	scan@j_795^0,w,c
  1423   000A90  A0D8               	btfss	status,0,c
  1424   000A92  EF4D  F005         	goto	u2991
  1425   000A96  EF4F  F005         	goto	u2990
  1426   000A9A                     u2991:
  1427   000A9A  EF22  F005         	goto	l2863
  1428   000A9E                     u2990:
  1429   000A9E                     
  1430                           ;main.c: 478:             }
  1431   000A9E  EC89  F00D         	call	_draw_plane	;wreg free
  1432   000AA2                     
  1433                           ;main.c: 479:             draw_plane();
  1434   000AA2  0E0B               	movlw	11
  1435   000AA4  6E39               	movwf	??_scan^0,c
  1436   000AA6  0E62               	movlw	98
  1437   000AA8                     u3407:
  1438   000AA8  2EE8               	decfsz	wreg,f,c
  1439   000AAA  D7FE               	bra	u3407
  1440   000AAC  2E39               	decfsz	??_scan^0,f,c
  1441   000AAE  D7FC               	bra	u3407
  1442   000AB0  D000               	nop2	
  1443   000AB2                     
  1444                           ;main.c: 480:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1445   000AB2  4A47               	infsnz	scan@i_794^0,f,c
  1446   000AB4  2A48               	incf	(scan@i_794+1)^0,f,c
  1447   000AB6  BE48               	btfsc	(scan@i_794+1)^0,7,c
  1448   000AB8  EF67  F005         	goto	u3001
  1449   000ABC  5048               	movf	(scan@i_794+1)^0,w,c
  1450   000ABE  E109               	bnz	u3000
  1451   000AC0  0E05               	movlw	5
  1452   000AC2  5C47               	subwf	scan@i_794^0,w,c
  1453   000AC4  A0D8               	btfss	status,0,c
  1454   000AC6  EF67  F005         	goto	u3001
  1455   000ACA  EF69  F005         	goto	u3000
  1456   000ACE                     u3001:
  1457   000ACE  EF1C  F005         	goto	l2855
  1458   000AD2                     u3000:
  1459   000AD2                     
  1460                           ;main.c: 481:         }
  1461   000AD2  0E00               	movlw	0
  1462   000AD4  6E4C               	movwf	(scan@i_796+1)^0,c
  1463   000AD6  0E00               	movlw	0
  1464   000AD8  6E4B               	movwf	scan@i_796^0,c
  1465   000ADA                     l2883:
  1466                           
  1467                           ;main.c: 482:         for(int i = 0; i < 4; i++){
  1468   000ADA  ECA6  F010         	call	_clear_plane	;wreg free
  1469   000ADE                     
  1470                           ;main.c: 483:             clear_plane();
  1471   000ADE  0E00               	movlw	0
  1472   000AE0  6E4E               	movwf	(scan@j_797+1)^0,c
  1473   000AE2  0E00               	movlw	0
  1474   000AE4  6E4D               	movwf	scan@j_797^0,c
  1475   000AE6                     l2891:
  1476                           
  1477                           ;main.c: 484:             for(int j = 0; j < 5; j++){
  1478   000AE6  C04B  F02B         	movff	scan@i_796,___wmul@multiplier
  1479   000AEA  C04C  F02C         	movff	scan@i_796+1,___wmul@multiplier+1
  1480   000AEE  0EFF               	movlw	255
  1481   000AF0  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1482   000AF2  0EF6               	movlw	246
  1483   000AF4  6E2D               	movwf	___wmul@multiplicand^0,c
  1484   000AF6  EC00  F012         	call	___wmul	;wreg free
  1485   000AFA  C04D  F039         	movff	scan@j_797,??_scan
  1486   000AFE  C04E  F03A         	movff	scan@j_797+1,??_scan+1
  1487   000B02  90D8               	bcf	status,0,c
  1488   000B04  3639               	rlcf	??_scan^0,f,c
  1489   000B06  363A               	rlcf	(??_scan+1)^0,f,c
  1490   000B08  0EA8               	movlw	low (_plane+40)
  1491   000B0A  2439               	addwf	??_scan^0,w,c
  1492   000B0C  6E3B               	movwf	(??_scan+2)^0,c
  1493   000B0E  0E00               	movlw	high (_plane+40)
  1494   000B10  203A               	addwfc	(??_scan+1)^0,w,c
  1495   000B12  6E3C               	movwf	(??_scan+3)^0,c
  1496   000B14  502B               	movf	?___wmul^0,w,c
  1497   000B16  243B               	addwf	(??_scan+2)^0,w,c
  1498   000B18  6ED9               	movwf	fsr2l,c
  1499   000B1A  502C               	movf	(?___wmul+1)^0,w,c
  1500   000B1C  203C               	addwfc	(??_scan+3)^0,w,c
  1501   000B1E  6EDA               	movwf	fsr2h,c
  1502   000B20  0E01               	movlw	1
  1503   000B22  6EDE               	movwf	postinc2,c
  1504   000B24  0E00               	movlw	0
  1505   000B26  6EDD               	movwf	postdec2,c
  1506   000B28                     
  1507                           ;main.c: 485:                 plane[j][4-i] = 1;
  1508   000B28  4A4D               	infsnz	scan@j_797^0,f,c
  1509   000B2A  2A4E               	incf	(scan@j_797+1)^0,f,c
  1510   000B2C  BE4E               	btfsc	(scan@j_797+1)^0,7,c
  1511   000B2E  EFA2  F005         	goto	u3011
  1512   000B32  504E               	movf	(scan@j_797+1)^0,w,c
  1513   000B34  E109               	bnz	u3010
  1514   000B36  0E05               	movlw	5
  1515   000B38  5C4D               	subwf	scan@j_797^0,w,c
  1516   000B3A  A0D8               	btfss	status,0,c
  1517   000B3C  EFA2  F005         	goto	u3011
  1518   000B40  EFA4  F005         	goto	u3010
  1519   000B44                     u3011:
  1520   000B44  EF73  F005         	goto	l2891
  1521   000B48                     u3010:
  1522   000B48                     
  1523                           ;main.c: 486:             }
  1524   000B48  EC89  F00D         	call	_draw_plane	;wreg free
  1525   000B4C                     
  1526                           ;main.c: 487:             draw_plane();
  1527   000B4C  0E0B               	movlw	11
  1528   000B4E  6E39               	movwf	??_scan^0,c
  1529   000B50  0E62               	movlw	98
  1530   000B52                     u3417:
  1531   000B52  2EE8               	decfsz	wreg,f,c
  1532   000B54  D7FE               	bra	u3417
  1533   000B56  2E39               	decfsz	??_scan^0,f,c
  1534   000B58  D7FC               	bra	u3417
  1535   000B5A  D000               	nop2	
  1536   000B5C                     
  1537                           ;main.c: 488:             _delay((unsigned long)((8)*(4000000/4000.0)));
  1538   000B5C  4A4B               	infsnz	scan@i_796^0,f,c
  1539   000B5E  2A4C               	incf	(scan@i_796+1)^0,f,c
  1540   000B60  BE4C               	btfsc	(scan@i_796+1)^0,7,c
  1541   000B62  EFBC  F005         	goto	u3021
  1542   000B66  504C               	movf	(scan@i_796+1)^0,w,c
  1543   000B68  E109               	bnz	u3020
  1544   000B6A  0E04               	movlw	4
  1545   000B6C  5C4B               	subwf	scan@i_796^0,w,c
  1546   000B6E  A0D8               	btfss	status,0,c
  1547   000B70  EFBC  F005         	goto	u3021
  1548   000B74  EFBE  F005         	goto	u3020
  1549   000B78                     u3021:
  1550   000B78  EF6D  F005         	goto	l2883
  1551   000B7C                     u3020:
  1552   000B7C                     
  1553                           ;main.c: 490:     }
  1554   000B7C  0E00               	movlw	0
  1555   000B7E  6E50               	movwf	(scan@i_798+1)^0,c
  1556   000B80  0E00               	movlw	0
  1557   000B82  6E4F               	movwf	scan@i_798^0,c
  1558   000B84                     l2911:
  1559                           
  1560                           ;main.c: 491: }
  1561   000B84  ECA6  F010         	call	_clear_plane	;wreg free
  1562   000B88                     
  1563                           ;main.c: 492: 
  1564   000B88  0E00               	movlw	0
  1565   000B8A  6E52               	movwf	(scan@j_799+1)^0,c
  1566   000B8C  0E00               	movlw	0
  1567   000B8E  6E51               	movwf	scan@j_799^0,c
  1568   000B90                     l2919:
  1569                           
  1570                           ;main.c: 493: void speedup(int id){
  1571   000B90  C051  F02B         	movff	scan@j_799,___wmul@multiplier
  1572   000B94  C052  F02C         	movff	scan@j_799+1,___wmul@multiplier+1
  1573   000B98  0E00               	movlw	0
  1574   000B9A  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1575   000B9C  0E0A               	movlw	10
  1576   000B9E  6E2D               	movwf	___wmul@multiplicand^0,c
  1577   000BA0  EC00  F012         	call	___wmul	;wreg free
  1578   000BA4  0E80               	movlw	low _plane
  1579   000BA6  242B               	addwf	?___wmul^0,w,c
  1580   000BA8  6E39               	movwf	??_scan^0,c
  1581   000BAA  0E00               	movlw	high _plane
  1582   000BAC  202C               	addwfc	(?___wmul+1)^0,w,c
  1583   000BAE  6E3A               	movwf	(??_scan+1)^0,c
  1584   000BB0  90D8               	bcf	status,0,c
  1585   000BB2  344F               	rlcf	scan@i_798^0,w,c
  1586   000BB4  6ED9               	movwf	fsr2l,c
  1587   000BB6  3450               	rlcf	(scan@i_798+1)^0,w,c
  1588   000BB8  6EDA               	movwf	fsr2h,c
  1589   000BBA  5039               	movf	??_scan^0,w,c
  1590   000BBC  26D9               	addwf	fsr2l,f,c
  1591   000BBE  503A               	movf	(??_scan+1)^0,w,c
  1592   000BC0  22DA               	addwfc	fsr2h,f,c
  1593   000BC2  0E01               	movlw	1
  1594   000BC4  6EDE               	movwf	postinc2,c
  1595   000BC6  0E00               	movlw	0
  1596   000BC8  6EDD               	movwf	postdec2,c
  1597   000BCA                     
  1598                           ;main.c: 494:     clear_cube();
  1599   000BCA  4A51               	infsnz	scan@j_799^0,f,c
  1600   000BCC  2A52               	incf	(scan@j_799+1)^0,f,c
  1601   000BCE  BE52               	btfsc	(scan@j_799+1)^0,7,c
  1602   000BD0  EFF3  F005         	goto	u3031
  1603   000BD4  5052               	movf	(scan@j_799+1)^0,w,c
  1604   000BD6  E109               	bnz	u3030
  1605   000BD8  0E05               	movlw	5
  1606   000BDA  5C51               	subwf	scan@j_799^0,w,c
  1607   000BDC  A0D8               	btfss	status,0,c
  1608   000BDE  EFF3  F005         	goto	u3031
  1609   000BE2  EFF5  F005         	goto	u3030
  1610   000BE6                     u3031:
  1611   000BE6  EFC8  F005         	goto	l2919
  1612   000BEA                     u3030:
  1613   000BEA                     
  1614                           ;main.c: 495:     int i = 0, dcnt = 0, del = 50;
  1615   000BEA  EC89  F00D         	call	_draw_plane	;wreg free
  1616   000BEE                     
  1617                           ;main.c: 496:     plane[0][0] = 1;
  1618   000BEE  0E0B               	movlw	11
  1619   000BF0  6E39               	movwf	??_scan^0,c
  1620   000BF2  0E62               	movlw	98
  1621   000BF4                     u3427:
  1622   000BF4  2EE8               	decfsz	wreg,f,c
  1623   000BF6  D7FE               	bra	u3427
  1624   000BF8  2E39               	decfsz	??_scan^0,f,c
  1625   000BFA  D7FC               	bra	u3427
  1626   000BFC  D000               	nop2	
  1627   000BFE                     
  1628                           ;main.c: 497:     plane[0][4] = 1;
  1629   000BFE  4A4F               	infsnz	scan@i_798^0,f,c
  1630   000C00  2A50               	incf	(scan@i_798+1)^0,f,c
  1631   000C02  BE50               	btfsc	(scan@i_798+1)^0,7,c
  1632   000C04  EF0D  F006         	goto	u3041
  1633   000C08  5050               	movf	(scan@i_798+1)^0,w,c
  1634   000C0A  E109               	bnz	u3040
  1635   000C0C  0E05               	movlw	5
  1636   000C0E  5C4F               	subwf	scan@i_798^0,w,c
  1637   000C10  A0D8               	btfss	status,0,c
  1638   000C12  EF0D  F006         	goto	u3041
  1639   000C16  EF0F  F006         	goto	u3040
  1640   000C1A                     u3041:
  1641   000C1A  EFC2  F005         	goto	l2911
  1642   000C1E                     u3040:
  1643   000C1E                     
  1644                           ;main.c: 498:     plane[4][0] = 1;
  1645   000C1E  0E00               	movlw	0
  1646   000C20  6E54               	movwf	(scan@i_800+1)^0,c
  1647   000C22  0E00               	movlw	0
  1648   000C24  6E53               	movwf	scan@i_800^0,c
  1649   000C26                     l2935:
  1650   000C26  BE54               	btfsc	(scan@i_800+1)^0,7,c
  1651   000C28  EF1F  F006         	goto	u3051
  1652   000C2C  5054               	movf	(scan@i_800+1)^0,w,c
  1653   000C2E  E109               	bnz	u3050
  1654   000C30  0E04               	movlw	4
  1655   000C32  5C53               	subwf	scan@i_800^0,w,c
  1656   000C34  A0D8               	btfss	status,0,c
  1657   000C36  EF1F  F006         	goto	u3051
  1658   000C3A  EF21  F006         	goto	u3050
  1659   000C3E                     u3051:
  1660   000C3E  EF23  F006         	goto	l2939
  1661   000C42                     u3050:
  1662   000C42  EF70  F006         	goto	l2961
  1663   000C46                     l2939:
  1664                           
  1665                           ;main.c: 499:     plane[4][4] = 1;
  1666   000C46  ECA6  F010         	call	_clear_plane	;wreg free
  1667   000C4A                     
  1668                           ;main.c: 500:     while(mode == id){
  1669   000C4A  0E00               	movlw	0
  1670   000C4C  6E56               	movwf	(scan@j_801+1)^0,c
  1671   000C4E  0E00               	movlw	0
  1672   000C50  6E55               	movwf	scan@j_801^0,c
  1673   000C52                     l2943:
  1674   000C52  BE56               	btfsc	(scan@j_801+1)^0,7,c
  1675   000C54  EF35  F006         	goto	u3061
  1676   000C58  5056               	movf	(scan@j_801+1)^0,w,c
  1677   000C5A  E109               	bnz	u3060
  1678   000C5C  0E05               	movlw	5
  1679   000C5E  5C55               	subwf	scan@j_801^0,w,c
  1680   000C60  A0D8               	btfss	status,0,c
  1681   000C62  EF35  F006         	goto	u3061
  1682   000C66  EF37  F006         	goto	u3060
  1683   000C6A                     u3061:
  1684   000C6A  EF39  F006         	goto	l2947
  1685   000C6E                     u3060:
  1686   000C6E  EF62  F006         	goto	l2953
  1687   000C72                     l2947:
  1688                           
  1689                           ;main.c: 501:         if(i == 0 || i == 4){
  1690   000C72  0E04               	movlw	4
  1691   000C74  6E39               	movwf	??_scan^0,c
  1692   000C76  0E00               	movlw	0
  1693   000C78  6E3A               	movwf	(??_scan+1)^0,c
  1694   000C7A  5053               	movf	scan@i_800^0,w,c
  1695   000C7C  5E39               	subwf	??_scan^0,f,c
  1696   000C7E  5054               	movf	(scan@i_800+1)^0,w,c
  1697   000C80  5A3A               	subwfb	(??_scan+1)^0,f,c
  1698   000C82  90D8               	bcf	status,0,c
  1699   000C84  3639               	rlcf	??_scan^0,f,c
  1700   000C86  363A               	rlcf	(??_scan+1)^0,f,c
  1701   000C88  C055  F02B         	movff	scan@j_801,___wmul@multiplier
  1702   000C8C  C056  F02C         	movff	scan@j_801+1,___wmul@multiplier+1
  1703   000C90  0E00               	movlw	0
  1704   000C92  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  1705   000C94  0E0A               	movlw	10
  1706   000C96  6E2D               	movwf	___wmul@multiplicand^0,c
  1707   000C98  EC00  F012         	call	___wmul	;wreg free
  1708   000C9C  0E80               	movlw	low _plane
  1709   000C9E  242B               	addwf	?___wmul^0,w,c
  1710   000CA0  6E3B               	movwf	(??_scan+2)^0,c
  1711   000CA2  0E00               	movlw	high _plane
  1712   000CA4  202C               	addwfc	(?___wmul+1)^0,w,c
  1713   000CA6  6E3C               	movwf	(??_scan+3)^0,c
  1714   000CA8  5039               	movf	??_scan^0,w,c
  1715   000CAA  243B               	addwf	(??_scan+2)^0,w,c
  1716   000CAC  6ED9               	movwf	fsr2l,c
  1717   000CAE  503A               	movf	(??_scan+1)^0,w,c
  1718   000CB0  203C               	addwfc	(??_scan+3)^0,w,c
  1719   000CB2  6EDA               	movwf	fsr2h,c
  1720   000CB4  0E01               	movlw	1
  1721   000CB6  6EDE               	movwf	postinc2,c
  1722   000CB8  0E00               	movlw	0
  1723   000CBA  6EDD               	movwf	postdec2,c
  1724   000CBC                     
  1725                           ;main.c: 502:             for(int j = 1; j < 4; j++){
  1726   000CBC  4A55               	infsnz	scan@j_801^0,f,c
  1727   000CBE  2A56               	incf	(scan@j_801+1)^0,f,c
  1728   000CC0  EF29  F006         	goto	l2943
  1729   000CC4                     l2953:
  1730                           
  1731                           ;main.c: 503:                 plane[j][0] = 1;
  1732   000CC4  EC89  F00D         	call	_draw_plane	;wreg free
  1733   000CC8                     
  1734                           ;main.c: 504:                 plane[j][4] = 1;
  1735   000CC8  0E0B               	movlw	11
  1736   000CCA  6E39               	movwf	??_scan^0,c
  1737   000CCC  0E62               	movlw	98
  1738   000CCE                     u3437:
  1739   000CCE  2EE8               	decfsz	wreg,f,c
  1740   000CD0  D7FE               	bra	u3437
  1741   000CD2  2E39               	decfsz	??_scan^0,f,c
  1742   000CD4  D7FC               	bra	u3437
  1743   000CD6  D000               	nop2	
  1744   000CD8                     
  1745                           ;main.c: 505:                 plane[0][j] = 1;
  1746   000CD8  4A53               	infsnz	scan@i_800^0,f,c
  1747   000CDA  2A54               	incf	(scan@i_800+1)^0,f,c
  1748   000CDC  EF13  F006         	goto	l2935
  1749   000CE0                     l2961:
  1750                           
  1751                           ;main.c: 455:             plane_on(i);
  1752   000CE0  5037               	movf	scan@id^0,w,c
  1753   000CE2  1865               	xorwf	_mode^0,w,c
  1754   000CE4  E109               	bnz	u3070
  1755   000CE6  5038               	movf	(scan@id+1)^0,w,c
  1756   000CE8  1866               	xorwf	(_mode+1)^0,w,c
  1757   000CEA  B4D8               	btfsc	status,2,c
  1758   000CEC  EF7A  F006         	goto	u3071
  1759   000CF0  EF7C  F006         	goto	u3070
  1760   000CF4                     u3071:
  1761   000CF4  EF6D  F004         	goto	l2787
  1762   000CF8                     u3070:
  1763   000CF8  0012               	return		;funcret
  1764   000CFA                     __end_of_scan:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _random_pattern *****************
  1768 ;; Defined at:
  1769 ;;		line 171 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  id              2   54[COMRAM] int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  r               2   70[COMRAM] int 
  1774 ;;  x               2   68[COMRAM] int 
  1775 ;;  prevx           2   66[COMRAM] int 
  1776 ;;  prevr           2   64[COMRAM] int 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1786 ;;      Params:         2       0       0       0       0       0       0
  1787 ;;      Locals:         8       0       0       0       0       0       0
  1788 ;;      Temps:          8       0       0       0       0       0       0
  1789 ;;      Totals:        18       0       0       0       0       0       0
  1790 ;;Total ram usage:       18 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 5
  1793 ;; This function calls:
  1794 ;;		___awmod
  1795 ;;		_clear_plane
  1796 ;;		_lighton
  1797 ;;		_move
  1798 ;;		_rand
  1799 ;;		_srand
  1800 ;;		_time
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text3
  1807   001534                     __ptext3:
  1808                           	callstack 0
  1809   001534                     _random_pattern:
  1810                           	callstack 25
  1811   001534                     
  1812                           ;main.c: 172:         x=move(x,r);
  1813   001534  ECA6  F010         	call	_clear_plane	;wreg free
  1814   001538                     
  1815                           ;main.c: 173:         lighton(x,prevx);
  1816   001538  0E00               	movlw	0
  1817   00153A  6E0B               	movwf	time@t^0,c
  1818   00153C  0E00               	movlw	0
  1819   00153E  6E0C               	movwf	(time@t+1)^0,c
  1820   001540  ECC7  F011         	call	_time	;wreg free
  1821   001544  C00B  F039         	movff	?_time,??_random_pattern
  1822   001548  C00C  F03A         	movff	?_time+1,??_random_pattern+1
  1823   00154C  C00D  F03B         	movff	?_time+2,??_random_pattern+2
  1824   001550  C00E  F03C         	movff	?_time+3,??_random_pattern+3
  1825   001554  C00F  F03D         	movff	?_time+4,??_random_pattern+4
  1826   001558  C010  F03E         	movff	?_time+5,??_random_pattern+5
  1827   00155C  C011  F03F         	movff	?_time+6,??_random_pattern+6
  1828   001560  C012  F040         	movff	?_time+7,??_random_pattern+7
  1829   001564  C039  F013         	movff	??_random_pattern,srand@s
  1830   001568  C03A  F014         	movff	??_random_pattern+1,srand@s+1
  1831   00156C  EC13  F012         	call	_srand	;wreg free
  1832   001570                     
  1833                           ;main.c: 174:         prevx = x;
  1834   001570  0E00               	movlw	0
  1835   001572  6E46               	movwf	(random_pattern@x+1)^0,c
  1836   001574  0E00               	movlw	0
  1837   001576  6E45               	movwf	random_pattern@x^0,c
  1838   001578                     
  1839                           ;main.c: 175:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1840   001578  0E00               	movlw	0
  1841   00157A  6E32               	movwf	(lighton@x+1)^0,c
  1842   00157C  0E00               	movlw	0
  1843   00157E  6E31               	movwf	lighton@x^0,c
  1844   001580  0EFF               	movlw	255
  1845   001582  6E34               	movwf	(lighton@prev+1)^0,c
  1846   001584  6833               	setf	lighton@prev^0,c
  1847   001586  ECEC  F00C         	call	_lighton	;wreg free
  1848   00158A                     
  1849                           ;main.c: 176:     }
  1850   00158A  EC2E  F011         	call	_rand	;wreg free
  1851   00158E  C017  F01D         	movff	?_rand,___awmod@dividend
  1852   001592  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  1853   001596  0E00               	movlw	0
  1854   001598  6E20               	movwf	(___awmod@divisor+1)^0,c
  1855   00159A  0E06               	movlw	6
  1856   00159C  6E1F               	movwf	___awmod@divisor^0,c
  1857   00159E  EC4A  F00F         	call	___awmod	;wreg free
  1858   0015A2  C01D  F047         	movff	?___awmod,random_pattern@r
  1859   0015A6  C01E  F048         	movff	?___awmod+1,random_pattern@r+1
  1860   0015AA                     
  1861                           ;main.c: 177: }
  1862   0015AA  0E00               	movlw	0
  1863   0015AC  6E44               	movwf	(random_pattern@prevx+1)^0,c
  1864   0015AE  0E00               	movlw	0
  1865   0015B0  6E43               	movwf	random_pattern@prevx^0,c
  1866   0015B2                     
  1867                           ;main.c: 178: 
  1868   0015B2  C045  F023         	movff	random_pattern@x,move@x
  1869   0015B6  C046  F024         	movff	random_pattern@x+1,move@x+1
  1870   0015BA  C047  F025         	movff	random_pattern@r,move@r
  1871   0015BE  C048  F026         	movff	random_pattern@r+1,move@r+1
  1872   0015C2  ECDC  F00B         	call	_move	;wreg free
  1873   0015C6  C023  F045         	movff	?_move,random_pattern@x
  1874   0015CA  C024  F046         	movff	?_move+1,random_pattern@x+1
  1875   0015CE                     
  1876                           ;main.c: 179: void slash(int id){
  1877   0015CE  C045  F031         	movff	random_pattern@x,lighton@x
  1878   0015D2  C046  F032         	movff	random_pattern@x+1,lighton@x+1
  1879   0015D6  0E00               	movlw	0
  1880   0015D8  6E34               	movwf	(lighton@prev+1)^0,c
  1881   0015DA  0E00               	movlw	0
  1882   0015DC  6E33               	movwf	lighton@prev^0,c
  1883   0015DE  ECEC  F00C         	call	_lighton	;wreg free
  1884   0015E2                     l2459:
  1885                           
  1886                           ;main.c: 180:     clear_cube();
  1887   0015E2  0E03               	movlw	3
  1888   0015E4  6E39               	movwf	??_random_pattern^0,c
  1889   0015E6  0E98               	movlw	152
  1890   0015E8                     u3447:
  1891   0015E8  2EE8               	decfsz	wreg,f,c
  1892   0015EA  D7FE               	bra	u3447
  1893   0015EC  2E39               	decfsz	??_random_pattern^0,f,c
  1894   0015EE  D7FC               	bra	u3447
  1895                           
  1896                           ;main.c: 181:     int x = 0;
  1897   0015F0  EFCF  F00B         	goto	l2495
  1898   0015F4                     l139:
  1899                           
  1900                           ;main.c: 182:     plane[0][0] = 1;
  1901   0015F4  C047  F041         	movff	random_pattern@r,random_pattern@prevr
  1902   0015F8  C048  F042         	movff	random_pattern@r+1,random_pattern@prevr+1
  1903   0015FC                     
  1904                           ;main.c: 183:     while(mode == id){
  1905   0015FC  EC2E  F011         	call	_rand	;wreg free
  1906   001600  C017  F01D         	movff	?_rand,___awmod@dividend
  1907   001604  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  1908   001608  0E00               	movlw	0
  1909   00160A  6E20               	movwf	(___awmod@divisor+1)^0,c
  1910   00160C  0E06               	movlw	6
  1911   00160E  6E1F               	movwf	___awmod@divisor^0,c
  1912   001610  EC4A  F00F         	call	___awmod	;wreg free
  1913   001614  C01D  F047         	movff	?___awmod,random_pattern@r
  1914   001618  C01E  F048         	movff	?___awmod+1,random_pattern@r+1
  1915   00161C                     
  1916                           ;main.c: 184:         plane[x][x] = 0;
  1917   00161C  5047               	movf	random_pattern@r^0,w,c
  1918   00161E  1048               	iorwf	(random_pattern@r+1)^0,w,c
  1919   001620  B4D8               	btfsc	status,2,c
  1920   001622  EF15  F00B         	goto	u2281
  1921   001626  EF17  F00B         	goto	u2280
  1922   00162A                     u2281:
  1923   00162A  EF32  F00B         	goto	l2469
  1924   00162E                     u2280:
  1925   00162E  0447               	decf	random_pattern@r^0,w,c
  1926   001630  1048               	iorwf	(random_pattern@r+1)^0,w,c
  1927   001632  A4D8               	btfss	status,2,c
  1928   001634  EF1E  F00B         	goto	u2291
  1929   001638  EF20  F00B         	goto	u2290
  1930   00163C                     u2291:
  1931   00163C  EF43  F00B         	goto	l2471
  1932   001640                     u2290:
  1933   001640  EF32  F00B         	goto	l2469
  1934   001644                     l2467:
  1935   001644  EC2E  F011         	call	_rand	;wreg free
  1936   001648  C017  F01D         	movff	?_rand,___awmod@dividend
  1937   00164C  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  1938   001650  0E00               	movlw	0
  1939   001652  6E20               	movwf	(___awmod@divisor+1)^0,c
  1940   001654  0E06               	movlw	6
  1941   001656  6E1F               	movwf	___awmod@divisor^0,c
  1942   001658  EC4A  F00F         	call	___awmod	;wreg free
  1943   00165C  C01D  F047         	movff	?___awmod,random_pattern@r
  1944   001660  C01E  F048         	movff	?___awmod+1,random_pattern@r+1
  1945   001664                     l2469:
  1946   001664  5047               	movf	random_pattern@r^0,w,c
  1947   001666  2441               	addwf	random_pattern@prevr^0,w,c
  1948   001668  6E39               	movwf	??_random_pattern^0,c
  1949   00166A  5048               	movf	(random_pattern@r+1)^0,w,c
  1950   00166C  2042               	addwfc	(random_pattern@prevr+1)^0,w,c
  1951   00166E  6E3A               	movwf	(??_random_pattern+1)^0,c
  1952   001670  0439               	decf	??_random_pattern^0,w,c
  1953   001672  103A               	iorwf	(??_random_pattern+1)^0,w,c
  1954   001674  B4D8               	btfsc	status,2,c
  1955   001676  EF3F  F00B         	goto	u2301
  1956   00167A  EF41  F00B         	goto	u2300
  1957   00167E                     u2301:
  1958   00167E  EF22  F00B         	goto	l2467
  1959   001682                     u2300:
  1960   001682  EFB1  F00B         	goto	l2487
  1961   001686                     l2471:
  1962   001686  0E02               	movlw	2
  1963   001688  1847               	xorwf	random_pattern@r^0,w,c
  1964   00168A  1048               	iorwf	(random_pattern@r+1)^0,w,c
  1965   00168C  B4D8               	btfsc	status,2,c
  1966   00168E  EF4B  F00B         	goto	u2311
  1967   001692  EF4D  F00B         	goto	u2310
  1968   001696                     u2311:
  1969   001696  EF69  F00B         	goto	l2477
  1970   00169A                     u2310:
  1971   00169A  0E03               	movlw	3
  1972   00169C  1847               	xorwf	random_pattern@r^0,w,c
  1973   00169E  1048               	iorwf	(random_pattern@r+1)^0,w,c
  1974   0016A0  A4D8               	btfss	status,2,c
  1975   0016A2  EF55  F00B         	goto	u2321
  1976   0016A6  EF57  F00B         	goto	u2320
  1977   0016AA                     u2321:
  1978   0016AA  EF7B  F00B         	goto	l2479
  1979   0016AE                     u2320:
  1980   0016AE  EF69  F00B         	goto	l2477
  1981   0016B2                     l2475:
  1982   0016B2  EC2E  F011         	call	_rand	;wreg free
  1983   0016B6  C017  F01D         	movff	?_rand,___awmod@dividend
  1984   0016BA  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  1985   0016BE  0E00               	movlw	0
  1986   0016C0  6E20               	movwf	(___awmod@divisor+1)^0,c
  1987   0016C2  0E06               	movlw	6
  1988   0016C4  6E1F               	movwf	___awmod@divisor^0,c
  1989   0016C6  EC4A  F00F         	call	___awmod	;wreg free
  1990   0016CA  C01D  F047         	movff	?___awmod,random_pattern@r
  1991   0016CE  C01E  F048         	movff	?___awmod+1,random_pattern@r+1
  1992   0016D2                     l2477:
  1993   0016D2  5047               	movf	random_pattern@r^0,w,c
  1994   0016D4  2441               	addwf	random_pattern@prevr^0,w,c
  1995   0016D6  6E39               	movwf	??_random_pattern^0,c
  1996   0016D8  5048               	movf	(random_pattern@r+1)^0,w,c
  1997   0016DA  2042               	addwfc	(random_pattern@prevr+1)^0,w,c
  1998   0016DC  6E3A               	movwf	(??_random_pattern+1)^0,c
  1999   0016DE  0E05               	movlw	5
  2000   0016E0  1839               	xorwf	??_random_pattern^0,w,c
  2001   0016E2  103A               	iorwf	(??_random_pattern+1)^0,w,c
  2002   0016E4  B4D8               	btfsc	status,2,c
  2003   0016E6  EF77  F00B         	goto	u2331
  2004   0016EA  EF79  F00B         	goto	u2330
  2005   0016EE                     u2331:
  2006   0016EE  EF59  F00B         	goto	l2475
  2007   0016F2                     u2330:
  2008   0016F2  EFB1  F00B         	goto	l2487
  2009   0016F6                     l2479:
  2010   0016F6  0E04               	movlw	4
  2011   0016F8  1847               	xorwf	random_pattern@r^0,w,c
  2012   0016FA  1048               	iorwf	(random_pattern@r+1)^0,w,c
  2013   0016FC  B4D8               	btfsc	status,2,c
  2014   0016FE  EF83  F00B         	goto	u2341
  2015   001702  EF85  F00B         	goto	u2340
  2016   001706                     u2341:
  2017   001706  EFA1  F00B         	goto	l2485
  2018   00170A                     u2340:
  2019   00170A  0E05               	movlw	5
  2020   00170C  1847               	xorwf	random_pattern@r^0,w,c
  2021   00170E  1048               	iorwf	(random_pattern@r+1)^0,w,c
  2022   001710  A4D8               	btfss	status,2,c
  2023   001712  EF8D  F00B         	goto	u2351
  2024   001716  EF8F  F00B         	goto	u2350
  2025   00171A                     u2351:
  2026   00171A  EFB1  F00B         	goto	l2487
  2027   00171E                     u2350:
  2028   00171E  EFA1  F00B         	goto	l2485
  2029   001722                     l2483:
  2030   001722  EC2E  F011         	call	_rand	;wreg free
  2031   001726  C017  F01D         	movff	?_rand,___awmod@dividend
  2032   00172A  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  2033   00172E  0E00               	movlw	0
  2034   001730  6E20               	movwf	(___awmod@divisor+1)^0,c
  2035   001732  0E06               	movlw	6
  2036   001734  6E1F               	movwf	___awmod@divisor^0,c
  2037   001736  EC4A  F00F         	call	___awmod	;wreg free
  2038   00173A  C01D  F047         	movff	?___awmod,random_pattern@r
  2039   00173E  C01E  F048         	movff	?___awmod+1,random_pattern@r+1
  2040   001742                     l2485:
  2041   001742  5047               	movf	random_pattern@r^0,w,c
  2042   001744  2441               	addwf	random_pattern@prevr^0,w,c
  2043   001746  6E39               	movwf	??_random_pattern^0,c
  2044   001748  5048               	movf	(random_pattern@r+1)^0,w,c
  2045   00174A  2042               	addwfc	(random_pattern@prevr+1)^0,w,c
  2046   00174C  6E3A               	movwf	(??_random_pattern+1)^0,c
  2047   00174E  0E09               	movlw	9
  2048   001750  1839               	xorwf	??_random_pattern^0,w,c
  2049   001752  103A               	iorwf	(??_random_pattern+1)^0,w,c
  2050   001754  B4D8               	btfsc	status,2,c
  2051   001756  EFAF  F00B         	goto	u2361
  2052   00175A  EFB1  F00B         	goto	u2360
  2053   00175E                     u2361:
  2054   00175E  EF91  F00B         	goto	l2483
  2055   001762                     u2360:
  2056   001762                     l2487:
  2057                           
  2058                           ;main.c: 188:         plane[x][x] = 1;
  2059   001762  C045  F023         	movff	random_pattern@x,move@x
  2060   001766  C046  F024         	movff	random_pattern@x+1,move@x+1
  2061   00176A  C047  F025         	movff	random_pattern@r,move@r
  2062   00176E  C048  F026         	movff	random_pattern@r+1,move@r+1
  2063   001772  ECDC  F00B         	call	_move	;wreg free
  2064   001776  C023  F045         	movff	?_move,random_pattern@x
  2065   00177A  C024  F046         	movff	?_move+1,random_pattern@x+1
  2066   00177E                     
  2067                           ;main.c: 189:         set_plane(x);
  2068   00177E  C045  F031         	movff	random_pattern@x,lighton@x
  2069   001782  C046  F032         	movff	random_pattern@x+1,lighton@x+1
  2070   001786  C043  F033         	movff	random_pattern@prevx,lighton@prev
  2071   00178A  C044  F034         	movff	random_pattern@prevx+1,lighton@prev+1
  2072   00178E  ECEC  F00C         	call	_lighton	;wreg free
  2073   001792                     
  2074                           ;main.c: 190:         draw_plane();
  2075   001792  C045  F043         	movff	random_pattern@x,random_pattern@prevx
  2076   001796  C046  F044         	movff	random_pattern@x+1,random_pattern@prevx+1
  2077   00179A  EFF1  F00A         	goto	l2459
  2078   00179E                     l2495:
  2079                           
  2080                           ;main.c: 181:     int x = 0;
  2081   00179E  5037               	movf	random_pattern@id^0,w,c
  2082   0017A0  1865               	xorwf	_mode^0,w,c
  2083   0017A2  E109               	bnz	u2370
  2084   0017A4  5038               	movf	(random_pattern@id+1)^0,w,c
  2085   0017A6  1866               	xorwf	(_mode+1)^0,w,c
  2086   0017A8  B4D8               	btfsc	status,2,c
  2087   0017AA  EFD9  F00B         	goto	u2371
  2088   0017AE  EFDB  F00B         	goto	u2370
  2089   0017B2                     u2371:
  2090   0017B2  EFFA  F00A         	goto	l139
  2091   0017B6                     u2370:
  2092   0017B6  0012               	return		;funcret
  2093   0017B8                     __end_of_random_pattern:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _pulsing *****************
  2097 ;; Defined at:
  2098 ;;		line 565 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  id              2   54[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  j               2   60[COMRAM] int 
  2103 ;;  i               2   64[COMRAM] int 
  2104 ;;  i               2   58[COMRAM] int 
  2105 ;;  i               2   62[COMRAM] int 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2115 ;;      Params:         2       0       0       0       0       0       0
  2116 ;;      Locals:         8       0       0       0       0       0       0
  2117 ;;      Temps:          2       0       0       0       0       0       0
  2118 ;;      Totals:        12       0       0       0       0       0       0
  2119 ;;Total ram usage:       12 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 4
  2122 ;; This function calls:
  2123 ;;		___wmul
  2124 ;;		_clear_cube
  2125 ;;		_draw_plane
  2126 ;;		_plane_on
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text4
  2133   0012AC                     __ptext4:
  2134                           	callstack 0
  2135   0012AC                     _pulsing:
  2136                           	callstack 26
  2137   0012AC                     
  2138                           ;main.c: 566:         _delay((unsigned long)((40)*(4000000/4000.0)));
  2139   0012AC  EF8D  F00A         	goto	l3161
  2140   0012B0                     l3069:
  2141                           
  2142                           ;main.c: 567:         for(int i = 0; i < 5; i++){
  2143   0012B0  EC51  F010         	call	_clear_cube	;wreg free
  2144   0012B4                     
  2145                           ;main.c: 568:             for(int j = 0; j < 5; j++)
  2146   0012B4  0E4E               	movlw	78
  2147   0012B6  6E39               	movwf	??_pulsing^0,c
  2148   0012B8  0EEB               	movlw	235
  2149   0012BA                     u3457:
  2150   0012BA  2EE8               	decfsz	wreg,f,c
  2151   0012BC  D7FE               	bra	u3457
  2152   0012BE  2E39               	decfsz	??_pulsing^0,f,c
  2153   0012C0  D7FC               	bra	u3457
  2154   0012C2  F000               	nop	
  2155   0012C4                     
  2156                           ;main.c: 569:                 plane[i][j] = 1;
  2157   0012C4  0E00               	movlw	0
  2158   0012C6  0100               	movlb	0	; () banked
  2159   0012C8  6F99               	movwf	(_plane+25)& (0+255),b
  2160   0012CA  0E01               	movlw	1
  2161   0012CC  6F98               	movwf	(_plane+24)& (0+255),b
  2162   0012CE                     
  2163                           ; BSR set to: 0
  2164                           ;main.c: 570:         }
  2165   0012CE  EC89  F00D         	call	_draw_plane	;wreg free
  2166   0012D2                     
  2167                           ;main.c: 571:         plane_on(0);
  2168   0012D2  0E00               	movlw	0
  2169   0012D4  6E0C               	movwf	(plane_on@a+1)^0,c
  2170   0012D6  0E02               	movlw	2
  2171   0012D8  6E0B               	movwf	plane_on@a^0,c
  2172   0012DA  ECEE  F010         	call	_plane_on	;wreg free
  2173   0012DE                     
  2174                           ;main.c: 572:         plane_on(4);
  2175   0012DE  0E27               	movlw	39
  2176   0012E0  6E39               	movwf	??_pulsing^0,c
  2177   0012E2  0EF5               	movlw	245
  2178   0012E4                     u3467:
  2179   0012E4  2EE8               	decfsz	wreg,f,c
  2180   0012E6  D7FE               	bra	u3467
  2181   0012E8  2E39               	decfsz	??_pulsing^0,f,c
  2182   0012EA  D7FC               	bra	u3467
  2183   0012EC  F000               	nop	
  2184   0012EE                     
  2185                           ;main.c: 573:         draw_plane();
  2186   0012EE  0E00               	movlw	0
  2187   0012F0  6E40               	movwf	(pulsing@i+1)^0,c
  2188   0012F2  0E01               	movlw	1
  2189   0012F4  6E3F               	movwf	pulsing@i^0,c
  2190   0012F6                     l3087:
  2191                           
  2192                           ;main.c: 574:         _delay((unsigned long)((70)*(4000000/4000.0)));
  2193   0012F6  90D8               	bcf	status,0,c
  2194   0012F8  343F               	rlcf	pulsing@i^0,w,c
  2195   0012FA  6ED9               	movwf	fsr2l,c
  2196   0012FC  3440               	rlcf	(pulsing@i+1)^0,w,c
  2197   0012FE  6EDA               	movwf	fsr2h,c
  2198   001300  0E8A               	movlw	low (_plane+10)
  2199   001302  26D9               	addwf	fsr2l,f,c
  2200   001304  0E00               	movlw	high (_plane+10)
  2201   001306  22DA               	addwfc	fsr2h,f,c
  2202   001308  0E01               	movlw	1
  2203   00130A  6EDE               	movwf	postinc2,c
  2204   00130C  0E00               	movlw	0
  2205   00130E  6EDD               	movwf	postdec2,c
  2206                           
  2207                           ;main.c: 575:         clear_cube();
  2208   001310  90D8               	bcf	status,0,c
  2209   001312  343F               	rlcf	pulsing@i^0,w,c
  2210   001314  6ED9               	movwf	fsr2l,c
  2211   001316  3440               	rlcf	(pulsing@i+1)^0,w,c
  2212   001318  6EDA               	movwf	fsr2h,c
  2213   00131A  0E9E               	movlw	low (_plane+30)
  2214   00131C  26D9               	addwf	fsr2l,f,c
  2215   00131E  0E00               	movlw	high (_plane+30)
  2216   001320  22DA               	addwfc	fsr2h,f,c
  2217   001322  0E01               	movlw	1
  2218   001324  6EDE               	movwf	postinc2,c
  2219   001326  0E00               	movlw	0
  2220   001328  6EDD               	movwf	postdec2,c
  2221   00132A                     
  2222                           ;main.c: 576:         for(int i = 1; i < 4; i++){
  2223   00132A  4A3F               	infsnz	pulsing@i^0,f,c
  2224   00132C  2A40               	incf	(pulsing@i+1)^0,f,c
  2225   00132E  BE40               	btfsc	(pulsing@i+1)^0,7,c
  2226   001330  EFA3  F009         	goto	u3211
  2227   001334  5040               	movf	(pulsing@i+1)^0,w,c
  2228   001336  E109               	bnz	u3210
  2229   001338  0E04               	movlw	4
  2230   00133A  5C3F               	subwf	pulsing@i^0,w,c
  2231   00133C  A0D8               	btfss	status,0,c
  2232   00133E  EFA3  F009         	goto	u3211
  2233   001342  EFA5  F009         	goto	u3210
  2234   001346                     u3211:
  2235   001346  EF7B  F009         	goto	l3087
  2236   00134A                     u3210:
  2237   00134A                     
  2238                           ;main.c: 577:             plane[1][i] = 1;
  2239   00134A  0E00               	movlw	0
  2240   00134C  0100               	movlb	0	; () banked
  2241   00134E  6F97               	movwf	(_plane+23)& (0+255),b
  2242   001350  0E01               	movlw	1
  2243   001352  6F96               	movwf	(_plane+22)& (0+255),b
  2244                           
  2245                           ;main.c: 578:             plane[2][i] = 1;
  2246   001354  0E00               	movlw	0
  2247   001356  6F9B               	movwf	(_plane+27)& (0+255),b
  2248   001358  0E01               	movlw	1
  2249   00135A  6F9A               	movwf	(_plane+26)& (0+255),b
  2250   00135C                     
  2251                           ; BSR set to: 0
  2252                           ;main.c: 579:             plane[3][i] = 1;
  2253   00135C  EC89  F00D         	call	_draw_plane	;wreg free
  2254   001360                     
  2255                           ;main.c: 580:         }
  2256   001360  0E00               	movlw	0
  2257   001362  6E0C               	movwf	(plane_on@a+1)^0,c
  2258   001364  0E01               	movlw	1
  2259   001366  6E0B               	movwf	plane_on@a^0,c
  2260   001368  ECEE  F010         	call	_plane_on	;wreg free
  2261   00136C                     
  2262                           ;main.c: 581:         plane_on(1);
  2263   00136C  0E00               	movlw	0
  2264   00136E  6E0C               	movwf	(plane_on@a+1)^0,c
  2265   001370  0E03               	movlw	3
  2266   001372  6E0B               	movwf	plane_on@a^0,c
  2267   001374  ECEE  F010         	call	_plane_on	;wreg free
  2268   001378                     
  2269                           ;main.c: 582:         plane_on(2);
  2270   001378  0E34               	movlw	52
  2271   00137A  6E39               	movwf	??_pulsing^0,c
  2272   00137C  0EF2               	movlw	242
  2273   00137E                     u3477:
  2274   00137E  2EE8               	decfsz	wreg,f,c
  2275   001380  D7FE               	bra	u3477
  2276   001382  2E39               	decfsz	??_pulsing^0,f,c
  2277   001384  D7FC               	bra	u3477
  2278   001386                     
  2279                           ;main.c: 583:         plane_on(3);
  2280   001386  0E00               	movlw	0
  2281   001388  6E3C               	movwf	(pulsing@i_816+1)^0,c
  2282   00138A  0E00               	movlw	0
  2283   00138C  6E3B               	movwf	pulsing@i_816^0,c
  2284   00138E                     l3109:
  2285                           
  2286                           ;main.c: 584:         draw_plane();
  2287   00138E  0E00               	movlw	0
  2288   001390  6E3E               	movwf	(pulsing@j+1)^0,c
  2289   001392  0E00               	movlw	0
  2290   001394  6E3D               	movwf	pulsing@j^0,c
  2291   001396                     l3115:
  2292                           
  2293                           ;main.c: 585:         _delay((unsigned long)((60)*(4000000/4000.0)));
  2294   001396  C03B  F02B         	movff	pulsing@i_816,___wmul@multiplier
  2295   00139A  C03C  F02C         	movff	pulsing@i_816+1,___wmul@multiplier+1
  2296   00139E  0E00               	movlw	0
  2297   0013A0  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  2298   0013A2  0E0A               	movlw	10
  2299   0013A4  6E2D               	movwf	___wmul@multiplicand^0,c
  2300   0013A6  EC00  F012         	call	___wmul	;wreg free
  2301   0013AA  0E80               	movlw	low _plane
  2302   0013AC  242B               	addwf	?___wmul^0,w,c
  2303   0013AE  6E39               	movwf	??_pulsing^0,c
  2304   0013B0  0E00               	movlw	high _plane
  2305   0013B2  202C               	addwfc	(?___wmul+1)^0,w,c
  2306   0013B4  6E3A               	movwf	(??_pulsing+1)^0,c
  2307   0013B6  90D8               	bcf	status,0,c
  2308   0013B8  343D               	rlcf	pulsing@j^0,w,c
  2309   0013BA  6ED9               	movwf	fsr2l,c
  2310   0013BC  343E               	rlcf	(pulsing@j+1)^0,w,c
  2311   0013BE  6EDA               	movwf	fsr2h,c
  2312   0013C0  5039               	movf	??_pulsing^0,w,c
  2313   0013C2  26D9               	addwf	fsr2l,f,c
  2314   0013C4  503A               	movf	(??_pulsing+1)^0,w,c
  2315   0013C6  22DA               	addwfc	fsr2h,f,c
  2316   0013C8  0E01               	movlw	1
  2317   0013CA  6EDE               	movwf	postinc2,c
  2318   0013CC  0E00               	movlw	0
  2319   0013CE  6EDD               	movwf	postdec2,c
  2320   0013D0  4A3D               	infsnz	pulsing@j^0,f,c
  2321   0013D2  2A3E               	incf	(pulsing@j+1)^0,f,c
  2322   0013D4  BE3E               	btfsc	(pulsing@j+1)^0,7,c
  2323   0013D6  EFF6  F009         	goto	u3221
  2324   0013DA  503E               	movf	(pulsing@j+1)^0,w,c
  2325   0013DC  E109               	bnz	u3220
  2326   0013DE  0E05               	movlw	5
  2327   0013E0  5C3D               	subwf	pulsing@j^0,w,c
  2328   0013E2  A0D8               	btfss	status,0,c
  2329   0013E4  EFF6  F009         	goto	u3221
  2330   0013E8  EFF8  F009         	goto	u3220
  2331   0013EC                     u3221:
  2332   0013EC  EFCB  F009         	goto	l3115
  2333   0013F0                     u3220:
  2334   0013F0                     
  2335                           ;main.c: 586:         clear_cube();
  2336   0013F0  4A3B               	infsnz	pulsing@i_816^0,f,c
  2337   0013F2  2A3C               	incf	(pulsing@i_816+1)^0,f,c
  2338   0013F4  BE3C               	btfsc	(pulsing@i_816+1)^0,7,c
  2339   0013F6  EF06  F00A         	goto	u3231
  2340   0013FA  503C               	movf	(pulsing@i_816+1)^0,w,c
  2341   0013FC  E109               	bnz	u3230
  2342   0013FE  0E05               	movlw	5
  2343   001400  5C3B               	subwf	pulsing@i_816^0,w,c
  2344   001402  A0D8               	btfss	status,0,c
  2345   001404  EF06  F00A         	goto	u3231
  2346   001408  EF08  F00A         	goto	u3230
  2347   00140C                     u3231:
  2348   00140C  EFC7  F009         	goto	l3109
  2349   001410                     u3230:
  2350   001410                     
  2351                           ;main.c: 587:         plane[2][2] = 1;
  2352   001410  0E00               	movlw	0
  2353   001412  6E0C               	movwf	(plane_on@a+1)^0,c
  2354   001414  0E00               	movlw	0
  2355   001416  6E0B               	movwf	plane_on@a^0,c
  2356   001418  ECEE  F010         	call	_plane_on	;wreg free
  2357                           
  2358                           ;main.c: 588:         draw_plane();
  2359   00141C  0E00               	movlw	0
  2360   00141E  6E0C               	movwf	(plane_on@a+1)^0,c
  2361   001420  0E04               	movlw	4
  2362   001422  6E0B               	movwf	plane_on@a^0,c
  2363   001424  ECEE  F010         	call	_plane_on	;wreg free
  2364   001428                     
  2365                           ;main.c: 589:         plane_on(2);
  2366   001428  EC89  F00D         	call	_draw_plane	;wreg free
  2367   00142C                     
  2368                           ;main.c: 590:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2369   00142C  0E5B               	movlw	91
  2370   00142E  6E39               	movwf	??_pulsing^0,c
  2371   001430  0EE8               	movlw	232
  2372   001432                     u3487:
  2373   001432  2EE8               	decfsz	wreg,f,c
  2374   001434  D7FE               	bra	u3487
  2375   001436  2E39               	decfsz	??_pulsing^0,f,c
  2376   001438  D7FC               	bra	u3487
  2377   00143A                     
  2378                           ;main.c: 591:     }
  2379   00143A  EC51  F010         	call	_clear_cube	;wreg free
  2380   00143E                     
  2381                           ;main.c: 592: }
  2382   00143E  0E00               	movlw	0
  2383   001440  6E42               	movwf	(pulsing@i_818+1)^0,c
  2384   001442  0E01               	movlw	1
  2385   001444  6E41               	movwf	pulsing@i_818^0,c
  2386   001446                     l3139:
  2387                           
  2388                           ;main.c: 593: 
  2389   001446  90D8               	bcf	status,0,c
  2390   001448  3441               	rlcf	pulsing@i_818^0,w,c
  2391   00144A  6ED9               	movwf	fsr2l,c
  2392   00144C  3442               	rlcf	(pulsing@i_818+1)^0,w,c
  2393   00144E  6EDA               	movwf	fsr2h,c
  2394   001450  0E8A               	movlw	low (_plane+10)
  2395   001452  26D9               	addwf	fsr2l,f,c
  2396   001454  0E00               	movlw	high (_plane+10)
  2397   001456  22DA               	addwfc	fsr2h,f,c
  2398   001458  0E01               	movlw	1
  2399   00145A  6EDE               	movwf	postinc2,c
  2400   00145C  0E00               	movlw	0
  2401   00145E  6EDD               	movwf	postdec2,c
  2402                           
  2403                           ;main.c: 594: void main(void) {
  2404   001460  90D8               	bcf	status,0,c
  2405   001462  3441               	rlcf	pulsing@i_818^0,w,c
  2406   001464  6ED9               	movwf	fsr2l,c
  2407   001466  3442               	rlcf	(pulsing@i_818+1)^0,w,c
  2408   001468  6EDA               	movwf	fsr2h,c
  2409   00146A  0E94               	movlw	low (_plane+20)
  2410   00146C  26D9               	addwf	fsr2l,f,c
  2411   00146E  0E00               	movlw	high (_plane+20)
  2412   001470  22DA               	addwfc	fsr2h,f,c
  2413   001472  0E01               	movlw	1
  2414   001474  6EDE               	movwf	postinc2,c
  2415   001476  0E00               	movlw	0
  2416   001478  6EDD               	movwf	postdec2,c
  2417                           
  2418                           ;main.c: 595:     init();
  2419   00147A  90D8               	bcf	status,0,c
  2420   00147C  3441               	rlcf	pulsing@i_818^0,w,c
  2421   00147E  6ED9               	movwf	fsr2l,c
  2422   001480  3442               	rlcf	(pulsing@i_818+1)^0,w,c
  2423   001482  6EDA               	movwf	fsr2h,c
  2424   001484  0E9E               	movlw	low (_plane+30)
  2425   001486  26D9               	addwf	fsr2l,f,c
  2426   001488  0E00               	movlw	high (_plane+30)
  2427   00148A  22DA               	addwfc	fsr2h,f,c
  2428   00148C  0E01               	movlw	1
  2429   00148E  6EDE               	movwf	postinc2,c
  2430   001490  0E00               	movlw	0
  2431   001492  6EDD               	movwf	postdec2,c
  2432   001494                     
  2433                           ;main.c: 596: 
  2434   001494  4A41               	infsnz	pulsing@i_818^0,f,c
  2435   001496  2A42               	incf	(pulsing@i_818+1)^0,f,c
  2436   001498  BE42               	btfsc	(pulsing@i_818+1)^0,7,c
  2437   00149A  EF58  F00A         	goto	u3241
  2438   00149E  5042               	movf	(pulsing@i_818+1)^0,w,c
  2439   0014A0  E109               	bnz	u3240
  2440   0014A2  0E04               	movlw	4
  2441   0014A4  5C41               	subwf	pulsing@i_818^0,w,c
  2442   0014A6  A0D8               	btfss	status,0,c
  2443   0014A8  EF58  F00A         	goto	u3241
  2444   0014AC  EF5A  F00A         	goto	u3240
  2445   0014B0                     u3241:
  2446   0014B0  EF23  F00A         	goto	l3139
  2447   0014B4                     u3240:
  2448   0014B4                     
  2449                           ;main.c: 597: 
  2450   0014B4  0E00               	movlw	0
  2451   0014B6  6E0C               	movwf	(plane_on@a+1)^0,c
  2452   0014B8  0E01               	movlw	1
  2453   0014BA  6E0B               	movwf	plane_on@a^0,c
  2454   0014BC  ECEE  F010         	call	_plane_on	;wreg free
  2455                           
  2456                           ;main.c: 598: 
  2457   0014C0  0E00               	movlw	0
  2458   0014C2  6E0C               	movwf	(plane_on@a+1)^0,c
  2459   0014C4  0E02               	movlw	2
  2460   0014C6  6E0B               	movwf	plane_on@a^0,c
  2461   0014C8  ECEE  F010         	call	_plane_on	;wreg free
  2462                           
  2463                           ;main.c: 599: 
  2464   0014CC  0E00               	movlw	0
  2465   0014CE  6E0C               	movwf	(plane_on@a+1)^0,c
  2466   0014D0  0E03               	movlw	3
  2467   0014D2  6E0B               	movwf	plane_on@a^0,c
  2468   0014D4  ECEE  F010         	call	_plane_on	;wreg free
  2469   0014D8                     
  2470                           ;main.c: 600:     while(1){
  2471   0014D8  EC89  F00D         	call	_draw_plane	;wreg free
  2472   0014DC                     
  2473                           ;main.c: 601: 
  2474   0014DC  0E4E               	movlw	78
  2475   0014DE  6E39               	movwf	??_pulsing^0,c
  2476   0014E0  0EEB               	movlw	235
  2477   0014E2                     u3497:
  2478   0014E2  2EE8               	decfsz	wreg,f,c
  2479   0014E4  D7FE               	bra	u3497
  2480   0014E6  2E39               	decfsz	??_pulsing^0,f,c
  2481   0014E8  D7FC               	bra	u3497
  2482   0014EA  F000               	nop	
  2483   0014EC                     
  2484                           ;main.c: 602:         switch(mode){
  2485   0014EC  EC51  F010         	call	_clear_cube	;wreg free
  2486   0014F0                     
  2487                           ;main.c: 603:             case 0:
  2488   0014F0  0E00               	movlw	0
  2489   0014F2  0100               	movlb	0	; () banked
  2490   0014F4  6F99               	movwf	(_plane+25)& (0+255),b
  2491   0014F6  0E01               	movlw	1
  2492   0014F8  6F98               	movwf	(_plane+24)& (0+255),b
  2493   0014FA                     
  2494                           ; BSR set to: 0
  2495                           ;main.c: 604:                 speedup(0);
  2496   0014FA  EC89  F00D         	call	_draw_plane	;wreg free
  2497   0014FE                     
  2498                           ;main.c: 605:                 break;
  2499   0014FE  0E00               	movlw	0
  2500   001500  6E0C               	movwf	(plane_on@a+1)^0,c
  2501   001502  0E02               	movlw	2
  2502   001504  6E0B               	movwf	plane_on@a^0,c
  2503   001506  ECEE  F010         	call	_plane_on	;wreg free
  2504   00150A                     
  2505                           ;main.c: 606:             case 1:
  2506   00150A  0E41               	movlw	65
  2507   00150C  6E39               	movwf	??_pulsing^0,c
  2508   00150E  0EEE               	movlw	238
  2509   001510                     u3507:
  2510   001510  2EE8               	decfsz	wreg,f,c
  2511   001512  D7FE               	bra	u3507
  2512   001514  2E39               	decfsz	??_pulsing^0,f,c
  2513   001516  D7FC               	bra	u3507
  2514   001518  D000               	nop2	
  2515   00151A                     l3161:
  2516                           
  2517                           ;main.c: 566:         _delay((unsigned long)((40)*(4000000/4000.0)));
  2518   00151A  5037               	movf	pulsing@id^0,w,c
  2519   00151C  1865               	xorwf	_mode^0,w,c
  2520   00151E  E109               	bnz	u3250
  2521   001520  5038               	movf	(pulsing@id+1)^0,w,c
  2522   001522  1866               	xorwf	(_mode+1)^0,w,c
  2523   001524  B4D8               	btfsc	status,2,c
  2524   001526  EF97  F00A         	goto	u3251
  2525   00152A  EF99  F00A         	goto	u3250
  2526   00152E                     u3251:
  2527   00152E  EF58  F009         	goto	l3069
  2528   001532                     u3250:
  2529   001532  0012               	return		;funcret
  2530   001534                     __end_of_pulsing:
  2531                           	callstack 0
  2532                           
  2533 ;; *************** function _init *****************
  2534 ;; Defined at:
  2535 ;;		line 21 in file "main.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2549 ;;      Params:         0       0       0       0       0       0       0
  2550 ;;      Locals:         0       0       0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0
  2552 ;;      Totals:         0       0       0       0       0       0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 2
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text5
  2564   002332                     __ptext5:
  2565                           	callstack 0
  2566   002332                     _init:
  2567                           	callstack 28
  2568   002332                     
  2569                           ;main.c: 22:     ADCON0bits.CHS = 0b0101;
  2570   002332  0E00               	movlw	0
  2571   002334  6E92               	movwf	146,c	;volatile
  2572                           
  2573                           ;main.c: 23: 
  2574   002336  0E00               	movlw	0
  2575   002338  6E93               	movwf	147,c	;volatile
  2576                           
  2577                           ;main.c: 24:     ADCON2bits.ADCS = 0b100;
  2578   00233A  0E00               	movlw	0
  2579   00233C  6E94               	movwf	148,c	;volatile
  2580                           
  2581                           ;main.c: 25:     ADCON2bits.ACQT = 0b010;
  2582   00233E  0E00               	movlw	0
  2583   002340  6E95               	movwf	149,c	;volatile
  2584                           
  2585                           ;main.c: 26:     ADCON0bits.ADON = 1;
  2586   002342  0E00               	movlw	0
  2587   002344  6E96               	movwf	150,c	;volatile
  2588   002346                     
  2589                           ;main.c: 27:     ADCON2bits.ADFM = 1;
  2590   002346  8296               	bsf	150,1,c	;volatile
  2591   002348                     
  2592                           ;main.c: 28: 
  2593   002348  8496               	bsf	150,2,c	;volatile
  2594   00234A                     
  2595                           ;main.c: 29:     PIE1bits.ADIE = 1;
  2596   00234A  8E92               	bsf	146,7,c	;volatile
  2597   00234C                     
  2598                           ;main.c: 30: 
  2599   00234C  8C92               	bsf	146,6,c	;volatile
  2600   00234E                     
  2601                           ;main.c: 31:     PIR1bits.ADIF = 0;
  2602   00234E  8094               	bsf	148,0,c	;volatile
  2603                           
  2604                           ;main.c: 33:     INTCONbits.PEIE = 1;
  2605   002350  50D3               	movf	211,w,c	;volatile
  2606   002352  0B8F               	andlw	-113
  2607   002354  0960               	iorlw	96
  2608   002356  6ED3               	movwf	211,c	;volatile
  2609   002358                     
  2610                           ;main.c: 34: 
  2611   002358  8A92               	bsf	146,5,c	;volatile
  2612   00235A                     
  2613                           ;main.c: 35:     INTCONbits.GIE = 1;
  2614   00235A  98C1               	bcf	193,4,c	;volatile
  2615   00235C                     
  2616                           ;main.c: 36:     ADCON0bits.GO = 1;
  2617   00235C  9AC1               	bcf	193,5,c	;volatile
  2618                           
  2619                           ;main.c: 37: }
  2620   00235E  50C1               	movf	193,w,c	;volatile
  2621   002360  0BF0               	andlw	-16
  2622   002362  0905               	iorlw	5
  2623   002364  6EC1               	movwf	193,c	;volatile
  2624                           
  2625                           ;main.c: 38: 
  2626   002366  50C2               	movf	194,w,c	;volatile
  2627   002368  0BC3               	andlw	-61
  2628   00236A  0914               	iorlw	20
  2629   00236C  6EC2               	movwf	194,c	;volatile
  2630                           
  2631                           ;main.c: 40:     LATAbits.LA0 = plane[0][0];
  2632   00236E  50C0               	movf	192,w,c	;volatile
  2633   002370  0BF8               	andlw	-8
  2634   002372  0904               	iorlw	4
  2635   002374  6EC0               	movwf	192,c	;volatile
  2636                           
  2637                           ;main.c: 41:     LATAbits.LA1 = plane[0][1];
  2638   002376  50C0               	movf	192,w,c	;volatile
  2639   002378  0BC7               	andlw	-57
  2640   00237A  0910               	iorlw	16
  2641   00237C  6EC0               	movwf	192,c	;volatile
  2642   00237E                     
  2643                           ;main.c: 42:     LATAbits.LA2 = plane[0][2];
  2644   00237E  80C2               	bsf	194,0,c	;volatile
  2645   002380                     
  2646                           ;main.c: 43:     LATAbits.LA3 = plane[0][3];
  2647   002380  8EC0               	bsf	192,7,c	;volatile
  2648   002382                     
  2649                           ;main.c: 45: 
  2650   002382  8C9D               	bsf	157,6,c	;volatile
  2651   002384                     
  2652                           ;main.c: 47:     LATCbits.LC2 = plane[1][1];
  2653   002384  9C9E               	bcf	158,6,c	;volatile
  2654   002386                     
  2655                           ;main.c: 49:     LATDbits.LD0 = plane[1][3];
  2656   002386  8CF2               	bsf	242,6,c	;volatile
  2657   002388                     
  2658                           ;main.c: 51: 
  2659   002388  8EF2               	bsf	242,7,c	;volatile
  2660   00238A                     
  2661                           ;main.c: 52:     LATBbits.LB0 = plane[2][0];
  2662   00238A  82C2               	bsf	194,1,c	;volatile
  2663   00238C  0012               	return		;funcret
  2664   00238E                     __end_of_init:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _hitler *****************
  2668 ;; Defined at:
  2669 ;;		line 238 in file "main.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  id              2   54[COMRAM] int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  cnt             2   63[COMRAM] int 
  2674 ;;  x               2   61[COMRAM] int 
  2675 ;;  itcnt           2   59[COMRAM] int 
  2676 ;;  it              2   57[COMRAM] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         2       0       0       0       0       0       0
  2687 ;;      Locals:         8       0       0       0       0       0       0
  2688 ;;      Temps:          1       0       0       0       0       0       0
  2689 ;;      Totals:        11       0       0       0       0       0       0
  2690 ;;Total ram usage:       11 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		_clear_cube
  2695 ;;		_clear_plane
  2696 ;;		_draw_plane
  2697 ;;		_set_plane
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text6
  2704   000012                     __ptext6:
  2705                           	callstack 0
  2706   000012                     _hitler:
  2707                           	callstack 26
  2708   000012                     
  2709                           ;main.c: 239:                 plane[2][1] = 1;
  2710   000012  EC51  F010         	call	_clear_cube	;wreg free
  2711   000016                     
  2712                           ;main.c: 240:                 plane[2][2] = 1;
  2713   000016  0E00               	movlw	0
  2714   000018  6E3F               	movwf	(hitler@x+1)^0,c
  2715   00001A  0E00               	movlw	0
  2716   00001C  6E3E               	movwf	hitler@x^0,c
  2717   00001E  0E00               	movlw	0
  2718   000020  6E3B               	movwf	(hitler@it+1)^0,c
  2719   000022  0E05               	movlw	5
  2720   000024  6E3A               	movwf	hitler@it^0,c
  2721   000026  0E00               	movlw	0
  2722   000028  6E41               	movwf	(hitler@cnt+1)^0,c
  2723   00002A  0E00               	movlw	0
  2724   00002C  6E40               	movwf	hitler@cnt^0,c
  2725   00002E  0E00               	movlw	0
  2726   000030  6E3D               	movwf	(hitler@itcnt+1)^0,c
  2727   000032  0E00               	movlw	0
  2728   000034  6E3C               	movwf	hitler@itcnt^0,c
  2729                           
  2730                           ;main.c: 241:                 plane[2][3] = 1;
  2731   000036  EF5C  F004         	goto	l2783
  2732   00003A                     l2583:
  2733                           
  2734                           ;main.c: 242:                 plane[2][4] = 1;
  2735   00003A  ECA6  F010         	call	_clear_plane	;wreg free
  2736   00003E                     
  2737                           ;main.c: 243:             }else if(cnt == 3){
  2738   00003E  EC89  F00D         	call	_draw_plane	;wreg free
  2739   000042                     
  2740                           ;main.c: 244:                 plane[2][0] = 1;
  2741   000042  503E               	movf	hitler@x^0,w,c
  2742   000044  103F               	iorwf	(hitler@x+1)^0,w,c
  2743   000046  A4D8               	btfss	status,2,c
  2744   000048  EF28  F000         	goto	u2431
  2745   00004C  EF2A  F000         	goto	u2430
  2746   000050                     u2431:
  2747   000050  EFAF  F000         	goto	l2609
  2748   000054                     u2430:
  2749   000054                     
  2750                           ;main.c: 245:                 plane[2][2] = 1;
  2751   000054  5040               	movf	hitler@cnt^0,w,c
  2752   000056  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2753   000058  A4D8               	btfss	status,2,c
  2754   00005A  EF31  F000         	goto	u2441
  2755   00005E  EF33  F000         	goto	u2440
  2756   000062                     u2441:
  2757   000062  EF46  F000         	goto	l2593
  2758   000066                     u2440:
  2759   000066                     l2591:
  2760                           
  2761                           ;main.c: 246:             }else if(cnt == 4){
  2762   000066  0E00               	movlw	0
  2763   000068  0100               	movlb	0	; () banked
  2764   00006A  6F95               	movwf	(_plane+21)& (0+255),b
  2765   00006C  0E01               	movlw	1
  2766   00006E  6F94               	movwf	(_plane+20)& (0+255),b
  2767                           
  2768                           ;main.c: 247:                 plane[2][0] = 1;
  2769   000070  0E00               	movlw	0
  2770   000072  6F97               	movwf	(_plane+23)& (0+255),b
  2771   000074  0E01               	movlw	1
  2772   000076  6F96               	movwf	(_plane+22)& (0+255),b
  2773                           
  2774                           ;main.c: 248:                 plane[2][2] = 1;
  2775   000078  0E00               	movlw	0
  2776   00007A  6F99               	movwf	(_plane+25)& (0+255),b
  2777   00007C  0E01               	movlw	1
  2778   00007E  6F98               	movwf	(_plane+24)& (0+255),b
  2779                           
  2780                           ;main.c: 249:                 plane[2][3] = 1;
  2781   000080  0E00               	movlw	0
  2782   000082  6F9D               	movwf	(_plane+29)& (0+255),b
  2783   000084  0E01               	movlw	1
  2784   000086  6F9C               	movwf	(_plane+28)& (0+255),b
  2785                           
  2786                           ;main.c: 250:                 plane[2][4] = 1;
  2787   000088  EF29  F004         	goto	l2763
  2788   00008C                     l2593:
  2789   00008C  0440               	decf	hitler@cnt^0,w,c
  2790   00008E  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2791   000090  A4D8               	btfss	status,2,c
  2792   000092  EF4D  F000         	goto	u2451
  2793   000096  EF4F  F000         	goto	u2450
  2794   00009A                     u2451:
  2795   00009A  EF5A  F000         	goto	l2597
  2796   00009E                     u2450:
  2797   00009E                     l2595:
  2798                           
  2799                           ;main.c: 251:             }
  2800   00009E  0E00               	movlw	0
  2801   0000A0  0100               	movlb	0	; () banked
  2802   0000A2  6F99               	movwf	(_plane+25)& (0+255),b
  2803   0000A4  0E01               	movlw	1
  2804   0000A6  6F98               	movwf	(_plane+24)& (0+255),b
  2805                           
  2806                           ;main.c: 252:         }else if(x==1){
  2807   0000A8  0E00               	movlw	0
  2808   0000AA  6F9D               	movwf	(_plane+29)& (0+255),b
  2809   0000AC  0E01               	movlw	1
  2810   0000AE  6F9C               	movwf	(_plane+28)& (0+255),b
  2811                           
  2812                           ;main.c: 253:             if(cnt==0){
  2813   0000B0  EF29  F004         	goto	l2763
  2814   0000B4                     l2597:
  2815   0000B4  0E02               	movlw	2
  2816   0000B6  1840               	xorwf	hitler@cnt^0,w,c
  2817   0000B8  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2818   0000BA  A4D8               	btfss	status,2,c
  2819   0000BC  EF62  F000         	goto	u2461
  2820   0000C0  EF64  F000         	goto	u2460
  2821   0000C4                     u2461:
  2822   0000C4  EF7B  F000         	goto	l2601
  2823   0000C8                     u2460:
  2824   0000C8                     l2599:
  2825                           
  2826                           ;main.c: 254:                 plane[4][0] = 1;
  2827   0000C8  0E00               	movlw	0
  2828   0000CA  0100               	movlb	0	; () banked
  2829   0000CC  6F95               	movwf	(_plane+21)& (0+255),b
  2830   0000CE  0E01               	movlw	1
  2831   0000D0  6F94               	movwf	(_plane+20)& (0+255),b
  2832                           
  2833                           ;main.c: 255:                 plane[3][1] = 1;
  2834   0000D2  0E00               	movlw	0
  2835   0000D4  6F97               	movwf	(_plane+23)& (0+255),b
  2836   0000D6  0E01               	movlw	1
  2837   0000D8  6F96               	movwf	(_plane+22)& (0+255),b
  2838                           
  2839                           ;main.c: 256:                 plane[2][2] = 1;
  2840   0000DA  0E00               	movlw	0
  2841   0000DC  6F99               	movwf	(_plane+25)& (0+255),b
  2842   0000DE  0E01               	movlw	1
  2843   0000E0  6F98               	movwf	(_plane+24)& (0+255),b
  2844                           
  2845                           ;main.c: 257:                 plane[0][4] = 1;
  2846   0000E2  0E00               	movlw	0
  2847   0000E4  6F9B               	movwf	(_plane+27)& (0+255),b
  2848   0000E6  0E01               	movlw	1
  2849   0000E8  6F9A               	movwf	(_plane+26)& (0+255),b
  2850                           
  2851                           ;main.c: 258:             }else if(cnt == 1){
  2852   0000EA  0E00               	movlw	0
  2853   0000EC  6F9D               	movwf	(_plane+29)& (0+255),b
  2854   0000EE  0E01               	movlw	1
  2855   0000F0  6F9C               	movwf	(_plane+28)& (0+255),b
  2856                           
  2857                           ;main.c: 259:                 plane[2][2] = 1;
  2858   0000F2  EF29  F004         	goto	l2763
  2859   0000F6                     l2601:
  2860   0000F6  0E03               	movlw	3
  2861   0000F8  1840               	xorwf	hitler@cnt^0,w,c
  2862   0000FA  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2863   0000FC  A4D8               	btfss	status,2,c
  2864   0000FE  EF83  F000         	goto	u2471
  2865   000102  EF85  F000         	goto	u2470
  2866   000106                     u2471:
  2867   000106  EF90  F000         	goto	l2605
  2868   00010A                     u2470:
  2869   00010A                     l2603:
  2870                           
  2871                           ;main.c: 260:                 plane[0][4] = 1;
  2872   00010A  0E00               	movlw	0
  2873   00010C  0100               	movlb	0	; () banked
  2874   00010E  6F95               	movwf	(_plane+21)& (0+255),b
  2875   000110  0E01               	movlw	1
  2876   000112  6F94               	movwf	(_plane+20)& (0+255),b
  2877                           
  2878                           ;main.c: 261:             }else if(cnt == 2){
  2879   000114  0E00               	movlw	0
  2880   000116  6F99               	movwf	(_plane+25)& (0+255),b
  2881   000118  0E01               	movlw	1
  2882   00011A  6F98               	movwf	(_plane+24)& (0+255),b
  2883                           
  2884                           ;main.c: 262:                 plane[4][0] = 1;
  2885   00011C  EF29  F004         	goto	l2763
  2886   000120                     l2605:
  2887   000120  0E04               	movlw	4
  2888   000122  1840               	xorwf	hitler@cnt^0,w,c
  2889   000124  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2890   000126  A4D8               	btfss	status,2,c
  2891   000128  EF98  F000         	goto	u2481
  2892   00012C  EF9A  F000         	goto	u2480
  2893   000130                     u2481:
  2894   000130  EFAD  F000         	goto	l192
  2895   000134                     u2480:
  2896   000134                     l2607:
  2897                           
  2898                           ;main.c: 263:                 plane[3][1] = 1;
  2899   000134  0E00               	movlw	0
  2900   000136  0100               	movlb	0	; () banked
  2901   000138  6F95               	movwf	(_plane+21)& (0+255),b
  2902   00013A  0E01               	movlw	1
  2903   00013C  6F94               	movwf	(_plane+20)& (0+255),b
  2904                           
  2905                           ;main.c: 264:                 plane[2][2] = 1;
  2906   00013E  0E00               	movlw	0
  2907   000140  6F99               	movwf	(_plane+25)& (0+255),b
  2908   000142  0E01               	movlw	1
  2909   000144  6F98               	movwf	(_plane+24)& (0+255),b
  2910                           
  2911                           ;main.c: 265:                 plane[1][3] = 1;
  2912   000146  0E00               	movlw	0
  2913   000148  6F9B               	movwf	(_plane+27)& (0+255),b
  2914   00014A  0E01               	movlw	1
  2915   00014C  6F9A               	movwf	(_plane+26)& (0+255),b
  2916                           
  2917                           ;main.c: 266:                 plane[0][4] = 1;
  2918   00014E  0E00               	movlw	0
  2919   000150  6F9D               	movwf	(_plane+29)& (0+255),b
  2920   000152  0E01               	movlw	1
  2921   000154  6F9C               	movwf	(_plane+28)& (0+255),b
  2922   000156  EF29  F004         	goto	l2763
  2923   00015A                     l192:
  2924   00015A  EF29  F004         	goto	l2763
  2925   00015E                     l2609:
  2926   00015E  043E               	decf	hitler@x^0,w,c
  2927   000160  103F               	iorwf	(hitler@x+1)^0,w,c
  2928   000162  A4D8               	btfss	status,2,c
  2929   000164  EFB6  F000         	goto	u2491
  2930   000168  EFB8  F000         	goto	u2490
  2931   00016C                     u2491:
  2932   00016C  EF3B  F001         	goto	l2631
  2933   000170                     u2490:
  2934   000170                     
  2935                           ;main.c: 269:                 plane[2][2] = 1;
  2936   000170  5040               	movf	hitler@cnt^0,w,c
  2937   000172  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2938   000174  A4D8               	btfss	status,2,c
  2939   000176  EFBF  F000         	goto	u2501
  2940   00017A  EFC1  F000         	goto	u2500
  2941   00017E                     u2501:
  2942   00017E  EFD4  F000         	goto	l2615
  2943   000182                     u2500:
  2944   000182                     
  2945                           ;main.c: 270:             }else if(cnt == 4){
  2946   000182  0E00               	movlw	0
  2947   000184  0100               	movlb	0	; () banked
  2948   000186  6FA9               	movwf	(_plane+41)& (0+255),b
  2949   000188  0E01               	movlw	1
  2950   00018A  6FA8               	movwf	(_plane+40)& (0+255),b
  2951                           
  2952                           ;main.c: 271:                 plane[4][0] = 1;
  2953   00018C  0E00               	movlw	0
  2954   00018E  6FA1               	movwf	(_plane+33)& (0+255),b
  2955   000190  0E01               	movlw	1
  2956   000192  6FA0               	movwf	(_plane+32)& (0+255),b
  2957                           
  2958                           ;main.c: 272:                 plane[2][2] = 1;
  2959   000194  0E00               	movlw	0
  2960   000196  6F99               	movwf	(_plane+25)& (0+255),b
  2961   000198  0E01               	movlw	1
  2962   00019A  6F98               	movwf	(_plane+24)& (0+255),b
  2963                           
  2964                           ;main.c: 273:                 plane[1][3] = 1;
  2965   00019C  0E00               	movlw	0
  2966   00019E  6F89               	movwf	(_plane+9)& (0+255),b
  2967   0001A0  0E01               	movlw	1
  2968   0001A2  6F88               	movwf	(_plane+8)& (0+255),b
  2969                           
  2970                           ;main.c: 274:                 plane[0][4] = 1;
  2971   0001A4  EF29  F004         	goto	l2763
  2972   0001A8                     l2615:
  2973   0001A8  0440               	decf	hitler@cnt^0,w,c
  2974   0001AA  1041               	iorwf	(hitler@cnt+1)^0,w,c
  2975   0001AC  A4D8               	btfss	status,2,c
  2976   0001AE  EFDB  F000         	goto	u2511
  2977   0001B2  EFDD  F000         	goto	u2510
  2978   0001B6                     u2511:
  2979   0001B6  EFE8  F000         	goto	l2619
  2980   0001BA                     u2510:
  2981   0001BA                     
  2982                           ;main.c: 275:             }
  2983   0001BA  0E00               	movlw	0
  2984   0001BC  0100               	movlb	0	; () banked
  2985   0001BE  6F99               	movwf	(_plane+25)& (0+255),b
  2986   0001C0  0E01               	movlw	1
  2987   0001C2  6F98               	movwf	(_plane+24)& (0+255),b
  2988                           
  2989                           ;main.c: 276:         }else if(x==2){
  2990   0001C4  0E00               	movlw	0
  2991   0001C6  6F89               	movwf	(_plane+9)& (0+255),b
  2992   0001C8  0E01               	movlw	1
  2993   0001CA  6F88               	movwf	(_plane+8)& (0+255),b
  2994                           
  2995                           ;main.c: 277:             if(cnt==0){
  2996   0001CC  EF29  F004         	goto	l2763
  2997   0001D0                     l2619:
  2998   0001D0  0E02               	movlw	2
  2999   0001D2  1840               	xorwf	hitler@cnt^0,w,c
  3000   0001D4  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3001   0001D6  A4D8               	btfss	status,2,c
  3002   0001D8  EFF0  F000         	goto	u2521
  3003   0001DC  EFF2  F000         	goto	u2520
  3004   0001E0                     u2521:
  3005   0001E0  EF09  F001         	goto	l2623
  3006   0001E4                     u2520:
  3007   0001E4                     
  3008                           ;main.c: 278:                 plane[4][2] = 1;
  3009   0001E4  0E00               	movlw	0
  3010   0001E6  0100               	movlb	0	; () banked
  3011   0001E8  6FA9               	movwf	(_plane+41)& (0+255),b
  3012   0001EA  0E01               	movlw	1
  3013   0001EC  6FA8               	movwf	(_plane+40)& (0+255),b
  3014                           
  3015                           ;main.c: 279:                 plane[3][2] = 1;
  3016   0001EE  0E00               	movlw	0
  3017   0001F0  6FA1               	movwf	(_plane+33)& (0+255),b
  3018   0001F2  0E01               	movlw	1
  3019   0001F4  6FA0               	movwf	(_plane+32)& (0+255),b
  3020                           
  3021                           ;main.c: 280:                 plane[2][2] = 1;
  3022   0001F6  0E00               	movlw	0
  3023   0001F8  6F99               	movwf	(_plane+25)& (0+255),b
  3024   0001FA  0E01               	movlw	1
  3025   0001FC  6F98               	movwf	(_plane+24)& (0+255),b
  3026                           
  3027                           ;main.c: 281:                 plane[0][2] = 1;
  3028   0001FE  0E00               	movlw	0
  3029   000200  6F91               	movwf	(_plane+17)& (0+255),b
  3030   000202  0E01               	movlw	1
  3031   000204  6F90               	movwf	(_plane+16)& (0+255),b
  3032                           
  3033                           ;main.c: 282:             }else if(cnt == 1){
  3034   000206  0E00               	movlw	0
  3035   000208  6F89               	movwf	(_plane+9)& (0+255),b
  3036   00020A  0E01               	movlw	1
  3037   00020C  6F88               	movwf	(_plane+8)& (0+255),b
  3038                           
  3039                           ;main.c: 283:                 plane[2][2] = 1;
  3040   00020E  EF29  F004         	goto	l2763
  3041   000212                     l2623:
  3042   000212  0E03               	movlw	3
  3043   000214  1840               	xorwf	hitler@cnt^0,w,c
  3044   000216  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3045   000218  A4D8               	btfss	status,2,c
  3046   00021A  EF11  F001         	goto	u2531
  3047   00021E  EF13  F001         	goto	u2530
  3048   000222                     u2531:
  3049   000222  EF1E  F001         	goto	l2627
  3050   000226                     u2530:
  3051   000226                     
  3052                           ;main.c: 284:                 plane[0][2] = 1;
  3053   000226  0E00               	movlw	0
  3054   000228  0100               	movlb	0	; () banked
  3055   00022A  6FA9               	movwf	(_plane+41)& (0+255),b
  3056   00022C  0E01               	movlw	1
  3057   00022E  6FA8               	movwf	(_plane+40)& (0+255),b
  3058                           
  3059                           ;main.c: 285:             }else if(cnt == 2){
  3060   000230  0E00               	movlw	0
  3061   000232  6F99               	movwf	(_plane+25)& (0+255),b
  3062   000234  0E01               	movlw	1
  3063   000236  6F98               	movwf	(_plane+24)& (0+255),b
  3064                           
  3065                           ;main.c: 286:                 plane[4][2] = 1;
  3066   000238  EF29  F004         	goto	l2763
  3067   00023C                     l2627:
  3068   00023C  0E04               	movlw	4
  3069   00023E  1840               	xorwf	hitler@cnt^0,w,c
  3070   000240  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3071   000242  A4D8               	btfss	status,2,c
  3072   000244  EF26  F001         	goto	u2541
  3073   000248  EF28  F001         	goto	u2540
  3074   00024C                     u2541:
  3075   00024C  EFAD  F000         	goto	l192
  3076   000250                     u2540:
  3077   000250                     
  3078                           ;main.c: 287:                 plane[3][2] = 1;
  3079   000250  0E00               	movlw	0
  3080   000252  0100               	movlb	0	; () banked
  3081   000254  6FA9               	movwf	(_plane+41)& (0+255),b
  3082   000256  0E01               	movlw	1
  3083   000258  6FA8               	movwf	(_plane+40)& (0+255),b
  3084                           
  3085                           ;main.c: 288:                 plane[2][2] = 1;
  3086   00025A  0E00               	movlw	0
  3087   00025C  6F99               	movwf	(_plane+25)& (0+255),b
  3088   00025E  0E01               	movlw	1
  3089   000260  6F98               	movwf	(_plane+24)& (0+255),b
  3090                           
  3091                           ;main.c: 289:                 plane[1][2] = 1;
  3092   000262  0E00               	movlw	0
  3093   000264  6F91               	movwf	(_plane+17)& (0+255),b
  3094   000266  0E01               	movlw	1
  3095   000268  6F90               	movwf	(_plane+16)& (0+255),b
  3096                           
  3097                           ;main.c: 290:                 plane[0][2] = 1;
  3098   00026A  0E00               	movlw	0
  3099   00026C  6F89               	movwf	(_plane+9)& (0+255),b
  3100   00026E  0E01               	movlw	1
  3101   000270  6F88               	movwf	(_plane+8)& (0+255),b
  3102   000272  EF29  F004         	goto	l2763
  3103   000276                     l2631:
  3104   000276  0E02               	movlw	2
  3105   000278  183E               	xorwf	hitler@x^0,w,c
  3106   00027A  103F               	iorwf	(hitler@x+1)^0,w,c
  3107   00027C  A4D8               	btfss	status,2,c
  3108   00027E  EF43  F001         	goto	u2551
  3109   000282  EF45  F001         	goto	u2550
  3110   000286                     u2551:
  3111   000286  EFC8  F001         	goto	l2653
  3112   00028A                     u2550:
  3113   00028A                     
  3114                           ;main.c: 293:                 plane[2][2] = 1;
  3115   00028A  5040               	movf	hitler@cnt^0,w,c
  3116   00028C  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3117   00028E  A4D8               	btfss	status,2,c
  3118   000290  EF4C  F001         	goto	u2561
  3119   000294  EF4E  F001         	goto	u2560
  3120   000298                     u2561:
  3121   000298  EF61  F001         	goto	l2637
  3122   00029C                     u2560:
  3123   00029C                     
  3124                           ;main.c: 294:             }else if(cnt == 4){
  3125   00029C  0E00               	movlw	0
  3126   00029E  0100               	movlb	0	; () banked
  3127   0002A0  6FAD               	movwf	(_plane+45)& (0+255),b
  3128   0002A2  0E01               	movlw	1
  3129   0002A4  6FAC               	movwf	(_plane+44)& (0+255),b
  3130                           
  3131                           ;main.c: 295:                 plane[4][2] = 1;
  3132   0002A6  0E00               	movlw	0
  3133   0002A8  6FA3               	movwf	(_plane+35)& (0+255),b
  3134   0002AA  0E01               	movlw	1
  3135   0002AC  6FA2               	movwf	(_plane+34)& (0+255),b
  3136                           
  3137                           ;main.c: 296:                 plane[2][2] = 1;
  3138   0002AE  0E00               	movlw	0
  3139   0002B0  6F99               	movwf	(_plane+25)& (0+255),b
  3140   0002B2  0E01               	movlw	1
  3141   0002B4  6F98               	movwf	(_plane+24)& (0+255),b
  3142                           
  3143                           ;main.c: 297:                 plane[1][2] = 1;
  3144   0002B6  0E00               	movlw	0
  3145   0002B8  6F85               	movwf	(_plane+5)& (0+255),b
  3146   0002BA  0E01               	movlw	1
  3147   0002BC  6F84               	movwf	(_plane+4)& (0+255),b
  3148                           
  3149                           ;main.c: 298:                 plane[0][2] = 1;
  3150   0002BE  EF29  F004         	goto	l2763
  3151   0002C2                     l2637:
  3152   0002C2  0440               	decf	hitler@cnt^0,w,c
  3153   0002C4  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3154   0002C6  A4D8               	btfss	status,2,c
  3155   0002C8  EF68  F001         	goto	u2571
  3156   0002CC  EF6A  F001         	goto	u2570
  3157   0002D0                     u2571:
  3158   0002D0  EF75  F001         	goto	l2641
  3159   0002D4                     u2570:
  3160   0002D4                     
  3161                           ;main.c: 299:             }
  3162   0002D4  0E00               	movlw	0
  3163   0002D6  0100               	movlb	0	; () banked
  3164   0002D8  6F99               	movwf	(_plane+25)& (0+255),b
  3165   0002DA  0E01               	movlw	1
  3166   0002DC  6F98               	movwf	(_plane+24)& (0+255),b
  3167                           
  3168                           ;main.c: 300:         }else if(x==3){
  3169   0002DE  0E00               	movlw	0
  3170   0002E0  6F85               	movwf	(_plane+5)& (0+255),b
  3171   0002E2  0E01               	movlw	1
  3172   0002E4  6F84               	movwf	(_plane+4)& (0+255),b
  3173                           
  3174                           ;main.c: 301:             if(cnt==0){
  3175   0002E6  EF29  F004         	goto	l2763
  3176   0002EA                     l2641:
  3177   0002EA  0E02               	movlw	2
  3178   0002EC  1840               	xorwf	hitler@cnt^0,w,c
  3179   0002EE  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3180   0002F0  A4D8               	btfss	status,2,c
  3181   0002F2  EF7D  F001         	goto	u2581
  3182   0002F6  EF7F  F001         	goto	u2580
  3183   0002FA                     u2581:
  3184   0002FA  EF96  F001         	goto	l2645
  3185   0002FE                     u2580:
  3186   0002FE                     
  3187                           ;main.c: 302:                 plane[4][4] = 1;
  3188   0002FE  0E00               	movlw	0
  3189   000300  0100               	movlb	0	; () banked
  3190   000302  6FAD               	movwf	(_plane+45)& (0+255),b
  3191   000304  0E01               	movlw	1
  3192   000306  6FAC               	movwf	(_plane+44)& (0+255),b
  3193                           
  3194                           ;main.c: 303:                 plane[3][3] = 1;
  3195   000308  0E00               	movlw	0
  3196   00030A  6FA3               	movwf	(_plane+35)& (0+255),b
  3197   00030C  0E01               	movlw	1
  3198   00030E  6FA2               	movwf	(_plane+34)& (0+255),b
  3199                           
  3200                           ;main.c: 304:                 plane[2][2] = 1;
  3201   000310  0E00               	movlw	0
  3202   000312  6F99               	movwf	(_plane+25)& (0+255),b
  3203   000314  0E01               	movlw	1
  3204   000316  6F98               	movwf	(_plane+24)& (0+255),b
  3205                           
  3206                           ;main.c: 305:                 plane[0][0] = 1;
  3207   000318  0E00               	movlw	0
  3208   00031A  6F8F               	movwf	(_plane+15)& (0+255),b
  3209   00031C  0E01               	movlw	1
  3210   00031E  6F8E               	movwf	(_plane+14)& (0+255),b
  3211                           
  3212                           ;main.c: 306:             }else if(cnt == 1){
  3213   000320  0E00               	movlw	0
  3214   000322  6F85               	movwf	(_plane+5)& (0+255),b
  3215   000324  0E01               	movlw	1
  3216   000326  6F84               	movwf	(_plane+4)& (0+255),b
  3217                           
  3218                           ;main.c: 307:                 plane[2][2] = 1;
  3219   000328  EF29  F004         	goto	l2763
  3220   00032C                     l2645:
  3221   00032C  0E03               	movlw	3
  3222   00032E  1840               	xorwf	hitler@cnt^0,w,c
  3223   000330  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3224   000332  A4D8               	btfss	status,2,c
  3225   000334  EF9E  F001         	goto	u2591
  3226   000338  EFA0  F001         	goto	u2590
  3227   00033C                     u2591:
  3228   00033C  EFAB  F001         	goto	l2649
  3229   000340                     u2590:
  3230   000340                     
  3231                           ;main.c: 308:                 plane[0][0] = 1;
  3232   000340  0E00               	movlw	0
  3233   000342  0100               	movlb	0	; () banked
  3234   000344  6FAD               	movwf	(_plane+45)& (0+255),b
  3235   000346  0E01               	movlw	1
  3236   000348  6FAC               	movwf	(_plane+44)& (0+255),b
  3237                           
  3238                           ;main.c: 309:             }else if(cnt == 2){
  3239   00034A  0E00               	movlw	0
  3240   00034C  6F99               	movwf	(_plane+25)& (0+255),b
  3241   00034E  0E01               	movlw	1
  3242   000350  6F98               	movwf	(_plane+24)& (0+255),b
  3243                           
  3244                           ;main.c: 310:                 plane[4][4] = 1;
  3245   000352  EF29  F004         	goto	l2763
  3246   000356                     l2649:
  3247   000356  0E04               	movlw	4
  3248   000358  1840               	xorwf	hitler@cnt^0,w,c
  3249   00035A  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3250   00035C  A4D8               	btfss	status,2,c
  3251   00035E  EFB3  F001         	goto	u2601
  3252   000362  EFB5  F001         	goto	u2600
  3253   000366                     u2601:
  3254   000366  EFAD  F000         	goto	l192
  3255   00036A                     u2600:
  3256   00036A                     
  3257                           ;main.c: 311:                 plane[3][3] = 1;
  3258   00036A  0E00               	movlw	0
  3259   00036C  0100               	movlb	0	; () banked
  3260   00036E  6FAD               	movwf	(_plane+45)& (0+255),b
  3261   000370  0E01               	movlw	1
  3262   000372  6FAC               	movwf	(_plane+44)& (0+255),b
  3263                           
  3264                           ;main.c: 312:                 plane[2][2] = 1;
  3265   000374  0E00               	movlw	0
  3266   000376  6F99               	movwf	(_plane+25)& (0+255),b
  3267   000378  0E01               	movlw	1
  3268   00037A  6F98               	movwf	(_plane+24)& (0+255),b
  3269                           
  3270                           ;main.c: 313:                 plane[1][1] = 1;
  3271   00037C  0E00               	movlw	0
  3272   00037E  6F8F               	movwf	(_plane+15)& (0+255),b
  3273   000380  0E01               	movlw	1
  3274   000382  6F8E               	movwf	(_plane+14)& (0+255),b
  3275                           
  3276                           ;main.c: 314:                 plane[0][0] = 1;
  3277   000384  0E00               	movlw	0
  3278   000386  6F85               	movwf	(_plane+5)& (0+255),b
  3279   000388  0E01               	movlw	1
  3280   00038A  6F84               	movwf	(_plane+4)& (0+255),b
  3281   00038C  EF29  F004         	goto	l2763
  3282   000390                     l2653:
  3283   000390  0E03               	movlw	3
  3284   000392  183E               	xorwf	hitler@x^0,w,c
  3285   000394  103F               	iorwf	(hitler@x+1)^0,w,c
  3286   000396  A4D8               	btfss	status,2,c
  3287   000398  EFD0  F001         	goto	u2611
  3288   00039C  EFD2  F001         	goto	u2610
  3289   0003A0                     u2611:
  3290   0003A0  EF55  F002         	goto	l2675
  3291   0003A4                     u2610:
  3292   0003A4                     
  3293                           ;main.c: 317:                 plane[2][2] = 1;
  3294   0003A4  5040               	movf	hitler@cnt^0,w,c
  3295   0003A6  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3296   0003A8  A4D8               	btfss	status,2,c
  3297   0003AA  EFD9  F001         	goto	u2621
  3298   0003AE  EFDB  F001         	goto	u2620
  3299   0003B2                     u2621:
  3300   0003B2  EFEE  F001         	goto	l2659
  3301   0003B6                     u2620:
  3302   0003B6                     
  3303                           ;main.c: 318:             }else if(cnt == 4){
  3304   0003B6  0E00               	movlw	0
  3305   0003B8  0100               	movlb	0	; () banked
  3306   0003BA  6FB1               	movwf	(_plane+49)& (0+255),b
  3307   0003BC  0E01               	movlw	1
  3308   0003BE  6FB0               	movwf	(_plane+48)& (0+255),b
  3309                           
  3310                           ;main.c: 319:                 plane[4][4] = 1;
  3311   0003C0  0E00               	movlw	0
  3312   0003C2  6FA5               	movwf	(_plane+37)& (0+255),b
  3313   0003C4  0E01               	movlw	1
  3314   0003C6  6FA4               	movwf	(_plane+36)& (0+255),b
  3315                           
  3316                           ;main.c: 320:                 plane[2][2] = 1;
  3317   0003C8  0E00               	movlw	0
  3318   0003CA  6F99               	movwf	(_plane+25)& (0+255),b
  3319   0003CC  0E01               	movlw	1
  3320   0003CE  6F98               	movwf	(_plane+24)& (0+255),b
  3321                           
  3322                           ;main.c: 321:                 plane[1][1] = 1;
  3323   0003D0  0E00               	movlw	0
  3324   0003D2  6F81               	movwf	(_plane+1)& (0+255),b
  3325   0003D4  0E01               	movlw	1
  3326   0003D6  6F80               	movwf	_plane& (0+255),b
  3327                           
  3328                           ;main.c: 322:                 plane[0][0] = 1;
  3329   0003D8  EF29  F004         	goto	l2763
  3330   0003DC                     l2659:
  3331   0003DC  0440               	decf	hitler@cnt^0,w,c
  3332   0003DE  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3333   0003E0  A4D8               	btfss	status,2,c
  3334   0003E2  EFF5  F001         	goto	u2631
  3335   0003E6  EFF7  F001         	goto	u2630
  3336   0003EA                     u2631:
  3337   0003EA  EF02  F002         	goto	l2663
  3338   0003EE                     u2630:
  3339   0003EE                     
  3340                           ;main.c: 323:             }
  3341   0003EE  0E00               	movlw	0
  3342   0003F0  0100               	movlb	0	; () banked
  3343   0003F2  6F99               	movwf	(_plane+25)& (0+255),b
  3344   0003F4  0E01               	movlw	1
  3345   0003F6  6F98               	movwf	(_plane+24)& (0+255),b
  3346                           
  3347                           ;main.c: 324:         }else if(x==4){
  3348   0003F8  0E00               	movlw	0
  3349   0003FA  6F81               	movwf	(_plane+1)& (0+255),b
  3350   0003FC  0E01               	movlw	1
  3351   0003FE  6F80               	movwf	_plane& (0+255),b
  3352                           
  3353                           ;main.c: 325:             if(cnt==0){
  3354   000400  EF29  F004         	goto	l2763
  3355   000404                     l2663:
  3356   000404  0E02               	movlw	2
  3357   000406  1840               	xorwf	hitler@cnt^0,w,c
  3358   000408  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3359   00040A  A4D8               	btfss	status,2,c
  3360   00040C  EF0A  F002         	goto	u2641
  3361   000410  EF0C  F002         	goto	u2640
  3362   000414                     u2641:
  3363   000414  EF23  F002         	goto	l2667
  3364   000418                     u2640:
  3365   000418                     l2665:
  3366                           
  3367                           ;main.c: 326:                 plane[2][0] = 1;
  3368   000418  0E00               	movlw	0
  3369   00041A  0100               	movlb	0	; () banked
  3370   00041C  6FB1               	movwf	(_plane+49)& (0+255),b
  3371   00041E  0E01               	movlw	1
  3372   000420  6FB0               	movwf	(_plane+48)& (0+255),b
  3373                           
  3374                           ;main.c: 327:                 plane[2][2] = 1;
  3375   000422  0E00               	movlw	0
  3376   000424  6FA5               	movwf	(_plane+37)& (0+255),b
  3377   000426  0E01               	movlw	1
  3378   000428  6FA4               	movwf	(_plane+36)& (0+255),b
  3379                           
  3380                           ;main.c: 328:                 plane[2][3] = 1;
  3381   00042A  0E00               	movlw	0
  3382   00042C  6F99               	movwf	(_plane+25)& (0+255),b
  3383   00042E  0E01               	movlw	1
  3384   000430  6F98               	movwf	(_plane+24)& (0+255),b
  3385                           
  3386                           ;main.c: 329:                 plane[2][4] = 1;
  3387   000432  0E00               	movlw	0
  3388   000434  6F8D               	movwf	(_plane+13)& (0+255),b
  3389   000436  0E01               	movlw	1
  3390   000438  6F8C               	movwf	(_plane+12)& (0+255),b
  3391                           
  3392                           ;main.c: 330:             }else if(cnt == 1){
  3393   00043A  0E00               	movlw	0
  3394   00043C  6F81               	movwf	(_plane+1)& (0+255),b
  3395   00043E  0E01               	movlw	1
  3396   000440  6F80               	movwf	_plane& (0+255),b
  3397                           
  3398                           ;main.c: 331:                 plane[2][0] = 1;
  3399   000442  EF29  F004         	goto	l2763
  3400   000446                     l2667:
  3401   000446  0E03               	movlw	3
  3402   000448  1840               	xorwf	hitler@cnt^0,w,c
  3403   00044A  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3404   00044C  A4D8               	btfss	status,2,c
  3405   00044E  EF2B  F002         	goto	u2651
  3406   000452  EF2D  F002         	goto	u2650
  3407   000456                     u2651:
  3408   000456  EF38  F002         	goto	l2671
  3409   00045A                     u2650:
  3410   00045A                     
  3411                           ;main.c: 332:                 plane[2][2] = 1;
  3412   00045A  0E00               	movlw	0
  3413   00045C  0100               	movlb	0	; () banked
  3414   00045E  6FB1               	movwf	(_plane+49)& (0+255),b
  3415   000460  0E01               	movlw	1
  3416   000462  6FB0               	movwf	(_plane+48)& (0+255),b
  3417                           
  3418                           ;main.c: 333:             }else if(cnt == 2){
  3419   000464  0E00               	movlw	0
  3420   000466  6F99               	movwf	(_plane+25)& (0+255),b
  3421   000468  0E01               	movlw	1
  3422   00046A  6F98               	movwf	(_plane+24)& (0+255),b
  3423                           
  3424                           ;main.c: 334:                 plane[2][0] = 1;
  3425   00046C  EF29  F004         	goto	l2763
  3426   000470                     l2671:
  3427   000470  0E04               	movlw	4
  3428   000472  1840               	xorwf	hitler@cnt^0,w,c
  3429   000474  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3430   000476  A4D8               	btfss	status,2,c
  3431   000478  EF40  F002         	goto	u2661
  3432   00047C  EF42  F002         	goto	u2660
  3433   000480                     u2661:
  3434   000480  EFAD  F000         	goto	l192
  3435   000484                     u2660:
  3436   000484                     
  3437                           ;main.c: 335:                 plane[2][1] = 1;
  3438   000484  0E00               	movlw	0
  3439   000486  0100               	movlb	0	; () banked
  3440   000488  6FB1               	movwf	(_plane+49)& (0+255),b
  3441   00048A  0E01               	movlw	1
  3442   00048C  6FB0               	movwf	(_plane+48)& (0+255),b
  3443                           
  3444                           ;main.c: 336:                 plane[2][2] = 1;
  3445   00048E  0E00               	movlw	0
  3446   000490  6F99               	movwf	(_plane+25)& (0+255),b
  3447   000492  0E01               	movlw	1
  3448   000494  6F98               	movwf	(_plane+24)& (0+255),b
  3449                           
  3450                           ;main.c: 337:                 plane[2][3] = 1;
  3451   000496  0E00               	movlw	0
  3452   000498  6F8D               	movwf	(_plane+13)& (0+255),b
  3453   00049A  0E01               	movlw	1
  3454   00049C  6F8C               	movwf	(_plane+12)& (0+255),b
  3455                           
  3456                           ;main.c: 338:                 plane[2][4] = 1;
  3457   00049E  0E00               	movlw	0
  3458   0004A0  6F81               	movwf	(_plane+1)& (0+255),b
  3459   0004A2  0E01               	movlw	1
  3460   0004A4  6F80               	movwf	_plane& (0+255),b
  3461   0004A6  EF29  F004         	goto	l2763
  3462   0004AA                     l2675:
  3463   0004AA  0E04               	movlw	4
  3464   0004AC  183E               	xorwf	hitler@x^0,w,c
  3465   0004AE  103F               	iorwf	(hitler@x+1)^0,w,c
  3466   0004B0  A4D8               	btfss	status,2,c
  3467   0004B2  EF5D  F002         	goto	u2671
  3468   0004B6  EF5F  F002         	goto	u2670
  3469   0004BA                     u2671:
  3470   0004BA  EF99  F002         	goto	l2697
  3471   0004BE                     u2670:
  3472   0004BE                     
  3473                           ;main.c: 341:                 plane[2][4] = 1;
  3474   0004BE  5040               	movf	hitler@cnt^0,w,c
  3475   0004C0  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3476   0004C2  A4D8               	btfss	status,2,c
  3477   0004C4  EF66  F002         	goto	u2681
  3478   0004C8  EF68  F002         	goto	u2680
  3479   0004CC                     u2681:
  3480   0004CC  EF6A  F002         	goto	l2681
  3481   0004D0                     u2680:
  3482   0004D0  EF9A  F000         	goto	l2607
  3483   0004D4                     l2681:
  3484   0004D4  0440               	decf	hitler@cnt^0,w,c
  3485   0004D6  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3486   0004D8  A4D8               	btfss	status,2,c
  3487   0004DA  EF71  F002         	goto	u2691
  3488   0004DE  EF73  F002         	goto	u2690
  3489   0004E2                     u2691:
  3490   0004E2  EF75  F002         	goto	l2685
  3491   0004E6                     u2690:
  3492   0004E6  EF85  F000         	goto	l2603
  3493   0004EA                     l2685:
  3494   0004EA  0E02               	movlw	2
  3495   0004EC  1840               	xorwf	hitler@cnt^0,w,c
  3496   0004EE  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3497   0004F0  A4D8               	btfss	status,2,c
  3498   0004F2  EF7D  F002         	goto	u2701
  3499   0004F6  EF7F  F002         	goto	u2700
  3500   0004FA                     u2701:
  3501   0004FA  EF81  F002         	goto	l2689
  3502   0004FE                     u2700:
  3503   0004FE  EF64  F000         	goto	l2599
  3504   000502                     l2689:
  3505   000502  0E03               	movlw	3
  3506   000504  1840               	xorwf	hitler@cnt^0,w,c
  3507   000506  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3508   000508  A4D8               	btfss	status,2,c
  3509   00050A  EF89  F002         	goto	u2711
  3510   00050E  EF8B  F002         	goto	u2710
  3511   000512                     u2711:
  3512   000512  EF8D  F002         	goto	l2693
  3513   000516                     u2710:
  3514   000516  EF4F  F000         	goto	l2595
  3515   00051A                     l2693:
  3516   00051A  0E04               	movlw	4
  3517   00051C  1840               	xorwf	hitler@cnt^0,w,c
  3518   00051E  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3519   000520  A4D8               	btfss	status,2,c
  3520   000522  EF95  F002         	goto	u2721
  3521   000526  EF97  F002         	goto	u2720
  3522   00052A                     u2721:
  3523   00052A  EFAD  F000         	goto	l192
  3524   00052E                     u2720:
  3525   00052E  EF33  F000         	goto	l2591
  3526   000532                     l2697:
  3527   000532  0E05               	movlw	5
  3528   000534  183E               	xorwf	hitler@x^0,w,c
  3529   000536  103F               	iorwf	(hitler@x+1)^0,w,c
  3530   000538  A4D8               	btfss	status,2,c
  3531   00053A  EFA1  F002         	goto	u2731
  3532   00053E  EFA3  F002         	goto	u2730
  3533   000542                     u2731:
  3534   000542  EF26  F003         	goto	l2719
  3535   000546                     u2730:
  3536   000546                     
  3537                           ;main.c: 365:                 plane[2][2] = 1;
  3538   000546  5040               	movf	hitler@cnt^0,w,c
  3539   000548  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3540   00054A  A4D8               	btfss	status,2,c
  3541   00054C  EFAA  F002         	goto	u2741
  3542   000550  EFAC  F002         	goto	u2740
  3543   000554                     u2741:
  3544   000554  EFBF  F002         	goto	l2703
  3545   000558                     u2740:
  3546   000558                     
  3547                           ;main.c: 366:             }else if(cnt == 4){
  3548   000558  0E00               	movlw	0
  3549   00055A  0100               	movlb	0	; () banked
  3550   00055C  6F89               	movwf	(_plane+9)& (0+255),b
  3551   00055E  0E01               	movlw	1
  3552   000560  6F88               	movwf	(_plane+8)& (0+255),b
  3553                           
  3554                           ;main.c: 367:                 plane[0][4] = 1;
  3555   000562  0E00               	movlw	0
  3556   000564  6F91               	movwf	(_plane+17)& (0+255),b
  3557   000566  0E01               	movlw	1
  3558   000568  6F90               	movwf	(_plane+16)& (0+255),b
  3559                           
  3560                           ;main.c: 368:                 plane[2][2] = 1;
  3561   00056A  0E00               	movlw	0
  3562   00056C  6F99               	movwf	(_plane+25)& (0+255),b
  3563   00056E  0E01               	movlw	1
  3564   000570  6F98               	movwf	(_plane+24)& (0+255),b
  3565                           
  3566                           ;main.c: 369:                 plane[3][1] = 1;
  3567   000572  0E00               	movlw	0
  3568   000574  6FA9               	movwf	(_plane+41)& (0+255),b
  3569   000576  0E01               	movlw	1
  3570   000578  6FA8               	movwf	(_plane+40)& (0+255),b
  3571                           
  3572                           ;main.c: 370:                 plane[4][0] = 1;
  3573   00057A  EF29  F004         	goto	l2763
  3574   00057E                     l2703:
  3575   00057E  0440               	decf	hitler@cnt^0,w,c
  3576   000580  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3577   000582  A4D8               	btfss	status,2,c
  3578   000584  EFC6  F002         	goto	u2751
  3579   000588  EFC8  F002         	goto	u2750
  3580   00058C                     u2751:
  3581   00058C  EFD3  F002         	goto	l2707
  3582   000590                     u2750:
  3583   000590                     
  3584                           ;main.c: 371:             }
  3585   000590  0E00               	movlw	0
  3586   000592  0100               	movlb	0	; () banked
  3587   000594  6F99               	movwf	(_plane+25)& (0+255),b
  3588   000596  0E01               	movlw	1
  3589   000598  6F98               	movwf	(_plane+24)& (0+255),b
  3590                           
  3591                           ;main.c: 372:         }else if(x==6){
  3592   00059A  0E00               	movlw	0
  3593   00059C  6FA9               	movwf	(_plane+41)& (0+255),b
  3594   00059E  0E01               	movlw	1
  3595   0005A0  6FA8               	movwf	(_plane+40)& (0+255),b
  3596                           
  3597                           ;main.c: 373:             if(cnt==0){
  3598   0005A2  EF29  F004         	goto	l2763
  3599   0005A6                     l2707:
  3600   0005A6  0E02               	movlw	2
  3601   0005A8  1840               	xorwf	hitler@cnt^0,w,c
  3602   0005AA  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3603   0005AC  A4D8               	btfss	status,2,c
  3604   0005AE  EFDB  F002         	goto	u2761
  3605   0005B2  EFDD  F002         	goto	u2760
  3606   0005B6                     u2761:
  3607   0005B6  EFF4  F002         	goto	l2711
  3608   0005BA                     u2760:
  3609   0005BA                     
  3610                           ;main.c: 374:                 plane[0][2] = 1;
  3611   0005BA  0E00               	movlw	0
  3612   0005BC  0100               	movlb	0	; () banked
  3613   0005BE  6F89               	movwf	(_plane+9)& (0+255),b
  3614   0005C0  0E01               	movlw	1
  3615   0005C2  6F88               	movwf	(_plane+8)& (0+255),b
  3616                           
  3617                           ;main.c: 375:                 plane[1][2] = 1;
  3618   0005C4  0E00               	movlw	0
  3619   0005C6  6F91               	movwf	(_plane+17)& (0+255),b
  3620   0005C8  0E01               	movlw	1
  3621   0005CA  6F90               	movwf	(_plane+16)& (0+255),b
  3622                           
  3623                           ;main.c: 376:                 plane[2][2] = 1;
  3624   0005CC  0E00               	movlw	0
  3625   0005CE  6F99               	movwf	(_plane+25)& (0+255),b
  3626   0005D0  0E01               	movlw	1
  3627   0005D2  6F98               	movwf	(_plane+24)& (0+255),b
  3628                           
  3629                           ;main.c: 377:                 plane[4][2] = 1;
  3630   0005D4  0E00               	movlw	0
  3631   0005D6  6FA1               	movwf	(_plane+33)& (0+255),b
  3632   0005D8  0E01               	movlw	1
  3633   0005DA  6FA0               	movwf	(_plane+32)& (0+255),b
  3634                           
  3635                           ;main.c: 378:             }else if(cnt == 1){
  3636   0005DC  0E00               	movlw	0
  3637   0005DE  6FA9               	movwf	(_plane+41)& (0+255),b
  3638   0005E0  0E01               	movlw	1
  3639   0005E2  6FA8               	movwf	(_plane+40)& (0+255),b
  3640                           
  3641                           ;main.c: 379:                 plane[2][2] = 1;
  3642   0005E4  EF29  F004         	goto	l2763
  3643   0005E8                     l2711:
  3644   0005E8  0E03               	movlw	3
  3645   0005EA  1840               	xorwf	hitler@cnt^0,w,c
  3646   0005EC  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3647   0005EE  A4D8               	btfss	status,2,c
  3648   0005F0  EFFC  F002         	goto	u2771
  3649   0005F4  EFFE  F002         	goto	u2770
  3650   0005F8                     u2771:
  3651   0005F8  EF09  F003         	goto	l2715
  3652   0005FC                     u2770:
  3653   0005FC                     
  3654                           ;main.c: 380:                 plane[4][2] = 1;
  3655   0005FC  0E00               	movlw	0
  3656   0005FE  0100               	movlb	0	; () banked
  3657   000600  6F89               	movwf	(_plane+9)& (0+255),b
  3658   000602  0E01               	movlw	1
  3659   000604  6F88               	movwf	(_plane+8)& (0+255),b
  3660                           
  3661                           ;main.c: 381:             }else if(cnt == 2){
  3662   000606  0E00               	movlw	0
  3663   000608  6F99               	movwf	(_plane+25)& (0+255),b
  3664   00060A  0E01               	movlw	1
  3665   00060C  6F98               	movwf	(_plane+24)& (0+255),b
  3666                           
  3667                           ;main.c: 382:                 plane[0][2] = 1;
  3668   00060E  EF29  F004         	goto	l2763
  3669   000612                     l2715:
  3670   000612  0E04               	movlw	4
  3671   000614  1840               	xorwf	hitler@cnt^0,w,c
  3672   000616  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3673   000618  A4D8               	btfss	status,2,c
  3674   00061A  EF11  F003         	goto	u2781
  3675   00061E  EF13  F003         	goto	u2780
  3676   000622                     u2781:
  3677   000622  EFAD  F000         	goto	l192
  3678   000626                     u2780:
  3679   000626                     
  3680                           ;main.c: 383:                 plane[1][2] = 1;
  3681   000626  0E00               	movlw	0
  3682   000628  0100               	movlb	0	; () banked
  3683   00062A  6F89               	movwf	(_plane+9)& (0+255),b
  3684   00062C  0E01               	movlw	1
  3685   00062E  6F88               	movwf	(_plane+8)& (0+255),b
  3686                           
  3687                           ;main.c: 384:                 plane[2][2] = 1;
  3688   000630  0E00               	movlw	0
  3689   000632  6F99               	movwf	(_plane+25)& (0+255),b
  3690   000634  0E01               	movlw	1
  3691   000636  6F98               	movwf	(_plane+24)& (0+255),b
  3692                           
  3693                           ;main.c: 385:                 plane[3][2] = 1;
  3694   000638  0E00               	movlw	0
  3695   00063A  6FA1               	movwf	(_plane+33)& (0+255),b
  3696   00063C  0E01               	movlw	1
  3697   00063E  6FA0               	movwf	(_plane+32)& (0+255),b
  3698                           
  3699                           ;main.c: 386:                 plane[4][2] = 1;
  3700   000640  0E00               	movlw	0
  3701   000642  6FA9               	movwf	(_plane+41)& (0+255),b
  3702   000644  0E01               	movlw	1
  3703   000646  6FA8               	movwf	(_plane+40)& (0+255),b
  3704   000648  EF29  F004         	goto	l2763
  3705   00064C                     l2719:
  3706   00064C  0E06               	movlw	6
  3707   00064E  183E               	xorwf	hitler@x^0,w,c
  3708   000650  103F               	iorwf	(hitler@x+1)^0,w,c
  3709   000652  A4D8               	btfss	status,2,c
  3710   000654  EF2E  F003         	goto	u2791
  3711   000658  EF30  F003         	goto	u2790
  3712   00065C                     u2791:
  3713   00065C  EFB3  F003         	goto	l2741
  3714   000660                     u2790:
  3715   000660                     
  3716                           ;main.c: 389:                 plane[2][2] = 1;
  3717   000660  5040               	movf	hitler@cnt^0,w,c
  3718   000662  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3719   000664  A4D8               	btfss	status,2,c
  3720   000666  EF37  F003         	goto	u2801
  3721   00066A  EF39  F003         	goto	u2800
  3722   00066E                     u2801:
  3723   00066E  EF4C  F003         	goto	l2725
  3724   000672                     u2800:
  3725   000672                     
  3726                           ;main.c: 390:             }else if(cnt == 4){
  3727   000672  0E00               	movlw	0
  3728   000674  0100               	movlb	0	; () banked
  3729   000676  6F85               	movwf	(_plane+5)& (0+255),b
  3730   000678  0E01               	movlw	1
  3731   00067A  6F84               	movwf	(_plane+4)& (0+255),b
  3732                           
  3733                           ;main.c: 391:                 plane[0][2] = 1;
  3734   00067C  0E00               	movlw	0
  3735   00067E  6F8F               	movwf	(_plane+15)& (0+255),b
  3736   000680  0E01               	movlw	1
  3737   000682  6F8E               	movwf	(_plane+14)& (0+255),b
  3738                           
  3739                           ;main.c: 392:                 plane[2][2] = 1;
  3740   000684  0E00               	movlw	0
  3741   000686  6F99               	movwf	(_plane+25)& (0+255),b
  3742   000688  0E01               	movlw	1
  3743   00068A  6F98               	movwf	(_plane+24)& (0+255),b
  3744                           
  3745                           ;main.c: 393:                 plane[3][2] = 1;
  3746   00068C  0E00               	movlw	0
  3747   00068E  6FAD               	movwf	(_plane+45)& (0+255),b
  3748   000690  0E01               	movlw	1
  3749   000692  6FAC               	movwf	(_plane+44)& (0+255),b
  3750                           
  3751                           ;main.c: 394:                 plane[4][2] = 1;
  3752   000694  EF29  F004         	goto	l2763
  3753   000698                     l2725:
  3754   000698  0440               	decf	hitler@cnt^0,w,c
  3755   00069A  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3756   00069C  A4D8               	btfss	status,2,c
  3757   00069E  EF53  F003         	goto	u2811
  3758   0006A2  EF55  F003         	goto	u2810
  3759   0006A6                     u2811:
  3760   0006A6  EF60  F003         	goto	l2729
  3761   0006AA                     u2810:
  3762   0006AA                     
  3763                           ;main.c: 395:             }
  3764   0006AA  0E00               	movlw	0
  3765   0006AC  0100               	movlb	0	; () banked
  3766   0006AE  6F99               	movwf	(_plane+25)& (0+255),b
  3767   0006B0  0E01               	movlw	1
  3768   0006B2  6F98               	movwf	(_plane+24)& (0+255),b
  3769                           
  3770                           ;main.c: 396:         }else if(x==7){
  3771   0006B4  0E00               	movlw	0
  3772   0006B6  6FAD               	movwf	(_plane+45)& (0+255),b
  3773   0006B8  0E01               	movlw	1
  3774   0006BA  6FAC               	movwf	(_plane+44)& (0+255),b
  3775                           
  3776                           ;main.c: 397:             if(cnt==0){
  3777   0006BC  EF29  F004         	goto	l2763
  3778   0006C0                     l2729:
  3779   0006C0  0E02               	movlw	2
  3780   0006C2  1840               	xorwf	hitler@cnt^0,w,c
  3781   0006C4  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3782   0006C6  A4D8               	btfss	status,2,c
  3783   0006C8  EF68  F003         	goto	u2821
  3784   0006CC  EF6A  F003         	goto	u2820
  3785   0006D0                     u2821:
  3786   0006D0  EF81  F003         	goto	l2733
  3787   0006D4                     u2820:
  3788   0006D4                     
  3789                           ;main.c: 398:                 plane[0][0] = 1;
  3790   0006D4  0E00               	movlw	0
  3791   0006D6  0100               	movlb	0	; () banked
  3792   0006D8  6F85               	movwf	(_plane+5)& (0+255),b
  3793   0006DA  0E01               	movlw	1
  3794   0006DC  6F84               	movwf	(_plane+4)& (0+255),b
  3795                           
  3796                           ;main.c: 399:                 plane[1][1] = 1;
  3797   0006DE  0E00               	movlw	0
  3798   0006E0  6F8F               	movwf	(_plane+15)& (0+255),b
  3799   0006E2  0E01               	movlw	1
  3800   0006E4  6F8E               	movwf	(_plane+14)& (0+255),b
  3801                           
  3802                           ;main.c: 400:                 plane[2][2] = 1;
  3803   0006E6  0E00               	movlw	0
  3804   0006E8  6F99               	movwf	(_plane+25)& (0+255),b
  3805   0006EA  0E01               	movlw	1
  3806   0006EC  6F98               	movwf	(_plane+24)& (0+255),b
  3807                           
  3808                           ;main.c: 401:                 plane[4][4] = 1;
  3809   0006EE  0E00               	movlw	0
  3810   0006F0  6FA3               	movwf	(_plane+35)& (0+255),b
  3811   0006F2  0E01               	movlw	1
  3812   0006F4  6FA2               	movwf	(_plane+34)& (0+255),b
  3813                           
  3814                           ;main.c: 402:             }else if(cnt == 1){
  3815   0006F6  0E00               	movlw	0
  3816   0006F8  6FAD               	movwf	(_plane+45)& (0+255),b
  3817   0006FA  0E01               	movlw	1
  3818   0006FC  6FAC               	movwf	(_plane+44)& (0+255),b
  3819                           
  3820                           ;main.c: 403:                 plane[2][2] = 1;
  3821   0006FE  EF29  F004         	goto	l2763
  3822   000702                     l2733:
  3823   000702  0E03               	movlw	3
  3824   000704  1840               	xorwf	hitler@cnt^0,w,c
  3825   000706  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3826   000708  A4D8               	btfss	status,2,c
  3827   00070A  EF89  F003         	goto	u2831
  3828   00070E  EF8B  F003         	goto	u2830
  3829   000712                     u2831:
  3830   000712  EF96  F003         	goto	l2737
  3831   000716                     u2830:
  3832   000716                     
  3833                           ;main.c: 404:                 plane[4][4] = 1;
  3834   000716  0E00               	movlw	0
  3835   000718  0100               	movlb	0	; () banked
  3836   00071A  6F85               	movwf	(_plane+5)& (0+255),b
  3837   00071C  0E01               	movlw	1
  3838   00071E  6F84               	movwf	(_plane+4)& (0+255),b
  3839                           
  3840                           ;main.c: 405:             }else if(cnt == 2){
  3841   000720  0E00               	movlw	0
  3842   000722  6F99               	movwf	(_plane+25)& (0+255),b
  3843   000724  0E01               	movlw	1
  3844   000726  6F98               	movwf	(_plane+24)& (0+255),b
  3845                           
  3846                           ;main.c: 406:                 plane[4][4] = 1;
  3847   000728  EF29  F004         	goto	l2763
  3848   00072C                     l2737:
  3849   00072C  0E04               	movlw	4
  3850   00072E  1840               	xorwf	hitler@cnt^0,w,c
  3851   000730  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3852   000732  A4D8               	btfss	status,2,c
  3853   000734  EF9E  F003         	goto	u2841
  3854   000738  EFA0  F003         	goto	u2840
  3855   00073C                     u2841:
  3856   00073C  EFAD  F000         	goto	l192
  3857   000740                     u2840:
  3858   000740                     
  3859                           ;main.c: 407:                 plane[3][3] = 1;
  3860   000740  0E00               	movlw	0
  3861   000742  0100               	movlb	0	; () banked
  3862   000744  6F85               	movwf	(_plane+5)& (0+255),b
  3863   000746  0E01               	movlw	1
  3864   000748  6F84               	movwf	(_plane+4)& (0+255),b
  3865                           
  3866                           ;main.c: 408:                 plane[2][2] = 1;
  3867   00074A  0E00               	movlw	0
  3868   00074C  6F99               	movwf	(_plane+25)& (0+255),b
  3869   00074E  0E01               	movlw	1
  3870   000750  6F98               	movwf	(_plane+24)& (0+255),b
  3871                           
  3872                           ;main.c: 409:                 plane[1][1] = 1;
  3873   000752  0E00               	movlw	0
  3874   000754  6FA3               	movwf	(_plane+35)& (0+255),b
  3875   000756  0E01               	movlw	1
  3876   000758  6FA2               	movwf	(_plane+34)& (0+255),b
  3877                           
  3878                           ;main.c: 410:                 plane[0][0] = 1;
  3879   00075A  0E00               	movlw	0
  3880   00075C  6FAD               	movwf	(_plane+45)& (0+255),b
  3881   00075E  0E01               	movlw	1
  3882   000760  6FAC               	movwf	(_plane+44)& (0+255),b
  3883   000762  EF29  F004         	goto	l2763
  3884   000766                     l2741:
  3885   000766  0E07               	movlw	7
  3886   000768  183E               	xorwf	hitler@x^0,w,c
  3887   00076A  103F               	iorwf	(hitler@x+1)^0,w,c
  3888   00076C  A4D8               	btfss	status,2,c
  3889   00076E  EFBB  F003         	goto	u2851
  3890   000772  EFBD  F003         	goto	u2850
  3891   000776                     u2851:
  3892   000776  EF29  F004         	goto	l2763
  3893   00077A                     u2850:
  3894   00077A                     
  3895                           ;main.c: 413:                 plane[2][2] = 1;
  3896   00077A  5040               	movf	hitler@cnt^0,w,c
  3897   00077C  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3898   00077E  A4D8               	btfss	status,2,c
  3899   000780  EFC4  F003         	goto	u2861
  3900   000784  EFC6  F003         	goto	u2860
  3901   000788                     u2861:
  3902   000788  EFD9  F003         	goto	l2747
  3903   00078C                     u2860:
  3904   00078C                     
  3905                           ;main.c: 414:             }else if(cnt == 4){
  3906   00078C  0E00               	movlw	0
  3907   00078E  0100               	movlb	0	; () banked
  3908   000790  6F81               	movwf	(_plane+1)& (0+255),b
  3909   000792  0E01               	movlw	1
  3910   000794  6F80               	movwf	_plane& (0+255),b
  3911                           
  3912                           ;main.c: 415:                 plane[4][4] = 1;
  3913   000796  0E00               	movlw	0
  3914   000798  6F8D               	movwf	(_plane+13)& (0+255),b
  3915   00079A  0E01               	movlw	1
  3916   00079C  6F8C               	movwf	(_plane+12)& (0+255),b
  3917                           
  3918                           ;main.c: 416:                 plane[2][2] = 1;
  3919   00079E  0E00               	movlw	0
  3920   0007A0  6F99               	movwf	(_plane+25)& (0+255),b
  3921   0007A2  0E01               	movlw	1
  3922   0007A4  6F98               	movwf	(_plane+24)& (0+255),b
  3923                           
  3924                           ;main.c: 417:                 plane[3][3] = 1;
  3925   0007A6  0E00               	movlw	0
  3926   0007A8  6FB1               	movwf	(_plane+49)& (0+255),b
  3927   0007AA  0E01               	movlw	1
  3928   0007AC  6FB0               	movwf	(_plane+48)& (0+255),b
  3929                           
  3930                           ;main.c: 418:                 plane[0][0] = 1;
  3931   0007AE  EF29  F004         	goto	l2763
  3932   0007B2                     l2747:
  3933   0007B2  0440               	decf	hitler@cnt^0,w,c
  3934   0007B4  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3935   0007B6  A4D8               	btfss	status,2,c
  3936   0007B8  EFE0  F003         	goto	u2871
  3937   0007BC  EFE2  F003         	goto	u2870
  3938   0007C0                     u2871:
  3939   0007C0  EFED  F003         	goto	l2751
  3940   0007C4                     u2870:
  3941   0007C4                     
  3942                           ;main.c: 419:             }
  3943   0007C4  0E00               	movlw	0
  3944   0007C6  0100               	movlb	0	; () banked
  3945   0007C8  6F99               	movwf	(_plane+25)& (0+255),b
  3946   0007CA  0E01               	movlw	1
  3947   0007CC  6F98               	movwf	(_plane+24)& (0+255),b
  3948                           
  3949                           ;main.c: 420:         }
  3950   0007CE  0E00               	movlw	0
  3951   0007D0  6FB1               	movwf	(_plane+49)& (0+255),b
  3952   0007D2  0E01               	movlw	1
  3953   0007D4  6FB0               	movwf	(_plane+48)& (0+255),b
  3954                           
  3955                           ;main.c: 421:         set_plane(cnt);
  3956   0007D6  EF29  F004         	goto	l2763
  3957   0007DA                     l2751:
  3958   0007DA  0E02               	movlw	2
  3959   0007DC  1840               	xorwf	hitler@cnt^0,w,c
  3960   0007DE  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3961   0007E0  A4D8               	btfss	status,2,c
  3962   0007E2  EFF5  F003         	goto	u2881
  3963   0007E6  EFF7  F003         	goto	u2880
  3964   0007EA                     u2881:
  3965   0007EA  EFF9  F003         	goto	l2755
  3966   0007EE                     u2880:
  3967   0007EE  EF0C  F002         	goto	l2665
  3968   0007F2                     l2755:
  3969   0007F2  0E03               	movlw	3
  3970   0007F4  1840               	xorwf	hitler@cnt^0,w,c
  3971   0007F6  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3972   0007F8  A4D8               	btfss	status,2,c
  3973   0007FA  EF01  F004         	goto	u2891
  3974   0007FE  EF03  F004         	goto	u2890
  3975   000802                     u2891:
  3976   000802  EF0E  F004         	goto	l2759
  3977   000806                     u2890:
  3978   000806                     
  3979                           ;main.c: 428:                 x++;
  3980   000806  0E00               	movlw	0
  3981   000808  0100               	movlb	0	; () banked
  3982   00080A  6F81               	movwf	(_plane+1)& (0+255),b
  3983   00080C  0E01               	movlw	1
  3984   00080E  6F80               	movwf	_plane& (0+255),b
  3985                           
  3986                           ;main.c: 429:                 itcnt=0;
  3987   000810  0E00               	movlw	0
  3988   000812  6F99               	movwf	(_plane+25)& (0+255),b
  3989   000814  0E01               	movlw	1
  3990   000816  6F98               	movwf	(_plane+24)& (0+255),b
  3991                           
  3992                           ;main.c: 430:             }
  3993   000818  EF29  F004         	goto	l2763
  3994   00081C                     l2759:
  3995   00081C  0E04               	movlw	4
  3996   00081E  1840               	xorwf	hitler@cnt^0,w,c
  3997   000820  1041               	iorwf	(hitler@cnt+1)^0,w,c
  3998   000822  A4D8               	btfss	status,2,c
  3999   000824  EF16  F004         	goto	u2901
  4000   000828  EF18  F004         	goto	u2900
  4001   00082C                     u2901:
  4002   00082C  EFAD  F000         	goto	l192
  4003   000830                     u2900:
  4004   000830                     
  4005                           ;main.c: 431:             x = x%8;
  4006   000830  0E00               	movlw	0
  4007   000832  0100               	movlb	0	; () banked
  4008   000834  6FB1               	movwf	(_plane+49)& (0+255),b
  4009   000836  0E01               	movlw	1
  4010   000838  6FB0               	movwf	(_plane+48)& (0+255),b
  4011                           
  4012                           ;main.c: 432:         }
  4013   00083A  0E00               	movlw	0
  4014   00083C  6F99               	movwf	(_plane+25)& (0+255),b
  4015   00083E  0E01               	movlw	1
  4016   000840  6F98               	movwf	(_plane+24)& (0+255),b
  4017                           
  4018                           ;main.c: 433:     }
  4019   000842  0E00               	movlw	0
  4020   000844  6FA5               	movwf	(_plane+37)& (0+255),b
  4021   000846  0E01               	movlw	1
  4022   000848  6FA4               	movwf	(_plane+36)& (0+255),b
  4023                           
  4024                           ;main.c: 434: }
  4025   00084A  0E00               	movlw	0
  4026   00084C  6F81               	movwf	(_plane+1)& (0+255),b
  4027   00084E  0E01               	movlw	1
  4028   000850  6F80               	movwf	_plane& (0+255),b
  4029   000852                     l2763:
  4030                           
  4031                           ;main.c: 437:     clear_cube();
  4032   000852  C040  F02B         	movff	hitler@cnt,set_plane@a
  4033   000856  C041  F02C         	movff	hitler@cnt+1,set_plane@a+1
  4034   00085A  EC20  F012         	call	_set_plane	;wreg free
  4035   00085E                     
  4036                           ;main.c: 438: 
  4037   00085E  EC89  F00D         	call	_draw_plane	;wreg free
  4038   000862                     
  4039                           ;main.c: 439:     while(mode == id){
  4040   000862  4A40               	infsnz	hitler@cnt^0,f,c
  4041   000864  2A41               	incf	(hitler@cnt+1)^0,f,c
  4042   000866                     
  4043                           ;main.c: 440:         for(int i = 0; i < 5; i++)
  4044   000866  0E05               	movlw	5
  4045   000868  1840               	xorwf	hitler@cnt^0,w,c
  4046   00086A  1041               	iorwf	(hitler@cnt+1)^0,w,c
  4047   00086C  A4D8               	btfss	status,2,c
  4048   00086E  EF3B  F004         	goto	u2911
  4049   000872  EF3D  F004         	goto	u2910
  4050   000876                     u2911:
  4051   000876  EF5C  F004         	goto	l2783
  4052   00087A                     u2910:
  4053   00087A                     
  4054                           ;main.c: 441:             for(int j = 0; j < 5; j++)
  4055   00087A  0E00               	movlw	0
  4056   00087C  6E41               	movwf	(hitler@cnt+1)^0,c
  4057   00087E  0E00               	movlw	0
  4058   000880  6E40               	movwf	hitler@cnt^0,c
  4059   000882                     
  4060                           ;main.c: 442:                 plane[i][j] = 1;
  4061   000882  4A3C               	infsnz	hitler@itcnt^0,f,c
  4062   000884  2A3D               	incf	(hitler@itcnt+1)^0,f,c
  4063   000886                     
  4064                           ;main.c: 443: 
  4065   000886  503C               	movf	hitler@itcnt^0,w,c
  4066   000888  5C3A               	subwf	hitler@it^0,w,c
  4067   00088A  503B               	movf	(hitler@it+1)^0,w,c
  4068   00088C  0A80               	xorlw	128
  4069   00088E  6E39               	movwf	??_hitler^0,c
  4070   000890  503D               	movf	(hitler@itcnt+1)^0,w,c
  4071   000892  0A80               	xorlw	128
  4072   000894  5839               	subwfb	??_hitler^0,w,c
  4073   000896  B0D8               	btfsc	status,0,c
  4074   000898  EF50  F004         	goto	u2921
  4075   00089C  EF52  F004         	goto	u2920
  4076   0008A0                     u2921:
  4077   0008A0  EF58  F004         	goto	l2781
  4078   0008A4                     u2920:
  4079   0008A4                     
  4080                           ;main.c: 444:         for(int i = 0; i < 5; i++){
  4081   0008A4  4A3E               	infsnz	hitler@x^0,f,c
  4082   0008A6  2A3F               	incf	(hitler@x+1)^0,f,c
  4083   0008A8                     
  4084                           ;main.c: 445:             set_plane(i);
  4085   0008A8  0E00               	movlw	0
  4086   0008AA  6E3D               	movwf	(hitler@itcnt+1)^0,c
  4087   0008AC  0E00               	movlw	0
  4088   0008AE  6E3C               	movwf	hitler@itcnt^0,c
  4089   0008B0                     l2781:
  4090                           
  4091                           ;main.c: 447:             _delay((unsigned long)((8)*(4000000/4000.0)));
  4092   0008B0  0E07               	movlw	7
  4093   0008B2  143E               	andwf	hitler@x^0,w,c
  4094   0008B4  6E3E               	movwf	hitler@x^0,c
  4095   0008B6  6A3F               	clrf	(hitler@x+1)^0,c
  4096   0008B8                     l2783:
  4097                           
  4098                           ;main.c: 241:                 plane[2][3] = 1;
  4099   0008B8  5037               	movf	hitler@id^0,w,c
  4100   0008BA  1865               	xorwf	_mode^0,w,c
  4101   0008BC  E109               	bnz	u2930
  4102   0008BE  5038               	movf	(hitler@id+1)^0,w,c
  4103   0008C0  1866               	xorwf	(_mode+1)^0,w,c
  4104   0008C2  B4D8               	btfsc	status,2,c
  4105   0008C4  EF66  F004         	goto	u2931
  4106   0008C8  EF68  F004         	goto	u2930
  4107   0008CC                     u2931:
  4108   0008CC  EF1D  F000         	goto	l2583
  4109   0008D0                     u2930:
  4110   0008D0  0012               	return		;funcret
  4111   0008D2                     __end_of_hitler:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _cubeidle *****************
  4115 ;; Defined at:
  4116 ;;		line 546 in file "main.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  id              2   54[COMRAM] int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  i               2   57[COMRAM] int 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4130 ;;      Params:         2       0       0       0       0       0       0
  4131 ;;      Locals:         2       0       0       0       0       0       0
  4132 ;;      Temps:          1       0       0       0       0       0       0
  4133 ;;      Totals:         5       0       0       0       0       0       0
  4134 ;;Total ram usage:        5 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 5
  4137 ;; This function calls:
  4138 ;;		_clear_cube
  4139 ;;		_lighton
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text7
  4146   001DD4                     __ptext7:
  4147                           	callstack 0
  4148   001DD4                     _cubeidle:
  4149                           	callstack 25
  4150   001DD4                     
  4151                           ;main.c: 547: }
  4152   001DD4  EC51  F010         	call	_clear_cube	;wreg free
  4153                           
  4154                           ;main.c: 548: 
  4155   001DD8  0E00               	movlw	0
  4156   001DDA  6E32               	movwf	(lighton@x+1)^0,c
  4157   001DDC  0E00               	movlw	0
  4158   001DDE  6E31               	movwf	lighton@x^0,c
  4159   001DE0  0EFF               	movlw	255
  4160   001DE2  6E34               	movwf	(lighton@prev+1)^0,c
  4161   001DE4  6833               	setf	lighton@prev^0,c
  4162   001DE6  ECEC  F00C         	call	_lighton	;wreg free
  4163                           
  4164                           ;main.c: 549: void pulsing(int id){
  4165   001DEA  EF3D  F00F         	goto	l3065
  4166   001DEE                     l3049:
  4167                           
  4168                           ;main.c: 550:     while(mode == id){
  4169   001DEE  0E00               	movlw	0
  4170   001DF0  6E3B               	movwf	(cubeidle@i+1)^0,c
  4171   001DF2  0E01               	movlw	1
  4172   001DF4  6E3A               	movwf	cubeidle@i^0,c
  4173   001DF6  EF12  F00F         	goto	l3057
  4174   001DFA                     l3051:
  4175                           
  4176                           ;main.c: 551:         clear_cube();
  4177   001DFA  C03A  F031         	movff	cubeidle@i,lighton@x
  4178   001DFE  C03B  F032         	movff	cubeidle@i+1,lighton@x+1
  4179   001E02  0EFF               	movlw	255
  4180   001E04  243A               	addwf	cubeidle@i^0,w,c
  4181   001E06  6E33               	movwf	lighton@prev^0,c
  4182   001E08  0EFF               	movlw	255
  4183   001E0A  203B               	addwfc	(cubeidle@i+1)^0,w,c
  4184   001E0C  6E34               	movwf	(lighton@prev+1)^0,c
  4185   001E0E  ECEC  F00C         	call	_lighton	;wreg free
  4186   001E12                     
  4187                           ;main.c: 552:         _delay((unsigned long)((60)*(4000000/4000.0)));
  4188   001E12  0E0D               	movlw	13
  4189   001E14  6E39               	movwf	??_cubeidle^0,c
  4190   001E16  0EFC               	movlw	252
  4191   001E18                     u3517:
  4192   001E18  2EE8               	decfsz	wreg,f,c
  4193   001E1A  D7FE               	bra	u3517
  4194   001E1C  2E39               	decfsz	??_cubeidle^0,f,c
  4195   001E1E  D7FC               	bra	u3517
  4196   001E20                     
  4197                           ;main.c: 553:         plane[2][2] = 1;
  4198   001E20  4A3A               	infsnz	cubeidle@i^0,f,c
  4199   001E22  2A3B               	incf	(cubeidle@i+1)^0,f,c
  4200   001E24                     l3057:
  4201   001E24  BE3B               	btfsc	(cubeidle@i+1)^0,7,c
  4202   001E26  EF20  F00F         	goto	u3180
  4203   001E2A  503B               	movf	(cubeidle@i+1)^0,w,c
  4204   001E2C  E107               	bnz	u3181
  4205   001E2E  0E7D               	movlw	125
  4206   001E30  5C3A               	subwf	cubeidle@i^0,w,c
  4207   001E32  B0D8               	btfsc	status,0,c
  4208   001E34  EF1E  F00F         	goto	u3181
  4209   001E38  EF20  F00F         	goto	u3180
  4210   001E3C                     u3181:
  4211   001E3C  EF2C  F00F         	goto	l3061
  4212   001E40                     u3180:
  4213   001E40  5037               	movf	cubeidle@id^0,w,c
  4214   001E42  1865               	xorwf	_mode^0,w,c
  4215   001E44  E109               	bnz	u3190
  4216   001E46  5038               	movf	(cubeidle@id+1)^0,w,c
  4217   001E48  1866               	xorwf	(_mode+1)^0,w,c
  4218   001E4A  B4D8               	btfsc	status,2,c
  4219   001E4C  EF2A  F00F         	goto	u3191
  4220   001E50  EF2C  F00F         	goto	u3190
  4221   001E54                     u3191:
  4222   001E54  EFFD  F00E         	goto	l3051
  4223   001E58                     u3190:
  4224   001E58                     l3061:
  4225                           
  4226                           ;main.c: 554:         draw_plane();
  4227   001E58  0E00               	movlw	0
  4228   001E5A  6E32               	movwf	(lighton@x+1)^0,c
  4229   001E5C  0E00               	movlw	0
  4230   001E5E  6E31               	movwf	lighton@x^0,c
  4231   001E60  0E00               	movlw	0
  4232   001E62  6E34               	movwf	(lighton@prev+1)^0,c
  4233   001E64  0E7C               	movlw	124
  4234   001E66  6E33               	movwf	lighton@prev^0,c
  4235   001E68  ECEC  F00C         	call	_lighton	;wreg free
  4236   001E6C                     
  4237                           ;main.c: 555:         plane_on(2);
  4238   001E6C  0E03               	movlw	3
  4239   001E6E  6E39               	movwf	??_cubeidle^0,c
  4240   001E70  0E98               	movlw	152
  4241   001E72                     u3527:
  4242   001E72  2EE8               	decfsz	wreg,f,c
  4243   001E74  D7FE               	bra	u3527
  4244   001E76  2E39               	decfsz	??_cubeidle^0,f,c
  4245   001E78  D7FC               	bra	u3527
  4246   001E7A                     l3065:
  4247                           
  4248                           ;main.c: 549: void pulsing(int id){
  4249   001E7A  5037               	movf	cubeidle@id^0,w,c
  4250   001E7C  1865               	xorwf	_mode^0,w,c
  4251   001E7E  E109               	bnz	u3200
  4252   001E80  5038               	movf	(cubeidle@id+1)^0,w,c
  4253   001E82  1866               	xorwf	(_mode+1)^0,w,c
  4254   001E84  B4D8               	btfsc	status,2,c
  4255   001E86  EF47  F00F         	goto	u3201
  4256   001E8A  EF49  F00F         	goto	u3200
  4257   001E8E                     u3201:
  4258   001E8E  EFF7  F00E         	goto	l3049
  4259   001E92                     u3200:
  4260   001E92  0012               	return		;funcret
  4261   001E94                     __end_of_cubeidle:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _antirainfall *****************
  4265 ;; Defined at:
  4266 ;;		line 210 in file "main.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  id              2   54[COMRAM] int 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  i               2   80[COMRAM] int 
  4271 ;;  i               2   76[COMRAM] int 
  4272 ;;  tmp             2   74[COMRAM] int 
  4273 ;;  i               2   78[COMRAM] int 
  4274 ;;  a              10   64[COMRAM] int [5]
  4275 ;;  idx             2   82[COMRAM] int 
  4276 ;;  cnt             2    0        int 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4286 ;;      Params:         2       0       0       0       0       0       0
  4287 ;;      Locals:        20       0       0       0       0       0       0
  4288 ;;      Temps:          8       0       0       0       0       0       0
  4289 ;;      Totals:        30       0       0       0       0       0       0
  4290 ;;Total ram usage:       30 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 5
  4293 ;; This function calls:
  4294 ;;		___awdiv
  4295 ;;		___awmod
  4296 ;;		___wmul
  4297 ;;		_clear_cube
  4298 ;;		_clear_plane
  4299 ;;		_draw_plane
  4300 ;;		_lighton
  4301 ;;		_move
  4302 ;;		_rand
  4303 ;;		_set_plane
  4304 ;;		_srand
  4305 ;;		_time
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text8
  4312   000FDE                     __ptext8:
  4313                           	callstack 0
  4314   000FDE                     _antirainfall:
  4315                           	callstack 25
  4316   000FDE                     
  4317                           ;main.c: 211:             _delay((unsigned long)((10)*(4000000/4000.0)));
  4318   000FDE  EC51  F010         	call	_clear_cube	;wreg free
  4319   000FE2                     
  4320                           ;main.c: 212:         }
  4321   000FE2  0E00               	movlw	0
  4322   000FE4  6E0B               	movwf	time@t^0,c
  4323   000FE6  0E00               	movlw	0
  4324   000FE8  6E0C               	movwf	(time@t+1)^0,c
  4325   000FEA  ECC7  F011         	call	_time	;wreg free
  4326   000FEE  C00B  F039         	movff	?_time,??_antirainfall
  4327   000FF2  C00C  F03A         	movff	?_time+1,??_antirainfall+1
  4328   000FF6  C00D  F03B         	movff	?_time+2,??_antirainfall+2
  4329   000FFA  C00E  F03C         	movff	?_time+3,??_antirainfall+3
  4330   000FFE  C00F  F03D         	movff	?_time+4,??_antirainfall+4
  4331   001002  C010  F03E         	movff	?_time+5,??_antirainfall+5
  4332   001006  C011  F03F         	movff	?_time+6,??_antirainfall+6
  4333   00100A  C012  F040         	movff	?_time+7,??_antirainfall+7
  4334   00100E  C039  F013         	movff	??_antirainfall,srand@s
  4335   001012  C03A  F014         	movff	??_antirainfall+1,srand@s+1
  4336   001016  EC13  F012         	call	_srand	;wreg free
  4337   00101A  EE20  F041         	lfsr	2,antirainfall@a
  4338   00101E  0E09               	movlw	9
  4339   001020                     u2381:
  4340   001020  6ADE               	clrf	postinc2,c
  4341   001022  06E8               	decf	wreg,f,c
  4342   001024  E2FD               	bc	u2381
  4343   001026  0E00               	movlw	0
  4344   001028  6E54               	movwf	(antirainfall@idx+1)^0,c
  4345   00102A  0E00               	movlw	0
  4346   00102C  6E53               	movwf	antirainfall@idx^0,c
  4347   00102E                     
  4348                           ;main.c: 214:         idx %= 5;
  4349   00102E  0E00               	movlw	0
  4350   001030  6E50               	movwf	(antirainfall@i+1)^0,c
  4351   001032  0E00               	movlw	0
  4352   001034  6E4F               	movwf	antirainfall@i^0,c
  4353   001036                     l2513:
  4354                           
  4355                           ;main.c: 215:         set_plane(0);
  4356   001036  EC2E  F011         	call	_rand	;wreg free
  4357   00103A  C017  F01D         	movff	?_rand,___awmod@dividend
  4358   00103E  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  4359   001042  0E00               	movlw	0
  4360   001044  6E20               	movwf	(___awmod@divisor+1)^0,c
  4361   001046  0E19               	movlw	25
  4362   001048  6E1F               	movwf	___awmod@divisor^0,c
  4363   00104A  EC4A  F00F         	call	___awmod	;wreg free
  4364   00104E  90D8               	bcf	status,0,c
  4365   001050  344F               	rlcf	antirainfall@i^0,w,c
  4366   001052  6ED9               	movwf	fsr2l,c
  4367   001054  3450               	rlcf	(antirainfall@i+1)^0,w,c
  4368   001056  6EDA               	movwf	fsr2h,c
  4369   001058  0E41               	movlw	low antirainfall@a
  4370   00105A  26D9               	addwf	fsr2l,f,c
  4371   00105C  0E00               	movlw	high antirainfall@a
  4372   00105E  22DA               	addwfc	fsr2h,f,c
  4373   001060  C01D  FFDE         	movff	?___awmod,postinc2
  4374   001064  C01E  FFDD         	movff	?___awmod+1,postdec2
  4375   001068                     
  4376                           ;main.c: 216:         for(int i=0;i<5;i++)plane[a[i]/5][a[i]%5] = 1;
  4377   001068  90D8               	bcf	status,0,c
  4378   00106A  344F               	rlcf	antirainfall@i^0,w,c
  4379   00106C  6ED9               	movwf	fsr2l,c
  4380   00106E  3450               	rlcf	(antirainfall@i+1)^0,w,c
  4381   001070  6EDA               	movwf	fsr2h,c
  4382   001072  0E41               	movlw	low antirainfall@a
  4383   001074  26D9               	addwf	fsr2l,f,c
  4384   001076  0E00               	movlw	high antirainfall@a
  4385   001078  22DA               	addwfc	fsr2h,f,c
  4386   00107A  CFDE F031          	movff	postinc2,lighton@x
  4387   00107E  CFDD F032          	movff	postdec2,lighton@x+1
  4388   001082  0EFF               	movlw	255
  4389   001084  6E34               	movwf	(lighton@prev+1)^0,c
  4390   001086  6833               	setf	lighton@prev^0,c
  4391   001088  ECEC  F00C         	call	_lighton	;wreg free
  4392   00108C                     
  4393                           ;main.c: 217:         draw_plane();
  4394   00108C  4A4F               	infsnz	antirainfall@i^0,f,c
  4395   00108E  2A50               	incf	(antirainfall@i+1)^0,f,c
  4396   001090  BE50               	btfsc	(antirainfall@i+1)^0,7,c
  4397   001092  EF54  F008         	goto	u2391
  4398   001096  5050               	movf	(antirainfall@i+1)^0,w,c
  4399   001098  E109               	bnz	u2390
  4400   00109A  0E05               	movlw	5
  4401   00109C  5C4F               	subwf	antirainfall@i^0,w,c
  4402   00109E  A0D8               	btfss	status,0,c
  4403   0010A0  EF54  F008         	goto	u2391
  4404   0010A4  EF56  F008         	goto	u2390
  4405   0010A8                     u2391:
  4406   0010A8  EF1B  F008         	goto	l2513
  4407   0010AC                     u2390:
  4408   0010AC                     
  4409                           ;main.c: 218:         _delay((unsigned long)((100)*(4000000/4000.0)));
  4410   0010AC  0E02               	movlw	2
  4411   0010AE  6E3A               	movwf	(??_antirainfall+1)^0,c
  4412   0010B0  0E04               	movlw	4
  4413   0010B2  6E39               	movwf	??_antirainfall^0,c
  4414   0010B4  0EBA               	movlw	186
  4415   0010B6                     u3537:
  4416   0010B6  2EE8               	decfsz	wreg,f,c
  4417   0010B8  D7FE               	bra	u3537
  4418   0010BA  2E39               	decfsz	??_antirainfall^0,f,c
  4419   0010BC  D7FC               	bra	u3537
  4420   0010BE  2E3A               	decfsz	(??_antirainfall+1)^0,f,c
  4421   0010C0  D7FA               	bra	u3537
  4422   0010C2  D000               	nop2	
  4423                           
  4424                           ;main.c: 219:     }
  4425   0010C4  EF49  F009         	goto	l2571
  4426   0010C8                     l2523:
  4427                           
  4428                           ;main.c: 220: }
  4429   0010C8  90D8               	bcf	status,0,c
  4430   0010CA  3453               	rlcf	antirainfall@idx^0,w,c
  4431   0010CC  6ED9               	movwf	fsr2l,c
  4432   0010CE  3454               	rlcf	(antirainfall@idx+1)^0,w,c
  4433   0010D0  6EDA               	movwf	fsr2h,c
  4434   0010D2  0E41               	movlw	low antirainfall@a
  4435   0010D4  26D9               	addwf	fsr2l,f,c
  4436   0010D6  0E00               	movlw	high antirainfall@a
  4437   0010D8  22DA               	addwfc	fsr2h,f,c
  4438   0010DA  CFDE F04B          	movff	postinc2,antirainfall@tmp
  4439   0010DE  CFDD F04C          	movff	postdec2,antirainfall@tmp+1
  4440   0010E2                     
  4441                           ;main.c: 221: 
  4442   0010E2  C053  F01D         	movff	antirainfall@idx,___awmod@dividend
  4443   0010E6  C054  F01E         	movff	antirainfall@idx+1,___awmod@dividend+1
  4444   0010EA  0E00               	movlw	0
  4445   0010EC  6E20               	movwf	(___awmod@divisor+1)^0,c
  4446   0010EE  0E05               	movlw	5
  4447   0010F0  6E1F               	movwf	___awmod@divisor^0,c
  4448   0010F2  EC4A  F00F         	call	___awmod	;wreg free
  4449   0010F6  C01D  F053         	movff	?___awmod,antirainfall@idx
  4450   0010FA  C01E  F054         	movff	?___awmod+1,antirainfall@idx+1
  4451   0010FE                     
  4452                           ;main.c: 222: void hitler(int id){
  4453   0010FE  ECA6  F010         	call	_clear_plane	;wreg free
  4454   001102                     
  4455                           ;main.c: 223:     clear_cube();
  4456   001102  0E00               	movlw	0
  4457   001104  6E4E               	movwf	(antirainfall@i_779+1)^0,c
  4458   001106  0E01               	movlw	1
  4459   001108  6E4D               	movwf	antirainfall@i_779^0,c
  4460   00110A                     l2535:
  4461                           
  4462                           ;main.c: 224:     int x=0, it=5 ,cnt=0,itcnt=0;
  4463   00110A  C04D  F02B         	movff	antirainfall@i_779,set_plane@a
  4464   00110E  C04E  F02C         	movff	antirainfall@i_779+1,set_plane@a+1
  4465   001112  EC20  F012         	call	_set_plane	;wreg free
  4466   001116                     
  4467                           ;main.c: 225:     while(mode == id){
  4468   001116  C04B  F031         	movff	antirainfall@tmp,lighton@x
  4469   00111A  C04C  F032         	movff	antirainfall@tmp+1,lighton@x+1
  4470   00111E  C04B  F033         	movff	antirainfall@tmp,lighton@prev
  4471   001122  C04C  F034         	movff	antirainfall@tmp+1,lighton@prev+1
  4472   001126  ECEC  F00C         	call	_lighton	;wreg free
  4473   00112A                     
  4474                           ;main.c: 226:         clear_plane();
  4475   00112A  C04B  F023         	movff	antirainfall@tmp,move@x
  4476   00112E  C04C  F024         	movff	antirainfall@tmp+1,move@x+1
  4477   001132  0E00               	movlw	0
  4478   001134  6E26               	movwf	(move@r+1)^0,c
  4479   001136  0E04               	movlw	4
  4480   001138  6E25               	movwf	move@r^0,c
  4481   00113A  ECDC  F00B         	call	_move	;wreg free
  4482   00113E  C023  F04B         	movff	?_move,antirainfall@tmp
  4483   001142  C024  F04C         	movff	?_move+1,antirainfall@tmp+1
  4484   001146                     
  4485                           ;main.c: 227:         draw_plane();
  4486   001146  0E0D               	movlw	13
  4487   001148  6E39               	movwf	??_antirainfall^0,c
  4488   00114A  0EFC               	movlw	252
  4489   00114C                     u3547:
  4490   00114C  2EE8               	decfsz	wreg,f,c
  4491   00114E  D7FE               	bra	u3547
  4492   001150  2E39               	decfsz	??_antirainfall^0,f,c
  4493   001152  D7FC               	bra	u3547
  4494   001154                     
  4495                           ;main.c: 228:         if(x==0){
  4496   001154  4A4D               	infsnz	antirainfall@i_779^0,f,c
  4497   001156  2A4E               	incf	(antirainfall@i_779+1)^0,f,c
  4498   001158  BE4E               	btfsc	(antirainfall@i_779+1)^0,7,c
  4499   00115A  EFB8  F008         	goto	u2401
  4500   00115E  504E               	movf	(antirainfall@i_779+1)^0,w,c
  4501   001160  E109               	bnz	u2400
  4502   001162  0E05               	movlw	5
  4503   001164  5C4D               	subwf	antirainfall@i_779^0,w,c
  4504   001166  A0D8               	btfss	status,0,c
  4505   001168  EFB8  F008         	goto	u2401
  4506   00116C  EFBA  F008         	goto	u2400
  4507   001170                     u2401:
  4508   001170  EF85  F008         	goto	l2535
  4509   001174                     u2400:
  4510   001174                     
  4511                           ;main.c: 229:             if(cnt==0){
  4512   001174  EC2E  F011         	call	_rand	;wreg free
  4513   001178  C017  F01D         	movff	?_rand,___awmod@dividend
  4514   00117C  C018  F01E         	movff	?_rand+1,___awmod@dividend+1
  4515   001180  0E00               	movlw	0
  4516   001182  6E20               	movwf	(___awmod@divisor+1)^0,c
  4517   001184  0E19               	movlw	25
  4518   001186  6E1F               	movwf	___awmod@divisor^0,c
  4519   001188  EC4A  F00F         	call	___awmod	;wreg free
  4520   00118C  90D8               	bcf	status,0,c
  4521   00118E  3453               	rlcf	antirainfall@idx^0,w,c
  4522   001190  6ED9               	movwf	fsr2l,c
  4523   001192  3454               	rlcf	(antirainfall@idx+1)^0,w,c
  4524   001194  6EDA               	movwf	fsr2h,c
  4525   001196  0E41               	movlw	low antirainfall@a
  4526   001198  26D9               	addwf	fsr2l,f,c
  4527   00119A  0E00               	movlw	high antirainfall@a
  4528   00119C  22DA               	addwfc	fsr2h,f,c
  4529   00119E  C01D  FFDE         	movff	?___awmod,postinc2
  4530   0011A2  C01E  FFDD         	movff	?___awmod+1,postdec2
  4531   0011A6  4A53               	infsnz	antirainfall@idx^0,f,c
  4532   0011A8  2A54               	incf	(antirainfall@idx+1)^0,f,c
  4533   0011AA                     
  4534                           ;main.c: 230:                 plane[2][0] = 1;
  4535   0011AA  C053  F01D         	movff	antirainfall@idx,___awmod@dividend
  4536   0011AE  C054  F01E         	movff	antirainfall@idx+1,___awmod@dividend+1
  4537   0011B2  0E00               	movlw	0
  4538   0011B4  6E20               	movwf	(___awmod@divisor+1)^0,c
  4539   0011B6  0E05               	movlw	5
  4540   0011B8  6E1F               	movwf	___awmod@divisor^0,c
  4541   0011BA  EC4A  F00F         	call	___awmod	;wreg free
  4542   0011BE  C01D  F053         	movff	?___awmod,antirainfall@idx
  4543   0011C2  C01E  F054         	movff	?___awmod+1,antirainfall@idx+1
  4544   0011C6                     
  4545                           ;main.c: 231:                 plane[2][1] = 1;
  4546   0011C6  0E00               	movlw	0
  4547   0011C8  6E2C               	movwf	(set_plane@a+1)^0,c
  4548   0011CA  0E00               	movlw	0
  4549   0011CC  6E2B               	movwf	set_plane@a^0,c
  4550   0011CE  EC20  F012         	call	_set_plane	;wreg free
  4551   0011D2                     
  4552                           ;main.c: 232:                 plane[2][2] = 1;
  4553   0011D2  0E00               	movlw	0
  4554   0011D4  6E52               	movwf	(antirainfall@i_780+1)^0,c
  4555   0011D6  0E00               	movlw	0
  4556   0011D8  6E51               	movwf	antirainfall@i_780^0,c
  4557   0011DA                     l2561:
  4558   0011DA  0E00               	movlw	0
  4559   0011DC  6E26               	movwf	(___awdiv@divisor+1)^0,c
  4560   0011DE  0E05               	movlw	5
  4561   0011E0  6E25               	movwf	___awdiv@divisor^0,c
  4562   0011E2  90D8               	bcf	status,0,c
  4563   0011E4  3451               	rlcf	antirainfall@i_780^0,w,c
  4564   0011E6  6ED9               	movwf	fsr2l,c
  4565   0011E8  3452               	rlcf	(antirainfall@i_780+1)^0,w,c
  4566   0011EA  6EDA               	movwf	fsr2h,c
  4567   0011EC  0E41               	movlw	low antirainfall@a
  4568   0011EE  26D9               	addwf	fsr2l,f,c
  4569   0011F0  0E00               	movlw	high antirainfall@a
  4570   0011F2  22DA               	addwfc	fsr2h,f,c
  4571   0011F4  CFDE F023          	movff	postinc2,___awdiv@dividend
  4572   0011F8  CFDD F024          	movff	postdec2,___awdiv@dividend+1
  4573   0011FC  EC88  F00E         	call	___awdiv	;wreg free
  4574   001200  C023  F02B         	movff	?___awdiv,___wmul@multiplier
  4575   001204  C024  F02C         	movff	?___awdiv+1,___wmul@multiplier+1
  4576   001208  0E00               	movlw	0
  4577   00120A  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  4578   00120C  0E0A               	movlw	10
  4579   00120E  6E2D               	movwf	___wmul@multiplicand^0,c
  4580   001210  EC00  F012         	call	___wmul	;wreg free
  4581   001214  0E80               	movlw	low _plane
  4582   001216  242B               	addwf	?___wmul^0,w,c
  4583   001218  6E39               	movwf	??_antirainfall^0,c
  4584   00121A  0E00               	movlw	high _plane
  4585   00121C  202C               	addwfc	(?___wmul+1)^0,w,c
  4586   00121E  6E3A               	movwf	(??_antirainfall+1)^0,c
  4587   001220  90D8               	bcf	status,0,c
  4588   001222  3451               	rlcf	antirainfall@i_780^0,w,c
  4589   001224  6ED9               	movwf	fsr2l,c
  4590   001226  3452               	rlcf	(antirainfall@i_780+1)^0,w,c
  4591   001228  6EDA               	movwf	fsr2h,c
  4592   00122A  0E41               	movlw	low antirainfall@a
  4593   00122C  26D9               	addwf	fsr2l,f,c
  4594   00122E  0E00               	movlw	high antirainfall@a
  4595   001230  22DA               	addwfc	fsr2h,f,c
  4596   001232  CFDE F01D          	movff	postinc2,___awmod@dividend
  4597   001236  CFDD F01E          	movff	postdec2,___awmod@dividend+1
  4598   00123A  0E00               	movlw	0
  4599   00123C  6E20               	movwf	(___awmod@divisor+1)^0,c
  4600   00123E  0E05               	movlw	5
  4601   001240  6E1F               	movwf	___awmod@divisor^0,c
  4602   001242  EC4A  F00F         	call	___awmod	;wreg free
  4603   001246  90D8               	bcf	status,0,c
  4604   001248  361D               	rlcf	?___awmod^0,f,c
  4605   00124A  361E               	rlcf	(?___awmod+1)^0,f,c
  4606   00124C  501D               	movf	?___awmod^0,w,c
  4607   00124E  2439               	addwf	??_antirainfall^0,w,c
  4608   001250  6ED9               	movwf	fsr2l,c
  4609   001252  501E               	movf	(?___awmod+1)^0,w,c
  4610   001254  203A               	addwfc	(??_antirainfall+1)^0,w,c
  4611   001256  6EDA               	movwf	fsr2h,c
  4612   001258  0E01               	movlw	1
  4613   00125A  6EDE               	movwf	postinc2,c
  4614   00125C  0E00               	movlw	0
  4615   00125E  6EDD               	movwf	postdec2,c
  4616   001260  4A51               	infsnz	antirainfall@i_780^0,f,c
  4617   001262  2A52               	incf	(antirainfall@i_780+1)^0,f,c
  4618   001264  BE52               	btfsc	(antirainfall@i_780+1)^0,7,c
  4619   001266  EF3E  F009         	goto	u2411
  4620   00126A  5052               	movf	(antirainfall@i_780+1)^0,w,c
  4621   00126C  E109               	bnz	u2410
  4622   00126E  0E05               	movlw	5
  4623   001270  5C51               	subwf	antirainfall@i_780^0,w,c
  4624   001272  A0D8               	btfss	status,0,c
  4625   001274  EF3E  F009         	goto	u2411
  4626   001278  EF40  F009         	goto	u2410
  4627   00127C                     u2411:
  4628   00127C  EFED  F008         	goto	l2561
  4629   001280                     u2410:
  4630   001280                     
  4631                           ;main.c: 233:                 plane[2][4] = 1;
  4632   001280  EC89  F00D         	call	_draw_plane	;wreg free
  4633   001284                     
  4634                           ;main.c: 234:             }else if(cnt == 1){
  4635   001284  0E82               	movlw	130
  4636   001286  6E39               	movwf	??_antirainfall^0,c
  4637   001288  0EDE               	movlw	222
  4638   00128A                     u3557:
  4639   00128A  2EE8               	decfsz	wreg,f,c
  4640   00128C  D7FE               	bra	u3557
  4641   00128E  2E39               	decfsz	??_antirainfall^0,f,c
  4642   001290  D7FC               	bra	u3557
  4643   001292                     l2571:
  4644                           
  4645                           ;main.c: 219:     }
  4646   001292  5037               	movf	antirainfall@id^0,w,c
  4647   001294  1865               	xorwf	_mode^0,w,c
  4648   001296  E109               	bnz	u2420
  4649   001298  5038               	movf	(antirainfall@id+1)^0,w,c
  4650   00129A  1866               	xorwf	(_mode+1)^0,w,c
  4651   00129C  B4D8               	btfsc	status,2,c
  4652   00129E  EF53  F009         	goto	u2421
  4653   0012A2  EF55  F009         	goto	u2420
  4654   0012A6                     u2421:
  4655   0012A6  EF64  F008         	goto	l2523
  4656   0012AA                     u2420:
  4657   0012AA  0012               	return		;funcret
  4658   0012AC                     __end_of_antirainfall:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _time *****************
  4662 ;; Defined at:
  4663 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\time.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  t               2   10[COMRAM] PTR long long 
  4666 ;;		 -> NULL(0), 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  8   10[COMRAM] long long 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         8       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0
  4681 ;;      Totals:         8       0       0       0       0       0       0
  4682 ;;Total ram usage:        8 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 2
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_random_pattern
  4689 ;;		_antirainfall
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text9
  4694   00238E                     __ptext9:
  4695                           	callstack 0
  4696   00238E                     _time:
  4697                           	callstack 27
  4698   00238E  500B               	movf	time@t^0,w,c
  4699   002390  100C               	iorwf	(time@t+1)^0,w,c
  4700   002392  B4D8               	btfsc	status,2,c
  4701   002394  EFCE  F011         	goto	u2261
  4702   002398  EFD0  F011         	goto	u2260
  4703   00239C                     u2261:
  4704   00239C  EFE4  F011         	goto	l2427
  4705   0023A0                     u2260:
  4706   0023A0  C00B  FFD9         	movff	time@t,fsr2l
  4707   0023A4  C00C  FFDA         	movff	time@t+1,fsr2h
  4708   0023A8  0EFF               	movlw	255
  4709   0023AA  6EDE               	movwf	postinc2,c
  4710   0023AC  0EFF               	movlw	255
  4711   0023AE  6EDE               	movwf	postinc2,c
  4712   0023B0  0EFF               	movlw	255
  4713   0023B2  6EDE               	movwf	postinc2,c
  4714   0023B4  0EFF               	movlw	255
  4715   0023B6  6EDE               	movwf	postinc2,c
  4716   0023B8  0EFF               	movlw	255
  4717   0023BA  6EDE               	movwf	postinc2,c
  4718   0023BC  0EFF               	movlw	255
  4719   0023BE  6EDE               	movwf	postinc2,c
  4720   0023C0  0EFF               	movlw	255
  4721   0023C2  6EDE               	movwf	postinc2,c
  4722   0023C4  0EFF               	movlw	255
  4723   0023C6  6EDD               	movwf	postdec2,c
  4724   0023C8                     l2427:
  4725   0023C8  680B               	setf	?_time^0,c
  4726   0023CA  680C               	setf	(?_time+1)^0,c
  4727   0023CC  680D               	setf	(?_time+2)^0,c
  4728   0023CE  680E               	setf	(?_time+3)^0,c
  4729   0023D0  680F               	setf	(?_time+4)^0,c
  4730   0023D2  6810               	setf	(?_time+5)^0,c
  4731   0023D4  6811               	setf	(?_time+6)^0,c
  4732   0023D6  6812               	setf	(?_time+7)^0,c
  4733   0023D8  0012               	return		;funcret
  4734   0023DA                     __end_of_time:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _srand *****************
  4738 ;; Defined at:
  4739 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  s               2   18[COMRAM] unsigned int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4753 ;;      Params:         2       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0
  4755 ;;      Temps:          2       0       0       0       0       0       0
  4756 ;;      Totals:         4       0       0       0       0       0       0
  4757 ;;Total ram usage:        4 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_random_pattern
  4764 ;;		_antirainfall
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text10
  4769   002426                     __ptext10:
  4770                           	callstack 0
  4771   002426                     _srand:
  4772                           	callstack 27
  4773   002426  0EFF               	movlw	255
  4774   002428  2413               	addwf	srand@s^0,w,c
  4775   00242A  6E15               	movwf	??_srand^0,c
  4776   00242C  0EFF               	movlw	255
  4777   00242E  2014               	addwfc	(srand@s+1)^0,w,c
  4778   002430  6E16               	movwf	(??_srand+1)^0,c
  4779   002432  C015  F067         	movff	??_srand,_seed
  4780   002436  C016  F068         	movff	??_srand+1,_seed+1
  4781   00243A  6A69               	clrf	(_seed+2)^0,c
  4782   00243C  6A6A               	clrf	(_seed+3)^0,c
  4783   00243E  0012               	return		;funcret
  4784   002440                     __end_of_srand:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _rand *****************
  4788 ;; Defined at:
  4789 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\rand.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2   22[COMRAM] int 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         2       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0
  4805 ;;      Temps:          4       0       0       0       0       0       0
  4806 ;;      Totals:         6       0       0       0       0       0       0
  4807 ;;Total ram usage:        6 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 3
  4810 ;; This function calls:
  4811 ;;		___lmul
  4812 ;; This function is called by:
  4813 ;;		_random_pattern
  4814 ;;		_antirainfall
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text11
  4819   00225C                     __ptext11:
  4820                           	callstack 0
  4821   00225C                     _rand:
  4822                           	callstack 26
  4823   00225C  C067  F00B         	movff	_seed,___lmul@multiplier
  4824   002260  C068  F00C         	movff	_seed+1,___lmul@multiplier+1
  4825   002264  C069  F00D         	movff	_seed+2,___lmul@multiplier+2
  4826   002268  C06A  F00E         	movff	_seed+3,___lmul@multiplier+3
  4827   00226C  0E2D               	movlw	45
  4828   00226E  6E0F               	movwf	___lmul@multiplicand^0,c
  4829   002270  0E7F               	movlw	127
  4830   002272  6E10               	movwf	(___lmul@multiplicand+1)^0,c
  4831   002274  0E95               	movlw	149
  4832   002276  6E11               	movwf	(___lmul@multiplicand+2)^0,c
  4833   002278  0E4C               	movlw	76
  4834   00227A  6E12               	movwf	(___lmul@multiplicand+3)^0,c
  4835   00227C  EC64  F011         	call	___lmul	;wreg free
  4836   002280  0E01               	movlw	1
  4837   002282  240B               	addwf	?___lmul^0,w,c
  4838   002284  6E67               	movwf	_seed^0,c
  4839   002286  0E00               	movlw	0
  4840   002288  200C               	addwfc	(?___lmul+1)^0,w,c
  4841   00228A  6E68               	movwf	(_seed+1)^0,c
  4842   00228C  0E00               	movlw	0
  4843   00228E  200D               	addwfc	(?___lmul+2)^0,w,c
  4844   002290  6E69               	movwf	(_seed+2)^0,c
  4845   002292  0E00               	movlw	0
  4846   002294  200E               	addwfc	(?___lmul+3)^0,w,c
  4847   002296  6E6A               	movwf	(_seed+3)^0,c
  4848   002298  C067  F019         	movff	_seed,??_rand
  4849   00229C  C068  F01A         	movff	_seed+1,??_rand+1
  4850   0022A0  C069  F01B         	movff	_seed+2,??_rand+2
  4851   0022A4  C06A  F01C         	movff	_seed+3,??_rand+3
  4852   0022A8  0E12               	movlw	18
  4853   0022AA  EF5C  F011         	goto	u2270
  4854   0022AE                     u2275:
  4855   0022AE  90D8               	bcf	status,0,c
  4856   0022B0  321C               	rrcf	(??_rand+3)^0,f,c
  4857   0022B2  321B               	rrcf	(??_rand+2)^0,f,c
  4858   0022B4  321A               	rrcf	(??_rand+1)^0,f,c
  4859   0022B6  3219               	rrcf	??_rand^0,f,c
  4860   0022B8                     u2270:
  4861   0022B8  2EE8               	decfsz	wreg,f,c
  4862   0022BA  EF57  F011         	goto	u2275
  4863   0022BE  C019  F017         	movff	??_rand,?_rand
  4864   0022C2  C01A  F018         	movff	??_rand+1,?_rand+1
  4865   0022C6  0012               	return		;funcret
  4866   0022C8                     __end_of_rand:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function ___lmul *****************
  4870 ;; Defined at:
  4871 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  multiplier      4   10[COMRAM] unsigned long 
  4874 ;;  multiplicand    4   14[COMRAM] unsigned long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  product         4   18[COMRAM] unsigned long 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  4   10[COMRAM] unsigned long 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4886 ;;      Params:         8       0       0       0       0       0       0
  4887 ;;      Locals:         4       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0
  4889 ;;      Totals:        12       0       0       0       0       0       0
  4890 ;;Total ram usage:       12 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; Hardware stack levels required when called: 2
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_rand
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text12
  4901   0022C8                     __ptext12:
  4902                           	callstack 0
  4903   0022C8                     ___lmul:
  4904                           	callstack 26
  4905   0022C8  0E00               	movlw	0
  4906   0022CA  6E13               	movwf	___lmul@product^0,c
  4907   0022CC  0E00               	movlw	0
  4908   0022CE  6E14               	movwf	(___lmul@product+1)^0,c
  4909   0022D0  0E00               	movlw	0
  4910   0022D2  6E15               	movwf	(___lmul@product+2)^0,c
  4911   0022D4  0E00               	movlw	0
  4912   0022D6  6E16               	movwf	(___lmul@product+3)^0,c
  4913   0022D8                     l2215:
  4914   0022D8  A00B               	btfss	___lmul@multiplier^0,0,c
  4915   0022DA  EF71  F011         	goto	u1941
  4916   0022DE  EF73  F011         	goto	u1940
  4917   0022E2                     u1941:
  4918   0022E2  EF7B  F011         	goto	l2219
  4919   0022E6                     u1940:
  4920   0022E6  500F               	movf	___lmul@multiplicand^0,w,c
  4921   0022E8  2613               	addwf	___lmul@product^0,f,c
  4922   0022EA  5010               	movf	(___lmul@multiplicand+1)^0,w,c
  4923   0022EC  2214               	addwfc	(___lmul@product+1)^0,f,c
  4924   0022EE  5011               	movf	(___lmul@multiplicand+2)^0,w,c
  4925   0022F0  2215               	addwfc	(___lmul@product+2)^0,f,c
  4926   0022F2  5012               	movf	(___lmul@multiplicand+3)^0,w,c
  4927   0022F4  2216               	addwfc	(___lmul@product+3)^0,f,c
  4928   0022F6                     l2219:
  4929   0022F6  90D8               	bcf	status,0,c
  4930   0022F8  360F               	rlcf	___lmul@multiplicand^0,f,c
  4931   0022FA  3610               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4932   0022FC  3611               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4933   0022FE  3612               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4934   002300  90D8               	bcf	status,0,c
  4935   002302  320E               	rrcf	(___lmul@multiplier+3)^0,f,c
  4936   002304  320D               	rrcf	(___lmul@multiplier+2)^0,f,c
  4937   002306  320C               	rrcf	(___lmul@multiplier+1)^0,f,c
  4938   002308  320B               	rrcf	___lmul@multiplier^0,f,c
  4939   00230A  500B               	movf	___lmul@multiplier^0,w,c
  4940   00230C  100C               	iorwf	(___lmul@multiplier+1)^0,w,c
  4941   00230E  100D               	iorwf	(___lmul@multiplier+2)^0,w,c
  4942   002310  100E               	iorwf	(___lmul@multiplier+3)^0,w,c
  4943   002312  A4D8               	btfss	status,2,c
  4944   002314  EF8E  F011         	goto	u1951
  4945   002318  EF90  F011         	goto	u1950
  4946   00231C                     u1951:
  4947   00231C  EF6C  F011         	goto	l2215
  4948   002320                     u1950:
  4949   002320  C013  F00B         	movff	___lmul@product,?___lmul
  4950   002324  C014  F00C         	movff	___lmul@product+1,?___lmul+1
  4951   002328  C015  F00D         	movff	___lmul@product+2,?___lmul+2
  4952   00232C  C016  F00E         	movff	___lmul@product+3,?___lmul+3
  4953   002330  0012               	return		;funcret
  4954   002332                     __end_of___lmul:
  4955                           	callstack 0
  4956                           
  4957 ;; *************** function _move *****************
  4958 ;; Defined at:
  4959 ;;		line 161 in file "main.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;  x               2   34[COMRAM] int 
  4962 ;;  r               2   36[COMRAM] int 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  2   34[COMRAM] int 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4974 ;;      Params:         4       0       0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0
  4977 ;;      Totals:         4       0       0       0       0       0       0
  4978 ;;Total ram usage:        4 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 3
  4981 ;; This function calls:
  4982 ;;		___awmod
  4983 ;; This function is called by:
  4984 ;;		_random_pattern
  4985 ;;		_antirainfall
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text13
  4990   0017B8                     __ptext13:
  4991                           	callstack 0
  4992   0017B8                     _move:
  4993                           	callstack 26
  4994   0017B8                     
  4995                           ;main.c: 162:     x = move(x,r);
  4996   0017B8  5025               	movf	move@r^0,w,c
  4997   0017BA  1026               	iorwf	(move@r+1)^0,w,c
  4998   0017BC  A4D8               	btfss	status,2,c
  4999   0017BE  EFE3  F00B         	goto	u2141
  5000   0017C2  EFE5  F00B         	goto	u2140
  5001   0017C6                     u2141:
  5002   0017C6  EF09  F00C         	goto	l2379
  5003   0017CA                     u2140:
  5004   0017CA  C023  F01D         	movff	move@x,___awmod@dividend
  5005   0017CE  C024  F01E         	movff	move@x+1,___awmod@dividend+1
  5006   0017D2  0E00               	movlw	0
  5007   0017D4  6E20               	movwf	(___awmod@divisor+1)^0,c
  5008   0017D6  0E05               	movlw	5
  5009   0017D8  6E1F               	movwf	___awmod@divisor^0,c
  5010   0017DA  EC4A  F00F         	call	___awmod	;wreg free
  5011   0017DE  0E04               	movlw	4
  5012   0017E0  181D               	xorwf	?___awmod^0,w,c
  5013   0017E2  101E               	iorwf	(?___awmod+1)^0,w,c
  5014   0017E4  B4D8               	btfsc	status,2,c
  5015   0017E6  EFF7  F00B         	goto	u2151
  5016   0017EA  EFF9  F00B         	goto	u2150
  5017   0017EE                     u2151:
  5018   0017EE  EF01  F00C         	goto	l2377
  5019   0017F2                     u2150:
  5020   0017F2  0E01               	movlw	1
  5021   0017F4  2423               	addwf	move@x^0,w,c
  5022   0017F6  6E23               	movwf	move@x^0,c
  5023   0017F8  0E00               	movlw	0
  5024   0017FA  2024               	addwfc	(move@x+1)^0,w,c
  5025   0017FC  6E24               	movwf	(move@x+1)^0,c
  5026   0017FE  EFE7  F00C         	goto	l2419
  5027   001802                     l2377:
  5028   001802  0EFC               	movlw	252
  5029   001804  2423               	addwf	move@x^0,w,c
  5030   001806  6E23               	movwf	move@x^0,c
  5031   001808  0EFF               	movlw	255
  5032   00180A  2024               	addwfc	(move@x+1)^0,w,c
  5033   00180C  6E24               	movwf	(move@x+1)^0,c
  5034   00180E  EFE7  F00C         	goto	l2419
  5035   001812                     l2379:
  5036   001812  0425               	decf	move@r^0,w,c
  5037   001814  1026               	iorwf	(move@r+1)^0,w,c
  5038   001816  A4D8               	btfss	status,2,c
  5039   001818  EF10  F00C         	goto	u2161
  5040   00181C  EF12  F00C         	goto	u2160
  5041   001820                     u2161:
  5042   001820  EF35  F00C         	goto	l2387
  5043   001824                     u2160:
  5044   001824  C023  F01D         	movff	move@x,___awmod@dividend
  5045   001828  C024  F01E         	movff	move@x+1,___awmod@dividend+1
  5046   00182C  0E00               	movlw	0
  5047   00182E  6E20               	movwf	(___awmod@divisor+1)^0,c
  5048   001830  0E05               	movlw	5
  5049   001832  6E1F               	movwf	___awmod@divisor^0,c
  5050   001834  EC4A  F00F         	call	___awmod	;wreg free
  5051   001838  501D               	movf	?___awmod^0,w,c
  5052   00183A  101E               	iorwf	(?___awmod+1)^0,w,c
  5053   00183C  B4D8               	btfsc	status,2,c
  5054   00183E  EF23  F00C         	goto	u2171
  5055   001842  EF25  F00C         	goto	u2170
  5056   001846                     u2171:
  5057   001846  EF2D  F00C         	goto	l2385
  5058   00184A                     u2170:
  5059   00184A  0EFF               	movlw	255
  5060   00184C  2423               	addwf	move@x^0,w,c
  5061   00184E  6E23               	movwf	move@x^0,c
  5062   001850  0EFF               	movlw	255
  5063   001852  2024               	addwfc	(move@x+1)^0,w,c
  5064   001854  6E24               	movwf	(move@x+1)^0,c
  5065   001856  EFE7  F00C         	goto	l2419
  5066   00185A                     l2385:
  5067   00185A  0E04               	movlw	4
  5068   00185C  2423               	addwf	move@x^0,w,c
  5069   00185E  6E23               	movwf	move@x^0,c
  5070   001860  0E00               	movlw	0
  5071   001862  2024               	addwfc	(move@x+1)^0,w,c
  5072   001864  6E24               	movwf	(move@x+1)^0,c
  5073   001866  EFE7  F00C         	goto	l2419
  5074   00186A                     l2387:
  5075   00186A  0E02               	movlw	2
  5076   00186C  1825               	xorwf	move@r^0,w,c
  5077   00186E  1026               	iorwf	(move@r+1)^0,w,c
  5078   001870  A4D8               	btfss	status,2,c
  5079   001872  EF3D  F00C         	goto	u2181
  5080   001876  EF3F  F00C         	goto	u2180
  5081   00187A                     u2181:
  5082   00187A  EF67  F00C         	goto	l2395
  5083   00187E                     u2180:
  5084   00187E  C023  F01D         	movff	move@x,___awmod@dividend
  5085   001882  C024  F01E         	movff	move@x+1,___awmod@dividend+1
  5086   001886  0E00               	movlw	0
  5087   001888  6E20               	movwf	(___awmod@divisor+1)^0,c
  5088   00188A  0E19               	movlw	25
  5089   00188C  6E1F               	movwf	___awmod@divisor^0,c
  5090   00188E  EC4A  F00F         	call	___awmod	;wreg free
  5091   001892  BE1E               	btfsc	(?___awmod+1)^0,7,c
  5092   001894  EF57  F00C         	goto	u2190
  5093   001898  501E               	movf	(?___awmod+1)^0,w,c
  5094   00189A  E107               	bnz	u2191
  5095   00189C  0E14               	movlw	20
  5096   00189E  5C1D               	subwf	?___awmod^0,w,c
  5097   0018A0  B0D8               	btfsc	status,0,c
  5098   0018A2  EF55  F00C         	goto	u2191
  5099   0018A6  EF57  F00C         	goto	u2190
  5100   0018AA                     u2191:
  5101   0018AA  EF5F  F00C         	goto	l2393
  5102   0018AE                     u2190:
  5103   0018AE  0E05               	movlw	5
  5104   0018B0  2423               	addwf	move@x^0,w,c
  5105   0018B2  6E23               	movwf	move@x^0,c
  5106   0018B4  0E00               	movlw	0
  5107   0018B6  2024               	addwfc	(move@x+1)^0,w,c
  5108   0018B8  6E24               	movwf	(move@x+1)^0,c
  5109   0018BA  EFE7  F00C         	goto	l2419
  5110   0018BE                     l2393:
  5111   0018BE  0EEC               	movlw	236
  5112   0018C0  2423               	addwf	move@x^0,w,c
  5113   0018C2  6E23               	movwf	move@x^0,c
  5114   0018C4  0EFF               	movlw	255
  5115   0018C6  2024               	addwfc	(move@x+1)^0,w,c
  5116   0018C8  6E24               	movwf	(move@x+1)^0,c
  5117   0018CA  EFE7  F00C         	goto	l2419
  5118   0018CE                     l2395:
  5119   0018CE  0E03               	movlw	3
  5120   0018D0  1825               	xorwf	move@r^0,w,c
  5121   0018D2  1026               	iorwf	(move@r+1)^0,w,c
  5122   0018D4  A4D8               	btfss	status,2,c
  5123   0018D6  EF6F  F00C         	goto	u2201
  5124   0018DA  EF71  F00C         	goto	u2200
  5125   0018DE                     u2201:
  5126   0018DE  EF99  F00C         	goto	l2403
  5127   0018E2                     u2200:
  5128   0018E2  C023  F01D         	movff	move@x,___awmod@dividend
  5129   0018E6  C024  F01E         	movff	move@x+1,___awmod@dividend+1
  5130   0018EA  0E00               	movlw	0
  5131   0018EC  6E20               	movwf	(___awmod@divisor+1)^0,c
  5132   0018EE  0E19               	movlw	25
  5133   0018F0  6E1F               	movwf	___awmod@divisor^0,c
  5134   0018F2  EC4A  F00F         	call	___awmod	;wreg free
  5135   0018F6  BE1E               	btfsc	(?___awmod+1)^0,7,c
  5136   0018F8  EF87  F00C         	goto	u2211
  5137   0018FC  501E               	movf	(?___awmod+1)^0,w,c
  5138   0018FE  E109               	bnz	u2210
  5139   001900  0E05               	movlw	5
  5140   001902  5C1D               	subwf	?___awmod^0,w,c
  5141   001904  A0D8               	btfss	status,0,c
  5142   001906  EF87  F00C         	goto	u2211
  5143   00190A  EF89  F00C         	goto	u2210
  5144   00190E                     u2211:
  5145   00190E  EF91  F00C         	goto	l2401
  5146   001912                     u2210:
  5147   001912  0EFB               	movlw	251
  5148   001914  2423               	addwf	move@x^0,w,c
  5149   001916  6E23               	movwf	move@x^0,c
  5150   001918  0EFF               	movlw	255
  5151   00191A  2024               	addwfc	(move@x+1)^0,w,c
  5152   00191C  6E24               	movwf	(move@x+1)^0,c
  5153   00191E  EFE7  F00C         	goto	l2419
  5154   001922                     l2401:
  5155   001922  0E14               	movlw	20
  5156   001924  2423               	addwf	move@x^0,w,c
  5157   001926  6E23               	movwf	move@x^0,c
  5158   001928  0E00               	movlw	0
  5159   00192A  2024               	addwfc	(move@x+1)^0,w,c
  5160   00192C  6E24               	movwf	(move@x+1)^0,c
  5161   00192E  EFE7  F00C         	goto	l2419
  5162   001932                     l2403:
  5163   001932  0E04               	movlw	4
  5164   001934  1825               	xorwf	move@r^0,w,c
  5165   001936  1026               	iorwf	(move@r+1)^0,w,c
  5166   001938  A4D8               	btfss	status,2,c
  5167   00193A  EFA1  F00C         	goto	u2221
  5168   00193E  EFA3  F00C         	goto	u2220
  5169   001942                     u2221:
  5170   001942  EFC1  F00C         	goto	l2411
  5171   001946                     u2220:
  5172   001946  BE24               	btfsc	(move@x+1)^0,7,c
  5173   001948  EFB1  F00C         	goto	u2230
  5174   00194C  5024               	movf	(move@x+1)^0,w,c
  5175   00194E  E107               	bnz	u2231
  5176   001950  0E64               	movlw	100
  5177   001952  5C23               	subwf	move@x^0,w,c
  5178   001954  B0D8               	btfsc	status,0,c
  5179   001956  EFAF  F00C         	goto	u2231
  5180   00195A  EFB1  F00C         	goto	u2230
  5181   00195E                     u2231:
  5182   00195E  EFB9  F00C         	goto	l2409
  5183   001962                     u2230:
  5184   001962  0E19               	movlw	25
  5185   001964  2423               	addwf	move@x^0,w,c
  5186   001966  6E23               	movwf	move@x^0,c
  5187   001968  0E00               	movlw	0
  5188   00196A  2024               	addwfc	(move@x+1)^0,w,c
  5189   00196C  6E24               	movwf	(move@x+1)^0,c
  5190   00196E  EFE7  F00C         	goto	l2419
  5191   001972                     l2409:
  5192   001972  0E9C               	movlw	156
  5193   001974  2423               	addwf	move@x^0,w,c
  5194   001976  6E23               	movwf	move@x^0,c
  5195   001978  0EFF               	movlw	255
  5196   00197A  2024               	addwfc	(move@x+1)^0,w,c
  5197   00197C  6E24               	movwf	(move@x+1)^0,c
  5198   00197E  EFE7  F00C         	goto	l2419
  5199   001982                     l2411:
  5200   001982  0E05               	movlw	5
  5201   001984  1825               	xorwf	move@r^0,w,c
  5202   001986  1026               	iorwf	(move@r+1)^0,w,c
  5203   001988  A4D8               	btfss	status,2,c
  5204   00198A  EFC9  F00C         	goto	u2241
  5205   00198E  EFCB  F00C         	goto	u2240
  5206   001992                     u2241:
  5207   001992  EFE7  F00C         	goto	l2419
  5208   001996                     u2240:
  5209   001996  BE24               	btfsc	(move@x+1)^0,7,c
  5210   001998  EFD7  F00C         	goto	u2251
  5211   00199C  5024               	movf	(move@x+1)^0,w,c
  5212   00199E  E109               	bnz	u2250
  5213   0019A0  0E19               	movlw	25
  5214   0019A2  5C23               	subwf	move@x^0,w,c
  5215   0019A4  A0D8               	btfss	status,0,c
  5216   0019A6  EFD7  F00C         	goto	u2251
  5217   0019AA  EFD9  F00C         	goto	u2250
  5218   0019AE                     u2251:
  5219   0019AE  EFE1  F00C         	goto	l2417
  5220   0019B2                     u2250:
  5221   0019B2  0EE7               	movlw	231
  5222   0019B4  2423               	addwf	move@x^0,w,c
  5223   0019B6  6E23               	movwf	move@x^0,c
  5224   0019B8  0EFF               	movlw	255
  5225   0019BA  2024               	addwfc	(move@x+1)^0,w,c
  5226   0019BC  6E24               	movwf	(move@x+1)^0,c
  5227   0019BE  EFE7  F00C         	goto	l2419
  5228   0019C2                     l2417:
  5229   0019C2  0E64               	movlw	100
  5230   0019C4  2423               	addwf	move@x^0,w,c
  5231   0019C6  6E23               	movwf	move@x^0,c
  5232   0019C8  0E00               	movlw	0
  5233   0019CA  2024               	addwfc	(move@x+1)^0,w,c
  5234   0019CC  6E24               	movwf	(move@x+1)^0,c
  5235   0019CE                     l2419:
  5236                           
  5237                           ;main.c: 168:         if(r==0||r==1)while(prevr+r==1)r=rand()%6;
  5238   0019CE  C023  F023         	movff	move@x,?_move
  5239   0019D2  C024  F024         	movff	move@x+1,?_move+1
  5240   0019D6  0012               	return		;funcret
  5241   0019D8                     __end_of_move:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _lighton *****************
  5245 ;; Defined at:
  5246 ;;		line 155 in file "main.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  x               2   48[COMRAM] int 
  5249 ;;  prev            2   50[COMRAM] int 
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5261 ;;      Params:         4       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0
  5263 ;;      Temps:          2       0       0       0       0       0       0
  5264 ;;      Totals:         6       0       0       0       0       0       0
  5265 ;;Total ram usage:        6 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 4
  5268 ;; This function calls:
  5269 ;;		___awdiv
  5270 ;;		___awmod
  5271 ;;		___wmul
  5272 ;;		_draw_plane
  5273 ;;		_set_plane
  5274 ;; This function is called by:
  5275 ;;		_random_pattern
  5276 ;;		_antirainfall
  5277 ;;		_cubeidle
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text14
  5282   0019D8                     __ptext14:
  5283                           	callstack 0
  5284   0019D8                     _lighton:
  5285                           	callstack 25
  5286   0019D8                     
  5287                           ;main.c: 156:     clear_plane();
  5288   0019D8  C031  F023         	movff	lighton@x,___awdiv@dividend
  5289   0019DC  C032  F024         	movff	lighton@x+1,___awdiv@dividend+1
  5290   0019E0  0E00               	movlw	0
  5291   0019E2  6E26               	movwf	(___awdiv@divisor+1)^0,c
  5292   0019E4  0E19               	movlw	25
  5293   0019E6  6E25               	movwf	___awdiv@divisor^0,c
  5294   0019E8  EC88  F00E         	call	___awdiv	;wreg free
  5295   0019EC  C023  F02B         	movff	?___awdiv,set_plane@a
  5296   0019F0  C024  F02C         	movff	?___awdiv+1,set_plane@a+1
  5297   0019F4  EC20  F012         	call	_set_plane	;wreg free
  5298   0019F8                     
  5299                           ;main.c: 157:     srand(time(((void*)0)));
  5300   0019F8  2833               	incf	lighton@prev^0,w,c
  5301   0019FA  E108               	bnz	u2120
  5302   0019FC  2834               	incf	(lighton@prev+1)^0,w,c
  5303   0019FE  B4D8               	btfsc	status,2,c
  5304   001A00  EF04  F00D         	goto	u2121
  5305   001A04  EF06  F00D         	goto	u2120
  5306   001A08                     u2121:
  5307   001A08  EF41  F00D         	goto	l2365
  5308   001A0C                     u2120:
  5309   001A0C  0E00               	movlw	0
  5310   001A0E  6E26               	movwf	(___awdiv@divisor+1)^0,c
  5311   001A10  0E05               	movlw	5
  5312   001A12  6E25               	movwf	___awdiv@divisor^0,c
  5313   001A14  0E00               	movlw	0
  5314   001A16  6E20               	movwf	(___awmod@divisor+1)^0,c
  5315   001A18  0E19               	movlw	25
  5316   001A1A  6E1F               	movwf	___awmod@divisor^0,c
  5317   001A1C  C033  F01D         	movff	lighton@prev,___awmod@dividend
  5318   001A20  C034  F01E         	movff	lighton@prev+1,___awmod@dividend+1
  5319   001A24  EC4A  F00F         	call	___awmod	;wreg free
  5320   001A28  C01D  F023         	movff	?___awmod,___awdiv@dividend
  5321   001A2C  C01E  F024         	movff	?___awmod+1,___awdiv@dividend+1
  5322   001A30  EC88  F00E         	call	___awdiv	;wreg free
  5323   001A34  C023  F02B         	movff	?___awdiv,___wmul@multiplier
  5324   001A38  C024  F02C         	movff	?___awdiv+1,___wmul@multiplier+1
  5325   001A3C  0E00               	movlw	0
  5326   001A3E  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  5327   001A40  0E0A               	movlw	10
  5328   001A42  6E2D               	movwf	___wmul@multiplicand^0,c
  5329   001A44  EC00  F012         	call	___wmul	;wreg free
  5330   001A48  0E80               	movlw	low _plane
  5331   001A4A  242B               	addwf	?___wmul^0,w,c
  5332   001A4C  6E35               	movwf	??_lighton^0,c
  5333   001A4E  0E00               	movlw	high _plane
  5334   001A50  202C               	addwfc	(?___wmul+1)^0,w,c
  5335   001A52  6E36               	movwf	(??_lighton+1)^0,c
  5336   001A54  C033  F01D         	movff	lighton@prev,___awmod@dividend
  5337   001A58  C034  F01E         	movff	lighton@prev+1,___awmod@dividend+1
  5338   001A5C  0E00               	movlw	0
  5339   001A5E  6E20               	movwf	(___awmod@divisor+1)^0,c
  5340   001A60  0E05               	movlw	5
  5341   001A62  6E1F               	movwf	___awmod@divisor^0,c
  5342   001A64  EC4A  F00F         	call	___awmod	;wreg free
  5343   001A68  90D8               	bcf	status,0,c
  5344   001A6A  361D               	rlcf	?___awmod^0,f,c
  5345   001A6C  361E               	rlcf	(?___awmod+1)^0,f,c
  5346   001A6E  501D               	movf	?___awmod^0,w,c
  5347   001A70  2435               	addwf	??_lighton^0,w,c
  5348   001A72  6ED9               	movwf	fsr2l,c
  5349   001A74  501E               	movf	(?___awmod+1)^0,w,c
  5350   001A76  2036               	addwfc	(??_lighton+1)^0,w,c
  5351   001A78  6EDA               	movwf	fsr2h,c
  5352   001A7A  0E00               	movlw	0
  5353   001A7C  6EDE               	movwf	postinc2,c
  5354   001A7E  0E00               	movlw	0
  5355   001A80  6EDD               	movwf	postdec2,c
  5356   001A82                     l2365:
  5357                           
  5358                           ;main.c: 158:     int x = 0, r = 0, prevr, prevx = -1;
  5359   001A82  2831               	incf	lighton@x^0,w,c
  5360   001A84  E108               	bnz	u2130
  5361   001A86  2832               	incf	(lighton@x+1)^0,w,c
  5362   001A88  B4D8               	btfsc	status,2,c
  5363   001A8A  EF49  F00D         	goto	u2131
  5364   001A8E  EF4B  F00D         	goto	u2130
  5365   001A92                     u2131:
  5366   001A92  EF86  F00D         	goto	l2369
  5367   001A96                     u2130:
  5368   001A96  0E00               	movlw	0
  5369   001A98  6E26               	movwf	(___awdiv@divisor+1)^0,c
  5370   001A9A  0E05               	movlw	5
  5371   001A9C  6E25               	movwf	___awdiv@divisor^0,c
  5372   001A9E  0E00               	movlw	0
  5373   001AA0  6E20               	movwf	(___awmod@divisor+1)^0,c
  5374   001AA2  0E19               	movlw	25
  5375   001AA4  6E1F               	movwf	___awmod@divisor^0,c
  5376   001AA6  C031  F01D         	movff	lighton@x,___awmod@dividend
  5377   001AAA  C032  F01E         	movff	lighton@x+1,___awmod@dividend+1
  5378   001AAE  EC4A  F00F         	call	___awmod	;wreg free
  5379   001AB2  C01D  F023         	movff	?___awmod,___awdiv@dividend
  5380   001AB6  C01E  F024         	movff	?___awmod+1,___awdiv@dividend+1
  5381   001ABA  EC88  F00E         	call	___awdiv	;wreg free
  5382   001ABE  C023  F02B         	movff	?___awdiv,___wmul@multiplier
  5383   001AC2  C024  F02C         	movff	?___awdiv+1,___wmul@multiplier+1
  5384   001AC6  0E00               	movlw	0
  5385   001AC8  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  5386   001ACA  0E0A               	movlw	10
  5387   001ACC  6E2D               	movwf	___wmul@multiplicand^0,c
  5388   001ACE  EC00  F012         	call	___wmul	;wreg free
  5389   001AD2  0E80               	movlw	low _plane
  5390   001AD4  242B               	addwf	?___wmul^0,w,c
  5391   001AD6  6E35               	movwf	??_lighton^0,c
  5392   001AD8  0E00               	movlw	high _plane
  5393   001ADA  202C               	addwfc	(?___wmul+1)^0,w,c
  5394   001ADC  6E36               	movwf	(??_lighton+1)^0,c
  5395   001ADE  C031  F01D         	movff	lighton@x,___awmod@dividend
  5396   001AE2  C032  F01E         	movff	lighton@x+1,___awmod@dividend+1
  5397   001AE6  0E00               	movlw	0
  5398   001AE8  6E20               	movwf	(___awmod@divisor+1)^0,c
  5399   001AEA  0E05               	movlw	5
  5400   001AEC  6E1F               	movwf	___awmod@divisor^0,c
  5401   001AEE  EC4A  F00F         	call	___awmod	;wreg free
  5402   001AF2  90D8               	bcf	status,0,c
  5403   001AF4  361D               	rlcf	?___awmod^0,f,c
  5404   001AF6  361E               	rlcf	(?___awmod+1)^0,f,c
  5405   001AF8  501D               	movf	?___awmod^0,w,c
  5406   001AFA  2435               	addwf	??_lighton^0,w,c
  5407   001AFC  6ED9               	movwf	fsr2l,c
  5408   001AFE  501E               	movf	(?___awmod+1)^0,w,c
  5409   001B00  2036               	addwfc	(??_lighton+1)^0,w,c
  5410   001B02  6EDA               	movwf	fsr2h,c
  5411   001B04  0E01               	movlw	1
  5412   001B06  6EDE               	movwf	postinc2,c
  5413   001B08  0E00               	movlw	0
  5414   001B0A  6EDD               	movwf	postdec2,c
  5415   001B0C                     l2369:
  5416                           
  5417                           ;main.c: 159:     lighton(0, prevx);
  5418   001B0C  EC89  F00D         	call	_draw_plane	;wreg free
  5419   001B10  0012               	return		;funcret
  5420   001B12                     __end_of_lighton:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function _set_plane *****************
  5424 ;; Defined at:
  5425 ;;		line 126 in file "main.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  a               2   42[COMRAM] int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;		None
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  1    wreg      void 
  5432 ;; Registers used:
  5433 ;;		wreg, status,2, status,0, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5439 ;;      Params:         2       0       0       0       0       0       0
  5440 ;;      Locals:         0       0       0       0       0       0       0
  5441 ;;      Temps:          0       0       0       0       0       0       0
  5442 ;;      Totals:         2       0       0       0       0       0       0
  5443 ;;Total ram usage:        2 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; Hardware stack levels required when called: 3
  5446 ;; This function calls:
  5447 ;;		_plane_on
  5448 ;; This function is called by:
  5449 ;;		_lighton
  5450 ;;		_antirainfall
  5451 ;;		_hitler
  5452 ;;		_scan
  5453 ;;		_speedup
  5454 ;;		_slash
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text15
  5459   002440                     __ptext15:
  5460                           	callstack 0
  5461   002440                     _set_plane:
  5462                           	callstack 26
  5463   002440                     
  5464                           ;main.c: 127:     TRISE = 0;
  5465   002440  8296               	bsf	150,1,c	;volatile
  5466                           
  5467                           ;main.c: 128:     TRISEbits.TRISE1 = 1;
  5468   002442  8496               	bsf	150,2,c	;volatile
  5469                           
  5470                           ;main.c: 129:     TRISEbits.TRISE2 = 1;
  5471   002444  8E92               	bsf	146,7,c	;volatile
  5472                           
  5473                           ;main.c: 130:     TRISAbits.TRISA7 = 1;
  5474   002446  8C92               	bsf	146,6,c	;volatile
  5475                           
  5476                           ;main.c: 131:     TRISAbits.TRISA6 = 1;
  5477   002448  8094               	bsf	148,0,c	;volatile
  5478   00244A                     
  5479                           ;main.c: 132:     TRISCbits.TRISC0 = 1;
  5480   00244A  C02B  F00B         	movff	set_plane@a,plane_on@a
  5481   00244E  C02C  F00C         	movff	set_plane@a+1,plane_on@a+1
  5482   002452  ECEE  F010         	call	_plane_on	;wreg free
  5483   002456  0012               	return		;funcret
  5484   002458                     __end_of_set_plane:
  5485                           	callstack 0
  5486                           
  5487 ;; *************** function _plane_on *****************
  5488 ;; Defined at:
  5489 ;;		line 94 in file "main.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  a               2   10[COMRAM] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5503 ;;      Params:         2       0       0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0       0       0
  5505 ;;      Temps:          2       0       0       0       0       0       0
  5506 ;;      Totals:         4       0       0       0       0       0       0
  5507 ;;Total ram usage:        4 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 2
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_set_plane
  5514 ;;		_scan
  5515 ;;		_pulsing
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text16
  5520   0021DC                     __ptext16:
  5521                           	callstack 0
  5522   0021DC                     _plane_on:
  5523                           	callstack 26
  5524   0021DC                     
  5525                           ;main.c: 95:             break;
  5526   0021DC  EF0B  F011         	goto	l2195
  5527   0021E0                     l75:
  5528                           
  5529                           ;main.c: 97:             TRISCbits.TRISC0 = 0;
  5530   0021E0  9296               	bcf	150,1,c	;volatile
  5531                           
  5532                           ;main.c: 98:             LATCbits.LC0 = 1 ;
  5533   0021E2  828D               	bsf	141,1,c	;volatile
  5534                           
  5535                           ;main.c: 99:             break;
  5536   0021E4  EF2D  F011         	goto	l82
  5537   0021E8                     l77:
  5538                           
  5539                           ;main.c: 101:             TRISEbits.TRISE1 = 1;
  5540   0021E8  9496               	bcf	150,2,c	;volatile
  5541                           
  5542                           ;main.c: 102:             TRISEbits.TRISE2 = 1;
  5543   0021EA  848D               	bsf	141,2,c	;volatile
  5544                           
  5545                           ;main.c: 103:             TRISAbits.TRISA7 = 1;
  5546   0021EC  EF2D  F011         	goto	l82
  5547   0021F0                     l78:
  5548                           
  5549                           ;main.c: 105:             TRISCbits.TRISC0 = 1;
  5550   0021F0  9E92               	bcf	146,7,c	;volatile
  5551                           
  5552                           ;main.c: 106:             break;
  5553   0021F2  8E89               	bsf	137,7,c	;volatile
  5554                           
  5555                           ;main.c: 107:     }
  5556   0021F4  EF2D  F011         	goto	l82
  5557   0021F8                     l79:
  5558                           
  5559                           ;main.c: 109: 
  5560   0021F8  9C92               	bcf	146,6,c	;volatile
  5561                           
  5562                           ;main.c: 110: void set_plane(int a){
  5563   0021FA  8C89               	bsf	137,6,c	;volatile
  5564                           
  5565                           ;main.c: 111:     TRISEbits.TRISE1 = 1;
  5566   0021FC  EF2D  F011         	goto	l82
  5567   002200                     l80:
  5568                           
  5569                           ;main.c: 113:     TRISAbits.TRISA7 = 1;
  5570   002200  9094               	bcf	148,0,c	;volatile
  5571                           
  5572                           ;main.c: 114:     TRISAbits.TRISA6 = 1;
  5573   002202  808B               	bsf	139,0,c	;volatile
  5574                           
  5575                           ;main.c: 115:     TRISCbits.TRISC0 = 1;
  5576   002204  EF2D  F011         	goto	l82
  5577   002208                     l81:
  5578                           
  5579                           ;main.c: 117: }
  5580   002208  8296               	bsf	150,1,c	;volatile
  5581                           
  5582                           ;main.c: 118: 
  5583   00220A  8496               	bsf	150,2,c	;volatile
  5584                           
  5585                           ;main.c: 119: 
  5586   00220C  8E92               	bsf	146,7,c	;volatile
  5587                           
  5588                           ;main.c: 120: 
  5589   00220E  8C92               	bsf	146,6,c	;volatile
  5590                           
  5591                           ;main.c: 121: void clear_cube(){
  5592   002210  8094               	bsf	148,0,c	;volatile
  5593                           
  5594                           ;main.c: 122: 
  5595   002212  EF2D  F011         	goto	l82
  5596   002216                     l2195:
  5597   002216  C00B  F00D         	movff	plane_on@a,??_plane_on
  5598   00221A  C00C  F00E         	movff	plane_on@a+1,??_plane_on+1
  5599                           
  5600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5601                           ; Switch size 1, requested type "simple"
  5602                           ; Number of cases is 1, Range of values is 0 to 0
  5603                           ; switch strategies available:
  5604                           ; Name         Instructions Cycles
  5605                           ; simple_byte            4     3 (average)
  5606                           ;	Chosen strategy is simple_byte
  5607   00221E  500E               	movf	(??_plane_on+1)^0,w,c
  5608   002220  0A00               	xorlw	0	; case 0
  5609   002222  B4D8               	btfsc	status,2,c
  5610   002224  EF16  F011         	goto	l3315
  5611   002228  EF04  F011         	goto	l81
  5612   00222C                     l3315:
  5613                           
  5614                           ; Switch size 1, requested type "simple"
  5615                           ; Number of cases is 5, Range of values is 0 to 4
  5616                           ; switch strategies available:
  5617                           ; Name         Instructions Cycles
  5618                           ; simple_byte           16     9 (average)
  5619                           ;	Chosen strategy is simple_byte
  5620   00222C  500D               	movf	??_plane_on^0,w,c
  5621   00222E  0A00               	xorlw	0	; case 0
  5622   002230  B4D8               	btfsc	status,2,c
  5623   002232  EFF0  F010         	goto	l75
  5624   002236  0A01               	xorlw	1	; case 1
  5625   002238  B4D8               	btfsc	status,2,c
  5626   00223A  EFF4  F010         	goto	l77
  5627   00223E  0A03               	xorlw	3	; case 2
  5628   002240  B4D8               	btfsc	status,2,c
  5629   002242  EFF8  F010         	goto	l78
  5630   002246  0A01               	xorlw	1	; case 3
  5631   002248  B4D8               	btfsc	status,2,c
  5632   00224A  EFFC  F010         	goto	l79
  5633   00224E  0A07               	xorlw	7	; case 4
  5634   002250  B4D8               	btfsc	status,2,c
  5635   002252  EF00  F011         	goto	l80
  5636   002256  EF04  F011         	goto	l81
  5637   00225A                     l82:
  5638   00225A  0012               	return		;funcret
  5639   00225C                     __end_of_plane_on:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function ___awmod *****************
  5643 ;; Defined at:
  5644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  dividend        2   28[COMRAM] int 
  5647 ;;  divisor         2   30[COMRAM] int 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  sign            1   33[COMRAM] unsigned char 
  5650 ;;  counter         1   32[COMRAM] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2   28[COMRAM] int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5660 ;;      Params:         4       0       0       0       0       0       0
  5661 ;;      Locals:         2       0       0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0
  5663 ;;      Totals:         6       0       0       0       0       0       0
  5664 ;;Total ram usage:        6 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 2
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_lighton
  5671 ;;		_move
  5672 ;;		_random_pattern
  5673 ;;		_antirainfall
  5674 ;;		_speedup
  5675 ;;		_slash
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text17
  5680   001E94                     __ptext17:
  5681                           	callstack 0
  5682   001E94                     ___awmod:
  5683                           	callstack 27
  5684   001E94  0E00               	movlw	0
  5685   001E96  6E22               	movwf	___awmod@sign^0,c
  5686   001E98  BE1E               	btfsc	(___awmod@dividend+1)^0,7,c
  5687   001E9A  EF53  F00F         	goto	u2020
  5688   001E9E  EF51  F00F         	goto	u2021
  5689   001EA2                     u2021:
  5690   001EA2  EF59  F00F         	goto	l2275
  5691   001EA6                     u2020:
  5692   001EA6  6C1D               	negf	___awmod@dividend^0,c
  5693   001EA8  1E1E               	comf	(___awmod@dividend+1)^0,f,c
  5694   001EAA  B0D8               	btfsc	status,0,c
  5695   001EAC  2A1E               	incf	(___awmod@dividend+1)^0,f,c
  5696   001EAE  0E01               	movlw	1
  5697   001EB0  6E22               	movwf	___awmod@sign^0,c
  5698   001EB2                     l2275:
  5699   001EB2  BE20               	btfsc	(___awmod@divisor+1)^0,7,c
  5700   001EB4  EF60  F00F         	goto	u2030
  5701   001EB8  EF5E  F00F         	goto	u2031
  5702   001EBC                     u2031:
  5703   001EBC  EF64  F00F         	goto	l2279
  5704   001EC0                     u2030:
  5705   001EC0  6C1F               	negf	___awmod@divisor^0,c
  5706   001EC2  1E20               	comf	(___awmod@divisor+1)^0,f,c
  5707   001EC4  B0D8               	btfsc	status,0,c
  5708   001EC6  2A20               	incf	(___awmod@divisor+1)^0,f,c
  5709   001EC8                     l2279:
  5710   001EC8  501F               	movf	___awmod@divisor^0,w,c
  5711   001ECA  1020               	iorwf	(___awmod@divisor+1)^0,w,c
  5712   001ECC  B4D8               	btfsc	status,2,c
  5713   001ECE  EF6B  F00F         	goto	u2041
  5714   001ED2  EF6D  F00F         	goto	u2040
  5715   001ED6                     u2041:
  5716   001ED6  EF91  F00F         	goto	l2295
  5717   001EDA                     u2040:
  5718   001EDA  0E01               	movlw	1
  5719   001EDC  6E21               	movwf	___awmod@counter^0,c
  5720   001EDE  EF75  F00F         	goto	l2285
  5721   001EE2                     l2283:
  5722   001EE2  90D8               	bcf	status,0,c
  5723   001EE4  361F               	rlcf	___awmod@divisor^0,f,c
  5724   001EE6  3620               	rlcf	(___awmod@divisor+1)^0,f,c
  5725   001EE8  2A21               	incf	___awmod@counter^0,f,c
  5726   001EEA                     l2285:
  5727   001EEA  AE20               	btfss	(___awmod@divisor+1)^0,7,c
  5728   001EEC  EF7A  F00F         	goto	u2051
  5729   001EF0  EF7C  F00F         	goto	u2050
  5730   001EF4                     u2051:
  5731   001EF4  EF71  F00F         	goto	l2283
  5732   001EF8                     u2050:
  5733   001EF8                     l2287:
  5734   001EF8  501F               	movf	___awmod@divisor^0,w,c
  5735   001EFA  5C1D               	subwf	___awmod@dividend^0,w,c
  5736   001EFC  5020               	movf	(___awmod@divisor+1)^0,w,c
  5737   001EFE  581E               	subwfb	(___awmod@dividend+1)^0,w,c
  5738   001F00  A0D8               	btfss	status,0,c
  5739   001F02  EF85  F00F         	goto	u2061
  5740   001F06  EF87  F00F         	goto	u2060
  5741   001F0A                     u2061:
  5742   001F0A  EF8B  F00F         	goto	l2291
  5743   001F0E                     u2060:
  5744   001F0E  501F               	movf	___awmod@divisor^0,w,c
  5745   001F10  5E1D               	subwf	___awmod@dividend^0,f,c
  5746   001F12  5020               	movf	(___awmod@divisor+1)^0,w,c
  5747   001F14  5A1E               	subwfb	(___awmod@dividend+1)^0,f,c
  5748   001F16                     l2291:
  5749   001F16  90D8               	bcf	status,0,c
  5750   001F18  3220               	rrcf	(___awmod@divisor+1)^0,f,c
  5751   001F1A  321F               	rrcf	___awmod@divisor^0,f,c
  5752   001F1C  2E21               	decfsz	___awmod@counter^0,f,c
  5753   001F1E  EF7C  F00F         	goto	l2287
  5754   001F22                     l2295:
  5755   001F22  5022               	movf	___awmod@sign^0,w,c
  5756   001F24  B4D8               	btfsc	status,2,c
  5757   001F26  EF97  F00F         	goto	u2071
  5758   001F2A  EF99  F00F         	goto	u2070
  5759   001F2E                     u2071:
  5760   001F2E  EF9D  F00F         	goto	l2299
  5761   001F32                     u2070:
  5762   001F32  6C1D               	negf	___awmod@dividend^0,c
  5763   001F34  1E1E               	comf	(___awmod@dividend+1)^0,f,c
  5764   001F36  B0D8               	btfsc	status,0,c
  5765   001F38  2A1E               	incf	(___awmod@dividend+1)^0,f,c
  5766   001F3A                     l2299:
  5767   001F3A  C01D  F01D         	movff	___awmod@dividend,?___awmod
  5768   001F3E  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
  5769   001F42  0012               	return		;funcret
  5770   001F44                     __end_of___awmod:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function ___awdiv *****************
  5774 ;; Defined at:
  5775 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  dividend        2   34[COMRAM] int 
  5778 ;;  divisor         2   36[COMRAM] int 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  quotient        2   40[COMRAM] int 
  5781 ;;  sign            1   39[COMRAM] unsigned char 
  5782 ;;  counter         1   38[COMRAM] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  2   34[COMRAM] int 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5792 ;;      Params:         4       0       0       0       0       0       0
  5793 ;;      Locals:         4       0       0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0
  5795 ;;      Totals:         8       0       0       0       0       0       0
  5796 ;;Total ram usage:        8 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_lighton
  5803 ;;		_antirainfall
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text18
  5808   001D10                     __ptext18:
  5809                           	callstack 0
  5810   001D10                     ___awdiv:
  5811                           	callstack 26
  5812   001D10  0E00               	movlw	0
  5813   001D12  6E28               	movwf	___awdiv@sign^0,c
  5814   001D14  BE26               	btfsc	(___awdiv@divisor+1)^0,7,c
  5815   001D16  EF91  F00E         	goto	u1960
  5816   001D1A  EF8F  F00E         	goto	u1961
  5817   001D1E                     u1961:
  5818   001D1E  EF97  F00E         	goto	l2231
  5819   001D22                     u1960:
  5820   001D22  6C25               	negf	___awdiv@divisor^0,c
  5821   001D24  1E26               	comf	(___awdiv@divisor+1)^0,f,c
  5822   001D26  B0D8               	btfsc	status,0,c
  5823   001D28  2A26               	incf	(___awdiv@divisor+1)^0,f,c
  5824   001D2A  0E01               	movlw	1
  5825   001D2C  6E28               	movwf	___awdiv@sign^0,c
  5826   001D2E                     l2231:
  5827   001D2E  BE24               	btfsc	(___awdiv@dividend+1)^0,7,c
  5828   001D30  EF9E  F00E         	goto	u1970
  5829   001D34  EF9C  F00E         	goto	u1971
  5830   001D38                     u1971:
  5831   001D38  EFA4  F00E         	goto	l2237
  5832   001D3C                     u1970:
  5833   001D3C  6C23               	negf	___awdiv@dividend^0,c
  5834   001D3E  1E24               	comf	(___awdiv@dividend+1)^0,f,c
  5835   001D40  B0D8               	btfsc	status,0,c
  5836   001D42  2A24               	incf	(___awdiv@dividend+1)^0,f,c
  5837   001D44  0E01               	movlw	1
  5838   001D46  1A28               	xorwf	___awdiv@sign^0,f,c
  5839   001D48                     l2237:
  5840   001D48  0E00               	movlw	0
  5841   001D4A  6E2A               	movwf	(___awdiv@quotient+1)^0,c
  5842   001D4C  0E00               	movlw	0
  5843   001D4E  6E29               	movwf	___awdiv@quotient^0,c
  5844   001D50  5025               	movf	___awdiv@divisor^0,w,c
  5845   001D52  1026               	iorwf	(___awdiv@divisor+1)^0,w,c
  5846   001D54  B4D8               	btfsc	status,2,c
  5847   001D56  EFAF  F00E         	goto	u1981
  5848   001D5A  EFB1  F00E         	goto	u1980
  5849   001D5E                     u1981:
  5850   001D5E  EFD9  F00E         	goto	l2259
  5851   001D62                     u1980:
  5852   001D62  0E01               	movlw	1
  5853   001D64  6E27               	movwf	___awdiv@counter^0,c
  5854   001D66  EFB9  F00E         	goto	l2245
  5855   001D6A                     l2243:
  5856   001D6A  90D8               	bcf	status,0,c
  5857   001D6C  3625               	rlcf	___awdiv@divisor^0,f,c
  5858   001D6E  3626               	rlcf	(___awdiv@divisor+1)^0,f,c
  5859   001D70  2A27               	incf	___awdiv@counter^0,f,c
  5860   001D72                     l2245:
  5861   001D72  AE26               	btfss	(___awdiv@divisor+1)^0,7,c
  5862   001D74  EFBE  F00E         	goto	u1991
  5863   001D78  EFC0  F00E         	goto	u1990
  5864   001D7C                     u1991:
  5865   001D7C  EFB5  F00E         	goto	l2243
  5866   001D80                     u1990:
  5867   001D80                     l2247:
  5868   001D80  90D8               	bcf	status,0,c
  5869   001D82  3629               	rlcf	___awdiv@quotient^0,f,c
  5870   001D84  362A               	rlcf	(___awdiv@quotient+1)^0,f,c
  5871   001D86  5025               	movf	___awdiv@divisor^0,w,c
  5872   001D88  5C23               	subwf	___awdiv@dividend^0,w,c
  5873   001D8A  5026               	movf	(___awdiv@divisor+1)^0,w,c
  5874   001D8C  5824               	subwfb	(___awdiv@dividend+1)^0,w,c
  5875   001D8E  A0D8               	btfss	status,0,c
  5876   001D90  EFCC  F00E         	goto	u2001
  5877   001D94  EFCE  F00E         	goto	u2000
  5878   001D98                     u2001:
  5879   001D98  EFD3  F00E         	goto	l2255
  5880   001D9C                     u2000:
  5881   001D9C  5025               	movf	___awdiv@divisor^0,w,c
  5882   001D9E  5E23               	subwf	___awdiv@dividend^0,f,c
  5883   001DA0  5026               	movf	(___awdiv@divisor+1)^0,w,c
  5884   001DA2  5A24               	subwfb	(___awdiv@dividend+1)^0,f,c
  5885   001DA4  8029               	bsf	___awdiv@quotient^0,0,c
  5886   001DA6                     l2255:
  5887   001DA6  90D8               	bcf	status,0,c
  5888   001DA8  3226               	rrcf	(___awdiv@divisor+1)^0,f,c
  5889   001DAA  3225               	rrcf	___awdiv@divisor^0,f,c
  5890   001DAC  2E27               	decfsz	___awdiv@counter^0,f,c
  5891   001DAE  EFC0  F00E         	goto	l2247
  5892   001DB2                     l2259:
  5893   001DB2  5028               	movf	___awdiv@sign^0,w,c
  5894   001DB4  B4D8               	btfsc	status,2,c
  5895   001DB6  EFDF  F00E         	goto	u2011
  5896   001DBA  EFE1  F00E         	goto	u2010
  5897   001DBE                     u2011:
  5898   001DBE  EFE5  F00E         	goto	l2263
  5899   001DC2                     u2010:
  5900   001DC2  6C29               	negf	___awdiv@quotient^0,c
  5901   001DC4  1E2A               	comf	(___awdiv@quotient+1)^0,f,c
  5902   001DC6  B0D8               	btfsc	status,0,c
  5903   001DC8  2A2A               	incf	(___awdiv@quotient+1)^0,f,c
  5904   001DCA                     l2263:
  5905   001DCA  C029  F023         	movff	___awdiv@quotient,?___awdiv
  5906   001DCE  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  5907   001DD2  0012               	return		;funcret
  5908   001DD4                     __end_of___awdiv:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _clear_plane *****************
  5912 ;; Defined at:
  5913 ;;		line 87 in file "main.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  j               2   52[COMRAM] int 
  5918 ;;  i               2   50[COMRAM] int 
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5928 ;;      Params:         0       0       0       0       0       0       0
  5929 ;;      Locals:         4       0       0       0       0       0       0
  5930 ;;      Temps:          2       0       0       0       0       0       0
  5931 ;;      Totals:         6       0       0       0       0       0       0
  5932 ;;Total ram usage:        6 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 3
  5935 ;; This function calls:
  5936 ;;		___wmul
  5937 ;;		_draw_plane
  5938 ;; This function is called by:
  5939 ;;		_random_pattern
  5940 ;;		_antirainfall
  5941 ;;		_hitler
  5942 ;;		_scan
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text19
  5947   00214C                     __ptext19:
  5948                           	callstack 0
  5949   00214C                     _clear_plane:
  5950                           	callstack 26
  5951   00214C                     
  5952                           ;main.c: 88:         case 2:
  5953   00214C  0E00               	movlw	0
  5954   00214E  6E34               	movwf	(clear_plane@i+1)^0,c
  5955   002150  0E00               	movlw	0
  5956   002152  6E33               	movwf	clear_plane@i^0,c
  5957   002154                     l2309:
  5958                           
  5959                           ;main.c: 89:             TRISAbits.TRISA7 = 0;
  5960   002154  0E00               	movlw	0
  5961   002156  6E36               	movwf	(clear_plane@j+1)^0,c
  5962   002158  0E00               	movlw	0
  5963   00215A  6E35               	movwf	clear_plane@j^0,c
  5964   00215C                     l2315:
  5965                           
  5966                           ;main.c: 90:             LATAbits.LA7 = 1;
  5967   00215C  C033  F02B         	movff	clear_plane@i,___wmul@multiplier
  5968   002160  C034  F02C         	movff	clear_plane@i+1,___wmul@multiplier+1
  5969   002164  0E00               	movlw	0
  5970   002166  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  5971   002168  0E0A               	movlw	10
  5972   00216A  6E2D               	movwf	___wmul@multiplicand^0,c
  5973   00216C  EC00  F012         	call	___wmul	;wreg free
  5974   002170  0E80               	movlw	low _plane
  5975   002172  242B               	addwf	?___wmul^0,w,c
  5976   002174  6E31               	movwf	??_clear_plane^0,c
  5977   002176  0E00               	movlw	high _plane
  5978   002178  202C               	addwfc	(?___wmul+1)^0,w,c
  5979   00217A  6E32               	movwf	(??_clear_plane+1)^0,c
  5980   00217C  90D8               	bcf	status,0,c
  5981   00217E  3435               	rlcf	clear_plane@j^0,w,c
  5982   002180  6ED9               	movwf	fsr2l,c
  5983   002182  3436               	rlcf	(clear_plane@j+1)^0,w,c
  5984   002184  6EDA               	movwf	fsr2h,c
  5985   002186  5031               	movf	??_clear_plane^0,w,c
  5986   002188  26D9               	addwf	fsr2l,f,c
  5987   00218A  5032               	movf	(??_clear_plane+1)^0,w,c
  5988   00218C  22DA               	addwfc	fsr2h,f,c
  5989   00218E  0E00               	movlw	0
  5990   002190  6EDE               	movwf	postinc2,c
  5991   002192  0E00               	movlw	0
  5992   002194  6EDD               	movwf	postdec2,c
  5993   002196  4A35               	infsnz	clear_plane@j^0,f,c
  5994   002198  2A36               	incf	(clear_plane@j+1)^0,f,c
  5995   00219A  BE36               	btfsc	(clear_plane@j+1)^0,7,c
  5996   00219C  EFD9  F010         	goto	u2081
  5997   0021A0  5036               	movf	(clear_plane@j+1)^0,w,c
  5998   0021A2  E109               	bnz	u2080
  5999   0021A4  0E05               	movlw	5
  6000   0021A6  5C35               	subwf	clear_plane@j^0,w,c
  6001   0021A8  A0D8               	btfss	status,0,c
  6002   0021AA  EFD9  F010         	goto	u2081
  6003   0021AE  EFDB  F010         	goto	u2080
  6004   0021B2                     u2081:
  6005   0021B2  EFAE  F010         	goto	l2315
  6006   0021B6                     u2080:
  6007   0021B6  4A33               	infsnz	clear_plane@i^0,f,c
  6008   0021B8  2A34               	incf	(clear_plane@i+1)^0,f,c
  6009   0021BA  BE34               	btfsc	(clear_plane@i+1)^0,7,c
  6010   0021BC  EFE9  F010         	goto	u2091
  6011   0021C0  5034               	movf	(clear_plane@i+1)^0,w,c
  6012   0021C2  E109               	bnz	u2090
  6013   0021C4  0E05               	movlw	5
  6014   0021C6  5C33               	subwf	clear_plane@i^0,w,c
  6015   0021C8  A0D8               	btfss	status,0,c
  6016   0021CA  EFE9  F010         	goto	u2091
  6017   0021CE  EFEB  F010         	goto	u2090
  6018   0021D2                     u2091:
  6019   0021D2  EFAA  F010         	goto	l2309
  6020   0021D6                     u2090:
  6021   0021D6                     
  6022                           ;main.c: 91:             break;
  6023   0021D6  EC89  F00D         	call	_draw_plane	;wreg free
  6024   0021DA  0012               	return		;funcret
  6025   0021DC                     __end_of_clear_plane:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function _draw_plane *****************
  6029 ;; Defined at:
  6030 ;;		line 55 in file "main.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;		None
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      void 
  6037 ;; Registers used:
  6038 ;;		None
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6044 ;;      Params:         0       0       0       0       0       0       0
  6045 ;;      Locals:         0       0       0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0
  6047 ;;      Totals:         0       0       0       0       0       0       0
  6048 ;;Total ram usage:        0 bytes
  6049 ;; Hardware stack levels used: 1
  6050 ;; Hardware stack levels required when called: 2
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_clear_plane
  6055 ;;		_lighton
  6056 ;;		_antirainfall
  6057 ;;		_hitler
  6058 ;;		_scan
  6059 ;;		_speedup
  6060 ;;		_pulsing
  6061 ;;		_slash
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text20
  6066   001B12                     __ptext20:
  6067                           	callstack 0
  6068   001B12                     _draw_plane:
  6069                           	callstack 27
  6070   001B12                     
  6071                           ;main.c: 56:     LATBbits.LB4 = plane[2][4];
  6072   001B12  0100               	movlb	0	; () banked
  6073   001B14  B180               	btfsc	_plane& (0+255),0,b
  6074   001B16  D002               	bra	u1695
  6075   001B18  9089               	bcf	137,0,c	;volatile
  6076   001B1A  D001               	bra	u1696
  6077   001B1C                     u1695:
  6078   001B1C  8089               	bsf	137,0,c	;volatile
  6079   001B1E                     u1696:
  6080                           
  6081                           ;main.c: 57: 
  6082   001B1E  0100               	movlb	0	; () banked
  6083   001B20  B182               	btfsc	(_plane+2)& (0+255),0,b
  6084   001B22  D002               	bra	u1705
  6085   001B24  9289               	bcf	137,1,c	;volatile
  6086   001B26  D001               	bra	u1706
  6087   001B28                     u1705:
  6088   001B28  8289               	bsf	137,1,c	;volatile
  6089   001B2A                     u1706:
  6090                           
  6091                           ;main.c: 58:     LATCbits.LC7 = plane[3][0];
  6092   001B2A  0100               	movlb	0	; () banked
  6093   001B2C  B184               	btfsc	(_plane+4)& (0+255),0,b
  6094   001B2E  D002               	bra	u1715
  6095   001B30  9489               	bcf	137,2,c	;volatile
  6096   001B32  D001               	bra	u1716
  6097   001B34                     u1715:
  6098   001B34  8489               	bsf	137,2,c	;volatile
  6099   001B36                     u1716:
  6100                           
  6101                           ;main.c: 59:     LATDbits.LD4 = plane[3][1];
  6102   001B36  0100               	movlb	0	; () banked
  6103   001B38  B186               	btfsc	(_plane+6)& (0+255),0,b
  6104   001B3A  D002               	bra	u1725
  6105   001B3C  9689               	bcf	137,3,c	;volatile
  6106   001B3E  D001               	bra	u1726
  6107   001B40                     u1725:
  6108   001B40  8689               	bsf	137,3,c	;volatile
  6109   001B42                     u1726:
  6110                           
  6111                           ;main.c: 60:     LATDbits.LD5 = plane[3][2];
  6112   001B42  0100               	movlb	0	; () banked
  6113   001B44  B188               	btfsc	(_plane+8)& (0+255),0,b
  6114   001B46  D002               	bra	u1735
  6115   001B48  9889               	bcf	137,4,c	;volatile
  6116   001B4A  D001               	bra	u1736
  6117   001B4C                     u1735:
  6118   001B4C  8889               	bsf	137,4,c	;volatile
  6119   001B4E                     u1736:
  6120                           
  6121                           ;main.c: 62:     LATDbits.LD7 = plane[3][4];
  6122   001B4E  0100               	movlb	0	; () banked
  6123   001B50  B18A               	btfsc	(_plane+10)& (0+255),0,b
  6124   001B52  D002               	bra	u1745
  6125   001B54  928B               	bcf	139,1,c	;volatile
  6126   001B56  D001               	bra	u1746
  6127   001B58                     u1745:
  6128   001B58  828B               	bsf	139,1,c	;volatile
  6129   001B5A                     u1746:
  6130                           
  6131                           ;main.c: 63: 
  6132   001B5A  0100               	movlb	0	; () banked
  6133   001B5C  B18C               	btfsc	(_plane+12)& (0+255),0,b
  6134   001B5E  D002               	bra	u1755
  6135   001B60  948B               	bcf	139,2,c	;volatile
  6136   001B62  D001               	bra	u1756
  6137   001B64                     u1755:
  6138   001B64  848B               	bsf	139,2,c	;volatile
  6139   001B66                     u1756:
  6140                           
  6141                           ;main.c: 64:     LATDbits.LD2 = plane[4][0];
  6142   001B66  0100               	movlb	0	; () banked
  6143   001B68  B18E               	btfsc	(_plane+14)& (0+255),0,b
  6144   001B6A  D002               	bra	u1765
  6145   001B6C  968B               	bcf	139,3,c	;volatile
  6146   001B6E  D001               	bra	u1766
  6147   001B70                     u1765:
  6148   001B70  868B               	bsf	139,3,c	;volatile
  6149   001B72                     u1766:
  6150                           
  6151                           ;main.c: 65:     LATDbits.LD3 = plane[4][1];
  6152   001B72  0100               	movlb	0	; () banked
  6153   001B74  B190               	btfsc	(_plane+16)& (0+255),0,b
  6154   001B76  D002               	bra	u1775
  6155   001B78  908C               	bcf	140,0,c	;volatile
  6156   001B7A  D001               	bra	u1776
  6157   001B7C                     u1775:
  6158   001B7C  808C               	bsf	140,0,c	;volatile
  6159   001B7E                     u1776:
  6160                           
  6161                           ;main.c: 66:     LATCbits.LC4 = plane[4][2];
  6162   001B7E  0100               	movlb	0	; () banked
  6163   001B80  B192               	btfsc	(_plane+18)& (0+255),0,b
  6164   001B82  D002               	bra	u1785
  6165   001B84  928C               	bcf	140,1,c	;volatile
  6166   001B86  D001               	bra	u1786
  6167   001B88                     u1785:
  6168   001B88  828C               	bsf	140,1,c	;volatile
  6169   001B8A                     u1786:
  6170                           
  6171                           ;main.c: 68:     LATCbits.LC6 = plane[4][4];
  6172   001B8A  0100               	movlb	0	; () banked
  6173   001B8C  B194               	btfsc	(_plane+20)& (0+255),0,b
  6174   001B8E  D002               	bra	u1795
  6175   001B90  908A               	bcf	138,0,c	;volatile
  6176   001B92  D001               	bra	u1796
  6177   001B94                     u1795:
  6178   001B94  808A               	bsf	138,0,c	;volatile
  6179   001B96                     u1796:
  6180                           
  6181                           ;main.c: 69: }
  6182   001B96  0100               	movlb	0	; () banked
  6183   001B98  B196               	btfsc	(_plane+22)& (0+255),0,b
  6184   001B9A  D002               	bra	u1805
  6185   001B9C  928A               	bcf	138,1,c	;volatile
  6186   001B9E  D001               	bra	u1806
  6187   001BA0                     u1805:
  6188   001BA0  828A               	bsf	138,1,c	;volatile
  6189   001BA2                     u1806:
  6190                           
  6191                           ;main.c: 70: 
  6192   001BA2  0100               	movlb	0	; () banked
  6193   001BA4  B198               	btfsc	(_plane+24)& (0+255),0,b
  6194   001BA6  D002               	bra	u1815
  6195   001BA8  948A               	bcf	138,2,c	;volatile
  6196   001BAA  D001               	bra	u1816
  6197   001BAC                     u1815:
  6198   001BAC  848A               	bsf	138,2,c	;volatile
  6199   001BAE                     u1816:
  6200                           
  6201                           ;main.c: 71: void clear_plane(){
  6202   001BAE  0100               	movlb	0	; () banked
  6203   001BB0  B19A               	btfsc	(_plane+26)& (0+255),0,b
  6204   001BB2  D002               	bra	u1825
  6205   001BB4  968A               	bcf	138,3,c	;volatile
  6206   001BB6  D001               	bra	u1826
  6207   001BB8                     u1825:
  6208   001BB8  868A               	bsf	138,3,c	;volatile
  6209   001BBA                     u1826:
  6210                           
  6211                           ;main.c: 72:     for(int i = 0; i < 5; i++)
  6212   001BBA  0100               	movlb	0	; () banked
  6213   001BBC  B19C               	btfsc	(_plane+28)& (0+255),0,b
  6214   001BBE  D002               	bra	u1835
  6215   001BC0  988A               	bcf	138,4,c	;volatile
  6216   001BC2  D001               	bra	u1836
  6217   001BC4                     u1835:
  6218   001BC4  888A               	bsf	138,4,c	;volatile
  6219   001BC6                     u1836:
  6220                           
  6221                           ;main.c: 74:             plane[i][j] = 0;
  6222   001BC6  0100               	movlb	0	; () banked
  6223   001BC8  B19E               	btfsc	(_plane+30)& (0+255),0,b
  6224   001BCA  D002               	bra	u1845
  6225   001BCC  9E8B               	bcf	139,7,c	;volatile
  6226   001BCE  D001               	bra	u1846
  6227   001BD0                     u1845:
  6228   001BD0  8E8B               	bsf	139,7,c	;volatile
  6229   001BD2                     u1846:
  6230                           
  6231                           ;main.c: 75:     draw_plane();
  6232   001BD2  0100               	movlb	0	; () banked
  6233   001BD4  B1A0               	btfsc	(_plane+32)& (0+255),0,b
  6234   001BD6  D002               	bra	u1855
  6235   001BD8  988C               	bcf	140,4,c	;volatile
  6236   001BDA  D001               	bra	u1856
  6237   001BDC                     u1855:
  6238   001BDC  888C               	bsf	140,4,c	;volatile
  6239   001BDE                     u1856:
  6240                           
  6241                           ;main.c: 76: }
  6242   001BDE  0100               	movlb	0	; () banked
  6243   001BE0  B1A2               	btfsc	(_plane+34)& (0+255),0,b
  6244   001BE2  D002               	bra	u1865
  6245   001BE4  9A8C               	bcf	140,5,c	;volatile
  6246   001BE6  D001               	bra	u1866
  6247   001BE8                     u1865:
  6248   001BE8  8A8C               	bsf	140,5,c	;volatile
  6249   001BEA                     u1866:
  6250                           
  6251                           ;main.c: 77: 
  6252   001BEA  0100               	movlb	0	; () banked
  6253   001BEC  B1A4               	btfsc	(_plane+36)& (0+255),0,b
  6254   001BEE  D002               	bra	u1875
  6255   001BF0  9C8C               	bcf	140,6,c	;volatile
  6256   001BF2  D001               	bra	u1876
  6257   001BF4                     u1875:
  6258   001BF4  8C8C               	bsf	140,6,c	;volatile
  6259   001BF6                     u1876:
  6260                           
  6261                           ;main.c: 78: void plane_on(int a){
  6262   001BF6  0100               	movlb	0	; () banked
  6263   001BF8  B1A6               	btfsc	(_plane+38)& (0+255),0,b
  6264   001BFA  D002               	bra	u1885
  6265   001BFC  9E8C               	bcf	140,7,c	;volatile
  6266   001BFE  D001               	bra	u1886
  6267   001C00                     u1885:
  6268   001C00  8E8C               	bsf	140,7,c	;volatile
  6269   001C02                     u1886:
  6270                           
  6271                           ;main.c: 80:         case 0:
  6272   001C02  0100               	movlb	0	; () banked
  6273   001C04  B1A8               	btfsc	(_plane+40)& (0+255),0,b
  6274   001C06  D002               	bra	u1895
  6275   001C08  948C               	bcf	140,2,c	;volatile
  6276   001C0A  D001               	bra	u1896
  6277   001C0C                     u1895:
  6278   001C0C  848C               	bsf	140,2,c	;volatile
  6279   001C0E                     u1896:
  6280                           
  6281                           ;main.c: 81:             TRISEbits.TRISE1 = 0;
  6282   001C0E  0100               	movlb	0	; () banked
  6283   001C10  B1AA               	btfsc	(_plane+42)& (0+255),0,b
  6284   001C12  D002               	bra	u1905
  6285   001C14  968C               	bcf	140,3,c	;volatile
  6286   001C16  D001               	bra	u1906
  6287   001C18                     u1905:
  6288   001C18  868C               	bsf	140,3,c	;volatile
  6289   001C1A                     u1906:
  6290                           
  6291                           ;main.c: 82:             LATEbits.LE1 = 1;
  6292   001C1A  0100               	movlb	0	; () banked
  6293   001C1C  B1AC               	btfsc	(_plane+44)& (0+255),0,b
  6294   001C1E  D002               	bra	u1915
  6295   001C20  988B               	bcf	139,4,c	;volatile
  6296   001C22  D001               	bra	u1916
  6297   001C24                     u1915:
  6298   001C24  888B               	bsf	139,4,c	;volatile
  6299   001C26                     u1916:
  6300                           
  6301                           ;main.c: 83:             break;
  6302   001C26  0100               	movlb	0	; () banked
  6303   001C28  B1AE               	btfsc	(_plane+46)& (0+255),0,b
  6304   001C2A  D002               	bra	u1925
  6305   001C2C  9A8B               	bcf	139,5,c	;volatile
  6306   001C2E  D001               	bra	u1926
  6307   001C30                     u1925:
  6308   001C30  8A8B               	bsf	139,5,c	;volatile
  6309   001C32                     u1926:
  6310                           
  6311                           ;main.c: 84:         case 1:
  6312   001C32  0100               	movlb	0	; () banked
  6313   001C34  B1B0               	btfsc	(_plane+48)& (0+255),0,b
  6314   001C36  D002               	bra	u1935
  6315   001C38  9C8B               	bcf	139,6,c	;volatile
  6316   001C3A  D001               	bra	u1936
  6317   001C3C                     u1935:
  6318   001C3C  8C8B               	bsf	139,6,c	;volatile
  6319   001C3E                     u1936:
  6320   001C3E  0012               	return		;funcret
  6321   001C40                     __end_of_draw_plane:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function _clear_cube *****************
  6325 ;; Defined at:
  6326 ;;		line 137 in file "main.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;		None
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  j               2   52[COMRAM] int 
  6331 ;;  i               2   50[COMRAM] int 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6341 ;;      Params:         0       0       0       0       0       0       0
  6342 ;;      Locals:         4       0       0       0       0       0       0
  6343 ;;      Temps:          2       0       0       0       0       0       0
  6344 ;;      Totals:         6       0       0       0       0       0       0
  6345 ;;Total ram usage:        6 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 3
  6348 ;; This function calls:
  6349 ;;		___wmul
  6350 ;; This function is called by:
  6351 ;;		_antirainfall
  6352 ;;		_hitler
  6353 ;;		_scan
  6354 ;;		_speedup
  6355 ;;		_cubeidle
  6356 ;;		_pulsing
  6357 ;;		_main
  6358 ;;		_slash
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text21
  6363   0020A2                     __ptext21:
  6364                           	callstack 0
  6365   0020A2                     _clear_cube:
  6366                           	callstack 26
  6367   0020A2                     
  6368                           ;main.c: 139: void lighton(int x, int prev){
  6369   0020A2  0E00               	movlw	0
  6370   0020A4  6E92               	movwf	146,c	;volatile
  6371                           
  6372                           ;main.c: 140:     set_plane(x/25);
  6373   0020A6  0E00               	movlw	0
  6374   0020A8  6E93               	movwf	147,c	;volatile
  6375                           
  6376                           ;main.c: 141:     if(prev != -1)plane[(prev%25)/5][prev%5] = 0;
  6377   0020AA  0E00               	movlw	0
  6378   0020AC  6E94               	movwf	148,c	;volatile
  6379                           
  6380                           ;main.c: 142:     if(x!=-1)plane[(x%25)/5][x%5] = 1;
  6381   0020AE  0E00               	movlw	0
  6382   0020B0  6E95               	movwf	149,c	;volatile
  6383                           
  6384                           ;main.c: 143:     draw_plane();
  6385   0020B2  0E00               	movlw	0
  6386   0020B4  6E96               	movwf	150,c	;volatile
  6387   0020B6                     
  6388                           ;main.c: 144: }
  6389   0020B6  8296               	bsf	150,1,c	;volatile
  6390   0020B8                     
  6391                           ;main.c: 145: int move(int x, int r){
  6392   0020B8  8496               	bsf	150,2,c	;volatile
  6393   0020BA                     
  6394                           ;main.c: 146:     if(r == 0)x = (x%5 == 4) ? x-4 : x+1;
  6395   0020BA  8E92               	bsf	146,7,c	;volatile
  6396   0020BC                     
  6397                           ;main.c: 147:     else if(r == 1)x = (x%5 == 0) ? x+4 : x-1;
  6398   0020BC  8C92               	bsf	146,6,c	;volatile
  6399   0020BE                     
  6400                           ;main.c: 148:     else if(r == 2)x = (x%25 >= 20) ? x-20 : x+5;
  6401   0020BE  8094               	bsf	148,0,c	;volatile
  6402                           
  6403                           ;main.c: 149:     else if(r == 3)x = (x%25 < 5) ? x+20 : x-5;
  6404   0020C0  0E00               	movlw	0
  6405   0020C2  6E34               	movwf	(clear_cube@i+1)^0,c
  6406   0020C4  0E00               	movlw	0
  6407   0020C6  6E33               	movwf	clear_cube@i^0,c
  6408   0020C8                     l2343:
  6409                           
  6410                           ;main.c: 150:     else if(r == 4)x = (x >= 100) ? x-100 : x+25;
  6411   0020C8  0E00               	movlw	0
  6412   0020CA  6E36               	movwf	(clear_cube@j+1)^0,c
  6413   0020CC  0E00               	movlw	0
  6414   0020CE  6E35               	movwf	clear_cube@j^0,c
  6415   0020D0                     l2349:
  6416                           
  6417                           ;main.c: 151:     else if(r == 5)x = (x<25) ? x+100 : x-25;
  6418   0020D0  C033  F02B         	movff	clear_cube@i,___wmul@multiplier
  6419   0020D4  C034  F02C         	movff	clear_cube@i+1,___wmul@multiplier+1
  6420   0020D8  0E00               	movlw	0
  6421   0020DA  6E2E               	movwf	(___wmul@multiplicand+1)^0,c
  6422   0020DC  0E0A               	movlw	10
  6423   0020DE  6E2D               	movwf	___wmul@multiplicand^0,c
  6424   0020E0  EC00  F012         	call	___wmul	;wreg free
  6425   0020E4  0E80               	movlw	low _plane
  6426   0020E6  242B               	addwf	?___wmul^0,w,c
  6427   0020E8  6E31               	movwf	??_clear_cube^0,c
  6428   0020EA  0E00               	movlw	high _plane
  6429   0020EC  202C               	addwfc	(?___wmul+1)^0,w,c
  6430   0020EE  6E32               	movwf	(??_clear_cube+1)^0,c
  6431   0020F0  90D8               	bcf	status,0,c
  6432   0020F2  3435               	rlcf	clear_cube@j^0,w,c
  6433   0020F4  6ED9               	movwf	fsr2l,c
  6434   0020F6  3436               	rlcf	(clear_cube@j+1)^0,w,c
  6435   0020F8  6EDA               	movwf	fsr2h,c
  6436   0020FA  5031               	movf	??_clear_cube^0,w,c
  6437   0020FC  26D9               	addwf	fsr2l,f,c
  6438   0020FE  5032               	movf	(??_clear_cube+1)^0,w,c
  6439   002100  22DA               	addwfc	fsr2h,f,c
  6440   002102  0E00               	movlw	0
  6441   002104  6EDE               	movwf	postinc2,c
  6442   002106  0E00               	movlw	0
  6443   002108  6EDD               	movwf	postdec2,c
  6444   00210A  4A35               	infsnz	clear_cube@j^0,f,c
  6445   00210C  2A36               	incf	(clear_cube@j+1)^0,f,c
  6446   00210E  BE36               	btfsc	(clear_cube@j+1)^0,7,c
  6447   002110  EF93  F010         	goto	u2101
  6448   002114  5036               	movf	(clear_cube@j+1)^0,w,c
  6449   002116  E109               	bnz	u2100
  6450   002118  0E05               	movlw	5
  6451   00211A  5C35               	subwf	clear_cube@j^0,w,c
  6452   00211C  A0D8               	btfss	status,0,c
  6453   00211E  EF93  F010         	goto	u2101
  6454   002122  EF95  F010         	goto	u2100
  6455   002126                     u2101:
  6456   002126  EF68  F010         	goto	l2349
  6457   00212A                     u2100:
  6458   00212A  4A33               	infsnz	clear_cube@i^0,f,c
  6459   00212C  2A34               	incf	(clear_cube@i+1)^0,f,c
  6460   00212E  BE34               	btfsc	(clear_cube@i+1)^0,7,c
  6461   002130  EFA3  F010         	goto	u2111
  6462   002134  5034               	movf	(clear_cube@i+1)^0,w,c
  6463   002136  E109               	bnz	u2110
  6464   002138  0E05               	movlw	5
  6465   00213A  5C33               	subwf	clear_cube@i^0,w,c
  6466   00213C  A0D8               	btfss	status,0,c
  6467   00213E  EFA3  F010         	goto	u2111
  6468   002142  EFA5  F010         	goto	u2110
  6469   002146                     u2111:
  6470   002146  EF64  F010         	goto	l2343
  6471   00214A                     u2110:
  6472   00214A  0012               	return		;funcret
  6473   00214C                     __end_of_clear_cube:
  6474                           	callstack 0
  6475                           
  6476 ;; *************** function ___wmul *****************
  6477 ;; Defined at:
  6478 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  multiplier      2   42[COMRAM] unsigned int 
  6481 ;;  multiplicand    2   44[COMRAM] unsigned int 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  product         2   46[COMRAM] unsigned int 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  2   42[COMRAM] unsigned int 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0, prodl, prodh
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6493 ;;      Params:         4       0       0       0       0       0       0
  6494 ;;      Locals:         2       0       0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0
  6496 ;;      Totals:         6       0       0       0       0       0       0
  6497 ;;Total ram usage:        6 bytes
  6498 ;; Hardware stack levels used: 1
  6499 ;; Hardware stack levels required when called: 2
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_clear_plane
  6504 ;;		_clear_cube
  6505 ;;		_lighton
  6506 ;;		_antirainfall
  6507 ;;		_scan
  6508 ;;		_speedup
  6509 ;;		_pulsing
  6510 ;;		_slash
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text22
  6515   002400                     __ptext22:
  6516                           	callstack 0
  6517   002400                     ___wmul:
  6518                           	callstack 26
  6519   002400  502B               	movf	___wmul@multiplier^0,w,c
  6520   002402  022D               	mulwf	___wmul@multiplicand^0,c
  6521   002404  CFF3 F02F          	movff	prodl,___wmul@product
  6522   002408  CFF4 F030          	movff	prodh,___wmul@product+1
  6523   00240C  502B               	movf	___wmul@multiplier^0,w,c
  6524   00240E  022E               	mulwf	(___wmul@multiplicand+1)^0,c
  6525   002410  50F3               	movf	243,w,c
  6526   002412  2630               	addwf	(___wmul@product+1)^0,f,c
  6527   002414  502C               	movf	(___wmul@multiplier+1)^0,w,c
  6528   002416  022D               	mulwf	___wmul@multiplicand^0,c
  6529   002418  50F3               	movf	243,w,c
  6530   00241A  2630               	addwf	(___wmul@product+1)^0,f,c
  6531   00241C  C02F  F02B         	movff	___wmul@product,?___wmul
  6532   002420  C030  F02C         	movff	___wmul@product+1,?___wmul+1
  6533   002424  0012               	return		;funcret
  6534   002426                     __end_of___wmul:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function _H_ISR *****************
  6538 ;; Defined at:
  6539 ;;		line 648 in file "main.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  value           2    8[COMRAM] int 
  6544 ;;  mapResult       1    0        unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6554 ;;      Params:         0       0       0       0       0       0       0
  6555 ;;      Locals:         2       0       0       0       0       0       0
  6556 ;;      Temps:          2       0       0       0       0       0       0
  6557 ;;      Totals:         4       0       0       0       0       0       0
  6558 ;;Total ram usage:        4 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 1
  6561 ;; This function calls:
  6562 ;;		i2___awmod
  6563 ;; This function is called by:
  6564 ;;		Interrupt level 2
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	intcode
  6569   000008                     __pintcode:
  6570                           	callstack 0
  6571   000008                     _H_ISR:
  6572                           	callstack 25
  6573                           
  6574                           ;incstack = 0
  6575   000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6576   00000A  EDFA  F00F         	call	int_func,f	;refresh shadow registers
  6577                           
  6578                           	psect	intcode_body
  6579   001FF4                     __pintcode_body:
  6580                           	callstack 25
  6581   001FF4                     int_func:
  6582                           	callstack 25
  6583   001FF4  0006               	pop		; remove dummy address from shadow register refresh
  6584   001FF6  50C4               	movf	196,w,c	;volatile
  6585   001FF8  6E08               	movwf	(??_H_ISR+1)^0,c
  6586   001FFA  6A07               	clrf	??_H_ISR^0,c
  6587   001FFC  50C3               	movf	195,w,c	;volatile
  6588   001FFE  2407               	addwf	??_H_ISR^0,w,c
  6589   002000  6E09               	movwf	H_ISR@value^0,c
  6590   002002  0E00               	movlw	0
  6591   002004  2008               	addwfc	(??_H_ISR+1)^0,w,c
  6592   002006  6E0A               	movwf	(H_ISR@value+1)^0,c
  6593   002008  5063               	movf	_flag^0,w,c
  6594   00200A  1064               	iorwf	(_flag+1)^0,w,c
  6595   00200C  A4D8               	btfss	status,2,c
  6596   00200E  EF0B  F010         	goto	i2u333_41
  6597   002012  EF0D  F010         	goto	i2u333_40
  6598   002016                     i2u333_41:
  6599   002016  EF31  F010         	goto	i2l3259
  6600   00201A                     i2u333_40:
  6601   00201A  BE0A               	btfsc	(H_ISR@value+1)^0,7,c
  6602   00201C  EF19  F010         	goto	i2u334_41
  6603   002020  500A               	movf	(H_ISR@value+1)^0,w,c
  6604   002022  E109               	bnz	i2u334_40
  6605   002024  0EC9               	movlw	201
  6606   002026  5C09               	subwf	H_ISR@value^0,w,c
  6607   002028  A0D8               	btfss	status,0,c
  6608   00202A  EF19  F010         	goto	i2u334_41
  6609   00202E  EF1B  F010         	goto	i2u334_40
  6610   002032                     i2u334_41:
  6611   002032  EF31  F010         	goto	i2l3259
  6612   002036                     i2u334_40:
  6613   002036  0E00               	movlw	0
  6614   002038  6E64               	movwf	(_flag+1)^0,c
  6615   00203A  0E01               	movlw	1
  6616   00203C  6E63               	movwf	_flag^0,c
  6617   00203E  4A65               	infsnz	_mode^0,f,c
  6618   002040  2A66               	incf	(_mode+1)^0,f,c
  6619   002042  C065  F001         	movff	_mode,i2___awmod@dividend
  6620   002046  C066  F002         	movff	_mode+1,i2___awmod@dividend+1
  6621   00204A  0E00               	movlw	0
  6622   00204C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6623   00204E  0E07               	movlw	7
  6624   002050  6E03               	movwf	i2___awmod@divisor^0,c
  6625   002052  ECA2  F00F         	call	i2___awmod	;wreg free
  6626   002056  C001  F065         	movff	?i2___awmod,_mode
  6627   00205A  C002  F066         	movff	?i2___awmod+1,_mode+1
  6628   00205E  EF4C  F010         	goto	i2l3265
  6629   002062                     i2l3259:
  6630   002062  5063               	movf	_flag^0,w,c
  6631   002064  1064               	iorwf	(_flag+1)^0,w,c
  6632   002066  B4D8               	btfsc	status,2,c
  6633   002068  EF38  F010         	goto	i2u335_41
  6634   00206C  EF3A  F010         	goto	i2u335_40
  6635   002070                     i2u335_41:
  6636   002070  EF4C  F010         	goto	i2l3265
  6637   002074                     i2u335_40:
  6638   002074  BE0A               	btfsc	(H_ISR@value+1)^0,7,c
  6639   002076  EF48  F010         	goto	i2u336_40
  6640   00207A  500A               	movf	(H_ISR@value+1)^0,w,c
  6641   00207C  E107               	bnz	i2u336_41
  6642   00207E  0E14               	movlw	20
  6643   002080  5C09               	subwf	H_ISR@value^0,w,c
  6644   002082  B0D8               	btfsc	status,0,c
  6645   002084  EF46  F010         	goto	i2u336_41
  6646   002088  EF48  F010         	goto	i2u336_40
  6647   00208C                     i2u336_41:
  6648   00208C  EF4C  F010         	goto	i2l3265
  6649   002090                     i2u336_40:
  6650   002090  0E00               	movlw	0
  6651   002092  6E64               	movwf	(_flag+1)^0,c
  6652   002094  0E00               	movlw	0
  6653   002096  6E63               	movwf	_flag^0,c
  6654   002098                     i2l3265:
  6655                           
  6656                           ;main.c: 674:     PIR1bits.ADIF = 0;
  6657   002098  9C9E               	bcf	158,6,c	;volatile
  6658   00209A                     
  6659                           ;main.c: 678:     _delay((unsigned long)((2)*(4000000/4000000.0)));
  6660   00209A  D000               	nop2		;2 cycle nop
  6661   00209C                     
  6662                           ;main.c: 680:     ADCON0bits.GO = 1;
  6663   00209C  82C2               	bsf	194,1,c	;volatile
  6664   00209E  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6665   0020A0  0011               	retfie		f
  6666   0020A2                     __end_of_H_ISR:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function i2___awmod *****************
  6670 ;; Defined at:
  6671 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  dividend        2    0[COMRAM] int 
  6674 ;;  divisor         2    2[COMRAM] int 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  sign            1    5[COMRAM] unsigned char 
  6677 ;;  counter         1    4[COMRAM] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2    0[COMRAM] int 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6687 ;;      Params:         4       0       0       0       0       0       0
  6688 ;;      Locals:         2       0       0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0
  6690 ;;      Totals:         6       0       0       0       0       0       0
  6691 ;;Total ram usage:        6 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_H_ISR
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text24
  6701   001F44                     __ptext24:
  6702                           	callstack 0
  6703   001F44                     i2___awmod:
  6704                           	callstack 25
  6705   001F44  0E00               	movlw	0
  6706   001F46  6E06               	movwf	i2___awmod@sign^0,c
  6707   001F48  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  6708   001F4A  EFAB  F00F         	goto	i2u326_40
  6709   001F4E  EFA9  F00F         	goto	i2u326_41
  6710   001F52                     i2u326_41:
  6711   001F52  EFB1  F00F         	goto	i2l3171
  6712   001F56                     i2u326_40:
  6713   001F56  6C01               	negf	i2___awmod@dividend^0,c
  6714   001F58  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6715   001F5A  B0D8               	btfsc	status,0,c
  6716   001F5C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6717   001F5E  0E01               	movlw	1
  6718   001F60  6E06               	movwf	i2___awmod@sign^0,c
  6719   001F62                     i2l3171:
  6720   001F62  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  6721   001F64  EFB8  F00F         	goto	i2u327_40
  6722   001F68  EFB6  F00F         	goto	i2u327_41
  6723   001F6C                     i2u327_41:
  6724   001F6C  EFBC  F00F         	goto	i2l3175
  6725   001F70                     i2u327_40:
  6726   001F70  6C03               	negf	i2___awmod@divisor^0,c
  6727   001F72  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6728   001F74  B0D8               	btfsc	status,0,c
  6729   001F76  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6730   001F78                     i2l3175:
  6731   001F78  5003               	movf	i2___awmod@divisor^0,w,c
  6732   001F7A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6733   001F7C  B4D8               	btfsc	status,2,c
  6734   001F7E  EFC3  F00F         	goto	i2u328_41
  6735   001F82  EFC5  F00F         	goto	i2u328_40
  6736   001F86                     i2u328_41:
  6737   001F86  EFE9  F00F         	goto	i2l3191
  6738   001F8A                     i2u328_40:
  6739   001F8A  0E01               	movlw	1
  6740   001F8C  6E05               	movwf	i2___awmod@counter^0,c
  6741   001F8E  EFCD  F00F         	goto	i2l3181
  6742   001F92                     i2l3179:
  6743   001F92  90D8               	bcf	status,0,c
  6744   001F94  3603               	rlcf	i2___awmod@divisor^0,f,c
  6745   001F96  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6746   001F98  2A05               	incf	i2___awmod@counter^0,f,c
  6747   001F9A                     i2l3181:
  6748   001F9A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6749   001F9C  EFD2  F00F         	goto	i2u329_41
  6750   001FA0  EFD4  F00F         	goto	i2u329_40
  6751   001FA4                     i2u329_41:
  6752   001FA4  EFC9  F00F         	goto	i2l3179
  6753   001FA8                     i2u329_40:
  6754   001FA8                     i2l3183:
  6755   001FA8  5003               	movf	i2___awmod@divisor^0,w,c
  6756   001FAA  5C01               	subwf	i2___awmod@dividend^0,w,c
  6757   001FAC  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6758   001FAE  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6759   001FB0  A0D8               	btfss	status,0,c
  6760   001FB2  EFDD  F00F         	goto	i2u330_41
  6761   001FB6  EFDF  F00F         	goto	i2u330_40
  6762   001FBA                     i2u330_41:
  6763   001FBA  EFE3  F00F         	goto	i2l3187
  6764   001FBE                     i2u330_40:
  6765   001FBE  5003               	movf	i2___awmod@divisor^0,w,c
  6766   001FC0  5E01               	subwf	i2___awmod@dividend^0,f,c
  6767   001FC2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6768   001FC4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6769   001FC6                     i2l3187:
  6770   001FC6  90D8               	bcf	status,0,c
  6771   001FC8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6772   001FCA  3203               	rrcf	i2___awmod@divisor^0,f,c
  6773   001FCC  2E05               	decfsz	i2___awmod@counter^0,f,c
  6774   001FCE  EFD4  F00F         	goto	i2l3183
  6775   001FD2                     i2l3191:
  6776   001FD2  5006               	movf	i2___awmod@sign^0,w,c
  6777   001FD4  B4D8               	btfsc	status,2,c
  6778   001FD6  EFEF  F00F         	goto	i2u331_41
  6779   001FDA  EFF1  F00F         	goto	i2u331_40
  6780   001FDE                     i2u331_41:
  6781   001FDE  EFF5  F00F         	goto	i2l3195
  6782   001FE2                     i2u331_40:
  6783   001FE2  6C01               	negf	i2___awmod@dividend^0,c
  6784   001FE4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6785   001FE6  B0D8               	btfsc	status,0,c
  6786   001FE8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6787   001FEA                     i2l3195:
  6788   001FEA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6789   001FEE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6790   001FF2  0012               	return		;funcret
  6791   001FF4                     __end_ofi2___awmod:
  6792                           	callstack 0
  6793   000000                     
  6794                           	psect	rparam
  6795   000000                     
  6796                           	psect	temp
  6797   00006B                     btemp:
  6798                           	callstack 0
  6799   00006B                     	ds	1
  6800   000000                     int$flags	set	btemp
  6801   000000                     wtemp8	set	btemp+1
  6802   000000                     ttemp5	set	btemp+1
  6803   000000                     ttemp6	set	btemp+4
  6804   000000                     ttemp7	set	btemp+8
  6805                           
  6806                           	psect	idloc
  6807                           
  6808                           ;Config register IDLOC0 @ 0x200000
  6809                           ;	unspecified, using default values
  6810   200000                     	org	2097152
  6811   200000  FF                 	db	255
  6812                           
  6813                           ;Config register IDLOC1 @ 0x200001
  6814                           ;	unspecified, using default values
  6815   200001                     	org	2097153
  6816   200001  FF                 	db	255
  6817                           
  6818                           ;Config register IDLOC2 @ 0x200002
  6819                           ;	unspecified, using default values
  6820   200002                     	org	2097154
  6821   200002  FF                 	db	255
  6822                           
  6823                           ;Config register IDLOC3 @ 0x200003
  6824                           ;	unspecified, using default values
  6825   200003                     	org	2097155
  6826   200003  FF                 	db	255
  6827                           
  6828                           ;Config register IDLOC4 @ 0x200004
  6829                           ;	unspecified, using default values
  6830   200004                     	org	2097156
  6831   200004  FF                 	db	255
  6832                           
  6833                           ;Config register IDLOC5 @ 0x200005
  6834                           ;	unspecified, using default values
  6835   200005                     	org	2097157
  6836   200005  FF                 	db	255
  6837                           
  6838                           ;Config register IDLOC6 @ 0x200006
  6839                           ;	unspecified, using default values
  6840   200006                     	org	2097158
  6841   200006  FF                 	db	255
  6842                           
  6843                           ;Config register IDLOC7 @ 0x200007
  6844                           ;	unspecified, using default values
  6845   200007                     	org	2097159
  6846   200007  FF                 	db	255
  6847                           
  6848                           	psect	config
  6849                           
  6850                           ; Padding undefined space
  6851   300000                     	org	3145728
  6852   300000  FF                 	db	255
  6853                           
  6854                           ;Config register CONFIG1H @ 0x300001
  6855                           ;	Oscillator Selection bits
  6856                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6857                           ;	Fail-Safe Clock Monitor Enable bit
  6858                           ;	FCMEN = 0x0, unprogrammed default
  6859                           ;	Internal/External Oscillator Switchover bit
  6860                           ;	IESO = 0x0, unprogrammed default
  6861   300001                     	org	3145729
  6862   300001  08                 	db	8
  6863                           
  6864                           ;Config register CONFIG2L @ 0x300002
  6865                           ;	Power-up Timer Enable bit
  6866                           ;	PWRT = OFF, PWRT disabled
  6867                           ;	Brown-out Reset Enable bits
  6868                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  6869                           ;	Brown Out Reset Voltage bits
  6870                           ;	BORV = 0x3, unprogrammed default
  6871   300002                     	org	3145730
  6872   300002  1B                 	db	27
  6873                           
  6874                           ;Config register CONFIG2H @ 0x300003
  6875                           ;	Watchdog Timer Enable bit
  6876                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6877                           ;	Watchdog Timer Postscale Select bits
  6878                           ;	WDTPS = 0xF, unprogrammed default
  6879   300003                     	org	3145731
  6880   300003  1E                 	db	30
  6881                           
  6882                           ; Padding undefined space
  6883   300004                     	org	3145732
  6884   300004  FF                 	db	255
  6885                           
  6886                           ;Config register CONFIG3H @ 0x300005
  6887                           ;	CCP2 MUX bit
  6888                           ;	CCP2MX = 0x1, unprogrammed default
  6889                           ;	PORTB A/D Enable bit
  6890                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6891                           ;	Low-Power Timer1 Oscillator Enable bit
  6892                           ;	LPT1OSC = 0x0, unprogrammed default
  6893                           ;	MCLR Pin Enable bit
  6894                           ;	MCLRE = 0x1, unprogrammed default
  6895   300005                     	org	3145733
  6896   300005  81                 	db	129
  6897                           
  6898                           ;Config register CONFIG4L @ 0x300006
  6899                           ;	Stack Full/Underflow Reset Enable bit
  6900                           ;	STVREN = 0x1, unprogrammed default
  6901                           ;	Single-Supply ICSP Enable bit
  6902                           ;	LVP = OFF, Single-Supply ICSP disabled
  6903                           ;	Extended Instruction Set Enable bit
  6904                           ;	XINST = 0x0, unprogrammed default
  6905                           ;	Background Debugger Enable bit
  6906                           ;	DEBUG = 0x1, unprogrammed default
  6907   300006                     	org	3145734
  6908   300006  81                 	db	129
  6909                           
  6910                           ; Padding undefined space
  6911   300007                     	org	3145735
  6912   300007  FF                 	db	255
  6913                           
  6914                           ;Config register CONFIG5L @ 0x300008
  6915                           ;	unspecified, using default values
  6916                           ;	Code Protection bit
  6917                           ;	CP0 = 0x1, unprogrammed default
  6918                           ;	Code Protection bit
  6919                           ;	CP1 = 0x1, unprogrammed default
  6920                           ;	Code Protection bit
  6921                           ;	CP2 = 0x1, unprogrammed default
  6922                           ;	Code Protection bit
  6923                           ;	CP3 = 0x1, unprogrammed default
  6924   300008                     	org	3145736
  6925   300008  0F                 	db	15
  6926                           
  6927                           ;Config register CONFIG5H @ 0x300009
  6928                           ;	Boot Block Code Protection bit
  6929                           ;	CPB = 0x1, unprogrammed default
  6930                           ;	Data EEPROM Code Protection bit
  6931                           ;	CPD = OFF, Data EEPROM not code-protected
  6932   300009                     	org	3145737
  6933   300009  C0                 	db	192
  6934                           
  6935                           ;Config register CONFIG6L @ 0x30000A
  6936                           ;	unspecified, using default values
  6937                           ;	Write Protection bit
  6938                           ;	WRT0 = 0x1, unprogrammed default
  6939                           ;	Write Protection bit
  6940                           ;	WRT1 = 0x1, unprogrammed default
  6941                           ;	Write Protection bit
  6942                           ;	WRT2 = 0x1, unprogrammed default
  6943                           ;	Write Protection bit
  6944                           ;	WRT3 = 0x1, unprogrammed default
  6945   30000A                     	org	3145738
  6946   30000A  0F                 	db	15
  6947                           
  6948                           ;Config register CONFIG6H @ 0x30000B
  6949                           ;	unspecified, using default values
  6950                           ;	Configuration Register Write Protection bit
  6951                           ;	WRTC = 0x1, unprogrammed default
  6952                           ;	Boot Block Write Protection bit
  6953                           ;	WRTB = 0x1, unprogrammed default
  6954                           ;	Data EEPROM Write Protection bit
  6955                           ;	WRTD = 0x1, unprogrammed default
  6956   30000B                     	org	3145739
  6957   30000B  E0                 	db	224
  6958                           
  6959                           ;Config register CONFIG7L @ 0x30000C
  6960                           ;	unspecified, using default values
  6961                           ;	Table Read Protection bit
  6962                           ;	EBTR0 = 0x1, unprogrammed default
  6963                           ;	Table Read Protection bit
  6964                           ;	EBTR1 = 0x1, unprogrammed default
  6965                           ;	Table Read Protection bit
  6966                           ;	EBTR2 = 0x1, unprogrammed default
  6967                           ;	Table Read Protection bit
  6968                           ;	EBTR3 = 0x1, unprogrammed default
  6969   30000C                     	org	3145740
  6970   30000C  0F                 	db	15
  6971                           
  6972                           ;Config register CONFIG7H @ 0x30000D
  6973                           ;	unspecified, using default values
  6974                           ;	Boot Block Table Read Protection bit
  6975                           ;	EBTRB = 0x1, unprogrammed default
  6976   30000D                     	org	3145741
  6977   30000D  40                 	db	64
  6978                           tosu	equ	0xFFF
  6979                           tosh	equ	0xFFE
  6980                           tosl	equ	0xFFD
  6981                           stkptr	equ	0xFFC
  6982                           pclatu	equ	0xFFB
  6983                           pclath	equ	0xFFA
  6984                           pcl	equ	0xFF9
  6985                           tblptru	equ	0xFF8
  6986                           tblptrh	equ	0xFF7
  6987                           tblptrl	equ	0xFF6
  6988                           tablat	equ	0xFF5
  6989                           prodh	equ	0xFF4
  6990                           prodl	equ	0xFF3
  6991                           indf0	equ	0xFEF
  6992                           postinc0	equ	0xFEE
  6993                           postdec0	equ	0xFED
  6994                           preinc0	equ	0xFEC
  6995                           plusw0	equ	0xFEB
  6996                           fsr0h	equ	0xFEA
  6997                           fsr0l	equ	0xFE9
  6998                           wreg	equ	0xFE8
  6999                           indf1	equ	0xFE7
  7000                           postinc1	equ	0xFE6
  7001                           postdec1	equ	0xFE5
  7002                           preinc1	equ	0xFE4
  7003                           plusw1	equ	0xFE3
  7004                           fsr1h	equ	0xFE2
  7005                           fsr1l	equ	0xFE1
  7006                           bsr	equ	0xFE0
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           postdec2	equ	0xFDD
  7010                           preinc2	equ	0xFDC
  7011                           plusw2	equ	0xFDB
  7012                           fsr2h	equ	0xFDA
  7013                           fsr2l	equ	0xFD9
  7014                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     88     106
    BANK0           128      0      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_scan
    _speedup->_clear_cube
    _scan->_clear_cube
    _scan->_clear_plane
    _random_pattern->_clear_plane
    _random_pattern->_lighton
    _pulsing->_clear_cube
    _hitler->_clear_cube
    _hitler->_clear_plane
    _cubeidle->_clear_cube
    _cubeidle->_lighton
    _antirainfall->_clear_cube
    _antirainfall->_clear_plane
    _antirainfall->_lighton
    _srand->_time
    _rand->___lmul
    _move->___awmod
    _lighton->___wmul
    _set_plane->___awdiv
    ___awmod->_rand
    ___awdiv->___awmod
    _clear_plane->___wmul
    _clear_cube->___wmul
    ___wmul->___awdiv

Critical Paths under _H_ISR in COMRAM

    _H_ISR->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _H_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _H_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _H_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _H_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _H_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _H_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  108282
                                             86 COMRAM     2     2      0
                       _antirainfall
                         _clear_cube
                           _cubeidle
                             _hitler
                               _init
                            _pulsing
                     _random_pattern
                               _scan
                            _speedup
 ---------------------------------------------------------------------------------
 (1) _speedup                                             15    13      2   11393
                                             54 COMRAM    15    13      2
                            ___awmod
                             ___wmul
                         _clear_cube
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _scan                                                32    30      2   11905
                                             54 COMRAM    32    30      2
                             ___wmul
                         _clear_cube
                        _clear_plane
                         _draw_plane
                           _plane_on
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _random_pattern                                      18    16      2   22625
                                             54 COMRAM    18    16      2
                            ___awmod
                        _clear_plane
                            _lighton
                               _move
                               _rand
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (1) _pulsing                                             12    10      2    6916
                                             54 COMRAM    12    10      2
                             ___wmul
                         _clear_cube
                         _draw_plane
                           _plane_on
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hitler                                              11     9      2    8596
                                             54 COMRAM    11     9      2
                         _clear_cube
                        _clear_plane
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (1) _cubeidle                                             5     3      2   13240
                                             54 COMRAM     5     3      2
                         _clear_cube
                            _lighton
 ---------------------------------------------------------------------------------
 (1) _antirainfall                                        32    30      2   30728
                                             54 COMRAM    30    28      2
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clear_cube
                        _clear_plane
                         _draw_plane
                            _lighton
                               _move
                               _rand
                          _set_plane
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8     196
                                             10 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (2) _srand                                                4     2      2     174
                                             18 COMRAM     4     2      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             22 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _move                                                 4     0      4    4606
                                             34 COMRAM     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _lighton                                              6     2      4   10173
                                             48 COMRAM     6     2      4
                            ___awdiv
                            ___awmod
                             ___wmul
                         _draw_plane
                          _set_plane
 ---------------------------------------------------------------------------------
 (2) _set_plane                                            2     0      2    1564
                                             42 COMRAM     2     0      2
                            ___awdiv (ARG)
                           _plane_on
 ---------------------------------------------------------------------------------
 (3) _plane_on                                             4     2      2     858
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3588
                                             28 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                             34 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _clear_plane                                          6     6      0    2879
                                             48 COMRAM     6     6      0
                             ___wmul
                         _draw_plane
 ---------------------------------------------------------------------------------
 (2) _draw_plane                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_cube                                           6     6      0    2879
                                             48 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2743
                                             42 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _H_ISR                                                5     5      0     394
                                              6 COMRAM     4     4      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (6) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _antirainfall
     ___awdiv
       ___awmod (ARG)
         _rand (ARG)
           ___lmul
     ___awmod
     ___wmul
       ___awdiv (ARG)
       ___awmod (ARG)
     _clear_cube
       ___wmul
     _clear_plane
       ___wmul
       _draw_plane
     _draw_plane
     _lighton
       ___awdiv
       ___awmod
       ___wmul
       _draw_plane
       _set_plane
         ___awdiv (ARG)
         _plane_on (ARG)
     _move
       ___awmod
     _rand
     _set_plane
     _srand
       _time (ARG)
     _time
   _clear_cube
   _cubeidle
     _clear_cube
     _lighton
   _hitler
     _clear_cube
     _clear_plane
     _draw_plane
     _set_plane
   _init
   _pulsing
     ___wmul
     _clear_cube
     _draw_plane
     _plane_on
   _random_pattern
     ___awmod
     _clear_plane
     _lighton
     _move
     _rand
     _srand
     _time
   _scan
     ___wmul
     _clear_cube
     _clear_plane
     _draw_plane
     _plane_on
     _set_plane
   _speedup
     ___awmod
     ___wmul
     _clear_cube
     _draw_plane
     _set_plane

 _H_ISR (ROOT)
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      32       5       39.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     58      6A       1       84.1%
BITBIGSFRhllh       21      0       0      19        0.0%
BITBIGSFRhhl        1E      0       0      17        0.0%
BITBIGSFRhlhh        E      0       0      18        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRll          9      0       0      22        0.0%
BITBIGSFRhlll        6      0       0      20        0.0%
BITBIGSFRlhh         4      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9C      23        0.0%
DATA                 0      0      9C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 12 11:47:12 2023

                     l61 238C                       l71 21DA                       l64 1C3E  
                     l80 2200                       l81 2208                       l82 225A  
                     l75 21E0                       l92 214A                       l77 21E8  
                     l85 2456                       l78 21F0                       l79 21F8  
                     l97 1B10             ___awdiv@sign 0028      ___wmul@multiplicand 002D  
           speedup@j_808 0044             speedup@j_809 003A          random_pattern@r 0047  
        random_pattern@x 0045                      l135 19D6                      l161 17B6  
                    l321 0EF2                      l330 0FDC                      l139 15F4  
                    l308 0CF8                      l181 12AA                      l341 1E92  
                    l192 015A                      l370 1CB4                      l355 1532  
                    l276 08D0                      l615 1DD2                      l384 2424  
                    l395 2320                      l628 1F42                      l396 2330  
           ___awmod@sign 0022                      wreg 000FE8         random_pattern@id 0037  
                   l1060 243E                     l1063 22C6                     l2201 1B12  
                   l1321 2348                     l2203 2440                     l1067 23D8  
                   l1331 235A                     l1323 234A                     l3011 0E9E  
                   l2205 244A                     l2221 2300                     l2213 22C8  
                   l1341 2384                     l1333 235C                     l1325 234C  
                   l1317 2332                     l3101 1378                     l3021 0EDA  
                   l3013 0EA2                     l3005 0E1A                     l2207 2400  
                   l2303 214C                     l2231 1D2E                     l2223 1D10  
                   l2215 22D8                     l1343 2386                     l1335 237E  
                   l1327 234E                     l1319 2346                     l3103 1386  
                   l3031 0F2C                     l3023 0EE6                     l3007 0E6A  
                   l3015 0EBE   __end_of_random_pattern 17B8                     l2209 241C  
                   l2321 21B6                     l2241 1D62                     l2233 1D3C  
                   l2225 1D14                     l2401 1922                     l2217 22E6  
                   l1345 2388                     l1337 2380                     l1329 2358  
                   l3121 13F0                     l3041 0F88                     l3033 0F48  
                   l3025 0EEE                     l3017 0ECA                     l3009 0E84  
                   l2331 20B8                     l2323 21BA                     l2315 215C  
                   l2251 1D9C                     l2243 1D6A                     l2235 1D44  
                   l2227 1D22                     l2411 1982                     l2403 1932  
                   l2219 22F6                     l3051 1DFA                     l1347 238A  
                   l1339 2382                     l3131 143A                     l3123 13F4  
                   l3115 1396                     l3043 0FA4                     l3035 0F54  
                   l3027 0F10                     l3019 0ECE                     l2333 20BA  
                   l2325 21D6                     l2317 2196                     l2309 2154  
                   l2261 1DC2                     l2253 1DA4                     l2245 1D72  
                   l2237 1D48                     l2229 1D2A                     l2413 1996  
                   l2405 1946                     l2501 101A                     l3061 1E58  
                   l3053 1E12                     l3141 1494                     l3133 143E  
                   l3125 1410                     l3117 13D0                     l3109 138E  
                   l3037 0F6E                     l3029 0F28                     l3045 0FC4  
                   l3221 1C40                     l2351 210A                     l2343 20C8  
                   l2335 20BC                     l2327 20A2                     l2319 219A  
                   l2263 1DCA                     l2255 1DA6                     l2247 1D80  
                   l2239 1D50                     l2271 1EA6                     l2191 21DC  
                   l2415 19B2                     l2407 1962                     l2431 2426  
                   l2423 238E                     l2503 101A                     l3063 1E6C  
                   l3055 1E20                     l3047 1DD4                     l3151 14EC  
                   l3143 1498                     l3127 1428                     l3119 13D4  
                   l3071 12B4                     l3039 0F82                     l3231 1C88  
                   l3223 1C48                     l2353 210E                     l2337 20BE  
                   l2329 20B6                     l2257 1DAC                     l2249 1D86  
                   l2281 1EDA                     l2273 1EAE                     l2361 19F8  
                   l2417 19C2                     l2409 1972                     l2433 225C  
                   l2425 23A0                     l2521 10AC                     l2513 1036  
                   l2505 1026                     l3057 1E24                     l3049 1DEE  
                   l3065 1E7A                     l2601 00F6                     l3153 14F0  
                   l3145 14B4                     l3129 142C                     l3081 12EE  
                   l3073 12C4                     l3161 151A                     l2441 1538  
                   l3313 1CCE                     l3233 1C98                     l3225 1C58  
                   l2355 212A                     l2259 1DB2                     l2291 1F16  
                   l2283 1EE2                     l2275 1EB2                     l2267 1E94  
                   l3315 222C                     l2195 2216                     l2363 1A0C  
                   l2419 19CE                     l2371 17B8                     l2435 2298  
                   l2427 23C8                     l2523 10C8                     l2515 1068  
                   l2507 102E                     l3059 1E40                     l2611 0170  
                   l2603 010A                     l3155 14FA                     l3147 14D8  
                   l3139 1446                     l3091 132E                     l3075 12CE  
                   l3067 12AC                     l2451 158A                     l2443 1570  
                   l3235 1CA8                     l3227 1C68                     l2357 212E  
                   l2349 20D0                     l2293 1F1C                     l2285 1EEA  
                   l2277 1EC0                     l2269 1E98                     l2365 1A82  
                   l2381 1824                     l2373 17CA                     l2541 1146  
                   l2525 10E2                     l2517 108C                     l2701 0558  
                   l2621 01E4                     l2613 0182                     l2605 0120  
                   l3157 14FE                     l3149 14DC                     l3093 134A  
                   l3077 12D2                     l3069 12B0                     l2461 15FC  
                   l2453 15AA                     l2445 1578                     l3229 1C78  
                   l2287 1EF8                     l2295 1F22                     l2279 1EC8  
                   l2367 1A96                     l2359 19D8                     l2391 18AE  
                   l2383 184A                     l2375 17F2                     l2551 11AA  
                   l2543 1154                     l2535 110A                     l2527 10FE  
                   l2519 1090                     l2711 05E8                     l2703 057E  
                   l2623 0212                     l2615 01A8                     l2631 0276  
                   l2607 0134                     l3159 150A                     l3095 135C  
                   l3087 12F6                     l3079 12DE                     l2471 1686  
                   l2463 161C                     l2455 15B2                     l2447 1578  
                   l2439 1534                     l3239 1CB8                     l2297 1F32  
                   l2289 1F0E                     l2369 1B0C                     l2393 18BE  
                   l2385 185A                     l2377 1802                     l2561 11DA  
                   l2553 11C6                     l2545 1158                     l2537 1116  
                   l2529 1102                     l2721 0660                     l2713 05FC  
                   l2705 0590                     l2641 02EA                     l2633 028A  
                   l2625 0226                     l2617 01BA                     l2609 015E  
                   l3097 1360                     l3089 132A                     l2481 170A  
                   l2473 169A                     l2465 162E                     l2457 15CE  
                   l2449 1578                     l2801 0924                     l2299 1F3A  
                   l2395 18CE                     l2387 186A                     l2379 1812  
                   l2563 1260                     l2555 11D2                     l2547 1174  
                   l2539 112A                     l2571 1292                     l2731 06D4  
                   l2723 0672                     l2715 0612                     l2707 05A6  
                   l2651 036A                     l2643 02FE                     l2635 029C  
                   l2627 023C                     l2619 01D0                     l3099 136C  
                   l2491 1792                     l2483 1722                     l2475 16B2  
                   l2467 1644                     l2459 15E2                     l2803 0928  
                   l2397 18E2                     l2389 187E                     l2565 1264  
                   l2549 11A6                     l2733 0702                     l2725 0698  
                   l2741 0766                     l2717 0626                     l2709 05BA  
                   l2661 03EE                     l2645 032C                     l2637 02C2  
                   l2653 0390                     l2629 0250                     l2581 002E  
                   l2573 0012                     l2485 1742                     l2477 16D2  
                   l2469 1664                     l2901 0B5C                     l2821 0990  
                   l2805 0944                     l2399 1912                     l2567 1280  
                   l2751 07DA                     l2743 077A                     l2735 0716  
                   l2727 06AA                     l2719 064C                     l2671 0470  
                   l2663 0404                     l2655 03A4                     l2647 0340  
                   l2639 02D4                     l2591 0066                     l2583 003A  
                   l2575 0016                     l2479 16F6                     l2487 1762  
                   l2495 179E                     l2911 0B84                     l2903 0B60  
                   l2831 09C8                     l2823 09AC                     l2815 096C  
                   l2807 0948                     l2569 1284                     l2497 0FDE  
                   l2761 0830                     l2745 078C                     l2737 072C  
                   l2729 06C0                     l2681 04D4                     l2673 0484  
                   l2665 0418                     l2657 03B6                     l2649 0356  
                   l2593 008C                     l2585 003E                     l2577 001E  
                   l2489 177E                     l2921 0BCA                     l2913 0B88  
                   l2905 0B7C                     l2833 09CC                     l2817 0978  
                   l2809 0964                     l2499 0FE2                     l2771 087A  
                   l2755 07F2                     l2747 07B2                     l2739 0740  
                   l2667 0446                     l2659 03DC                     l2675 04AA  
                   l2595 009E                     l2763 0852                     l2587 0042  
                   l2579 0026                     l2931 0C02                     l2923 0BCE  
                   l2843 0A04                     l2835 09E0                     l2819 097C  
                   l2781 08B0                     l2773 0882                     l2765 085E  
                   l2757 0806                     l2749 07C4                     l2693 051A  
                   l2685 04EA                     l2677 04BE                     l2669 045A  
                   l2597 00B4                     l2589 0054                     l2941 0C4A  
                   l2933 0C1E                     l2925 0BEA                     l2845 0A10  
                   l2837 09FC                     l2829 09B4                     l2775 0886  
                   l2767 0862                     l2759 081C                     l2599 00C8  
                   l2783 08B8                     l2943 0C52                     l2935 0C26  
                   l2927 0BEE                     l2919 0B90                     l2871 0AA2  
                   l2863 0A44                     l2855 0A38                     l2847 0A14  
                   l2777 08A4                     l2769 0866                     l2689 0502  
                   l2697 0532                     l2953 0CC4                     l2929 0BFE  
                   l2873 0AB2                     l2865 0A7E                     l2857 0A3C  
                   l2849 0A30                     l2793 08E2                     l2961 0CE0  
                   l2785 08D2                     l2779 08A8                     l2699 0546  
                   l2955 0CC8                     l2947 0C72                     l2939 0C46  
                   l2891 0AE6                     l2883 0ADA                     l2875 0AB6  
                   l2867 0A82                     l2787 08DA                     l2971 0D16  
                   l2963 0CFA                     l2957 0CD8                     l2949 0CBC  
                   l2893 0B28                     l2885 0ADE                     l2877 0AD2  
                   l2869 0A9E                     l2981 0D4E                     l2973 0D20  
                   l2965 0CFE                     l2895 0B2C                     l2799 08EA  
                   l2991 0DBA                     l2983 0D62                     l2975 0D28  
                   l2967 0D06                     l2897 0B48                     l2993 0DD4  
                   l2977 0D30                     l2969 0D0E                     l2899 0B4C  
                   l2995 0DEE                     l2979 0D3C                     l2997 0DF2  
                   l2989 0D6A                     l2999 0E12                     u2000 1D9C  
                   u2001 1D98                     u2010 1DC2                     u2011 1DBE  
                   u2100 212A                     u2020 1EA6                     u2101 2126  
                   u2021 1EA2                     u2110 214A                     u2030 1EC0  
                   u2111 2146                     u2031 1EBC                     u2040 1EDA  
                   u2120 1A0C                     u2200 18E2                     u3000 0AD2  
                   u2041 1ED6                     u2121 1A08                     u2201 18DE  
                   u3001 0ACE                     u2050 1EF8                     u2130 1A96  
                   u2210 1912                     u3010 0B48                     u2051 1EF4  
                   u2131 1A92                     u2211 190E                     u3011 0B44  
                   u2060 1F0E                     u2220 1946                     u2140 17CA  
                   u2300 1682                     u3020 0B7C                     u3100 0E0E  
                   u2061 1F0A                     u2221 1942                     u2141 17C6  
                   u2301 167E                     u3021 0B78                     u3101 0E0A  
                   u2070 1F32                     u2230 1962                     u2150 17F2  
                   u2310 169A                     u3030 0BEA                     u3110 0EBE  
                   u2071 1F2E                     u2231 195E                     u2151 17EE  
                   u2311 1696                     u3031 0BE6                     u3111 0EBA  
                   u2080 21B6                     u2240 1996                     u2160 1824  
                   u2400 1174                     u3200 1E92                     u2320 16AE  
                   u3040 0C1E                     u3120 0F10                     u2081 21B2  
                   u2241 1992                     u2161 1820                     u2401 1170  
                   u3201 1E8E                     u2321 16AA                     u3041 0C1A  
                   u3121 0F0C                     u2090 21D6                     u2250 19B2  
                   u2170 184A                     u2410 1280                     u3210 134A  
                   u2330 16F2                     u3050 0C42                     u3130 0F28  
                   u2091 21D2                     u2251 19AE                     u2171 1846  
                   u2411 127C                     u3211 1346                     u2331 16EE  
                   u3051 0C3E                     u3131 0F24                     u2180 187E  
                   u2260 23A0                     u2420 12AA                     u2500 0182  
                   u3220 13F0                     u2340 170A                     u3060 0C6E  
                   u3140 0F48                     u2181 187A                     u2261 239C  
                   u2421 12A6                     u2501 017E                     u3221 13EC  
                   u2341 1706                     u3061 0C6A                     u3141 0F44  
                   u2190 18AE                     u2270 22B8                     u2510 01BA  
                   u2430 0054                     u3230 1410                     u2350 171E  
                   u3070 0CF8                     u3150 0F6E                     u2191 18AA  
                   u2511 01B6                     u2431 0050                     u3231 140C  
                   u2351 171A                     u3071 0CF4                     u3151 0F6A  
                   u2600 036A                     u2520 01E4                     u2440 0066  
                   u3240 14B4                     u2360 1762                     u2280 162E  
                   u3160 0F82                     u3080 0D4E                     u1705 1B28  
                   u2601 0366                     u2521 01E0                     u2441 0062  
                   u3241 14B0                     u2361 175E                     u2281 162A  
                   u3161 0F7E                     u3081 0D4A                     u1706 1B2A  
                   u2610 03A4                     u2530 0226                     u2450 009E  
                   u3250 1532                     u2370 17B6                     u2290 1640  
                   u3170 0FDC                     u3090 0D62                     u1715 1B34  
                   u2275 22AE                     u2611 03A0                     u2531 0222  
                   u2451 009A                     u3251 152E                     u2371 17B2  
                   u2291 163C                     u3171 0FD8                     u3091 0D5E  
                   u1716 1B36                     u3180 1E40                     u2700 04FE  
                   u2620 03B6                     u2540 0250                     u2460 00C8  
                   u1805 1BA0                     u1725 1B40                     u2381 1020  
                   u3181 1E3C                     u2701 04FA                     u2621 03B2  
                   u2541 024C                     u2461 00C4                     u1806 1BA2  
                   u1726 1B42                     u2390 10AC                     u3190 1E58  
                   u2710 0516                     u2630 03EE                     u2550 028A  
                   u2470 010A                     u1815 1BAC                     u1735 1B4C  
                   u2391 10A8                     u3191 1E54                     u2711 0512  
                   u2631 03EA                     u2551 0286                     u2471 0106  
                   u3407 0AA8                     u1816 1BAE                     u1736 1B4E  
                   u2800 0672                     u2720 052E                     u2640 0418  
                   u2560 029C                     u2480 0134                     u1905 1C18  
                   u1825 1BB8                     u1745 1B58                     u2801 066E  
                   u2721 052A                     u2641 0414                     u2561 0298  
                   u2481 0130                     u3417 0B52                     u1906 1C1A  
                   u1826 1BBA                     u1746 1B5A                     u2810 06AA  
                   u2730 0546                     u2650 045A                     u2570 02D4  
                   u2490 0170                     u1915 1C24                     u1835 1BC4  
                   u1755 1B64                     u2811 06A6                     u2731 0542  
                   u2651 0456                     u2571 02D0                     u2491 016C  
                   u3507 1510                     u3427 0BF4                     u1916 1C26  
                   u1836 1BC6                     u1756 1B66                     u1940 22E6  
                   u2900 0830                     u2820 06D4                     u2740 0558  
                   u2660 0484                     u2580 02FE                     u1925 1C30  
                   u1845 1BD0                     u1765 1B70                     u1941 22E2  
                   u3517 1E18                     u2901 082C                     u2821 06D0  
                   u2741 0554                     u2661 0480                     u2581 02FA  
                   u3437 0CCE                     u1926 1C32                     u1846 1BD2  
                   u1766 1B72                     u1950 2320                     u2910 087A  
                   u2830 0716                     u2750 0590                     u2670 04BE  
                   u2590 0340                     u1935 1C3C                     u1855 1BDC  
                   u1775 1B7C                     u1695 1B1C                     u1951 231C  
                   u3527 1E72                     u2911 0876                     u2831 0712  
                   u2751 058C                     u2671 04BA                     u2591 033C  
                   u3447 15E8                     u1936 1C3E                     u1856 1BDE  
                   u1776 1B7E                     u1696 1B1E                     u1960 1D22  
                   u2920 08A4                     u2840 0740                     u2760 05BA  
                   u2680 04D0                     u1865 1BE8                     u1785 1B88  
                   u1961 1D1E                     u3537 10B6                     u2921 08A0  
                   u2841 073C                     u2761 05B6                     u2681 04CC  
                   u3457 12BA                     u3377 0EE8                     u1866 1BEA  
                   u1786 1B8A                     u1970 1D3C                     u2930 08D0  
                   u2850 077A                     u2770 05FC                     u2690 04E6  
                   u1875 1BF4                     u1795 1B94                     u1971 1D38  
                   u3547 114C                     u2931 08CC                     u2851 0776  
                   u2771 05F8                     u2691 04E2                     u3467 12E4  
                   u3387 0982                     u1876 1BF6                     u1796 1B96  
                   u1980 1D62                     u2860 078C                     u2780 0626  
                   u2940 0944                     u1885 1C00                     u1981 1D5E  
                   u3557 128A                     u2861 0788                     u2781 0622  
                   u3477 137E                     u3397 09D2                     u2941 0940  
                   u1886 1C02                     u1990 1D80                     u2870 07C4  
                   u2790 0660                     u2950 0964                     u1895 1C0C  
                   u1991 1D7C                     u2871 07C0                     u2791 065C  
                   u3487 1432                     u2951 0960                     u1896 1C0E  
                   u2880 07EE                     u2960 09AC                     u2881 07EA  
                   u3497 14E2                     u2961 09A8                     u2890 0806  
                   u2970 09FC                     u2891 0802                     u2971 09F8  
                   u2980 0A30                     u2981 0A2C                     u2990 0A9E  
                   u2991 0A9A                     _flag 0063                     _main 1C40  
                   _init 2332                     _mode 0065                     _rand 225C  
                   _scan 08D2                     _seed 0067                     _move 17B8  
                   _time 238E           ??_antirainfall 0039                     fsr2h 000FDA  
                   fsr2l 000FD9                     btemp 006B                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___param_bank 000000  
                  ?_main 0001                    ?_init 0001                    ?_scan 0037  
                  ?_rand 0017          __end_of___awdiv 1DD4                    ?_move 0023  
        __end_of___awmod 1F44                    ?_time 000B          ___awdiv@divisor 0025  
                  i2l381 209E                    i2l628 1FF2          ___awdiv@counter 0027  
                  _H_ISR 0008                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 000F          __end_of_lighton 1B12                    _plane 0080  
          antirainfall@a 0041            antirainfall@i 004F                    _srand 2426  
        ?_random_pattern 0037                    scan@i 003D                    scan@j 003F  
                  move@r 0025                    move@x 0023                    time@t 000B  
        __end_of_speedup 0FDE                    ttemp5 006C                    ttemp6 006F  
                  ttemp7 0073          __end_of_pulsing 1534                    status 000FD8  
                  wtemp8 006C          __initialization 23DA             __end_of_main 1D10  
           __end_of_init 238E             __end_of_rand 22C8             __end_of_scan 0CFA  
           __end_of_move 19D8             __end_of_time 23DA                   ??_main 0057  
                 ??_init 000B                   ??_scan 0039                   ??_rand 0019  
                 ??_move 0027                   ??_time 0013            __activetblptr 000002  
                 ?_H_ISR 0001              hitler@itcnt 003C                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0023                   ?_srand 0013  
                 i2l3171 1F62                   i2l3163 1F44                   i2l3251 201A  
                 i2l3181 1F9A                   i2l3173 1F70                   i2l3165 1F48  
                 i2l3261 2074                   i2l3253 2036                   i2l3245 1FF6  
                 i2l3183 1FA8                   i2l3191 1FD2                   i2l3175 1F78  
                 i2l3167 1F56                   i2l3263 2090                   i2l3255 203E  
                 i2l3247 2008                   i2l3193 1FE2                   i2l3185 1FBE  
                 i2l3177 1F8A                   i2l3169 1F5E                   i2l3265 2098  
                 i2l3257 2042                   i2l3249 2008                   i2l3195 1FEA  
                 i2l3187 1FC6                   i2l3179 1F92                   i2l3267 209A  
                 i2l3259 2062                   i2l3189 1FCC                   i2l3269 209C  
       __end_of_cubeidle 1E94                   ___lmul 22C8                   ___wmul 2400  
              ??___awdiv 0027                ??___awmod 0021                   _hitler 0012  
            lighton@prev 0033             pulsing@i_816 003B             pulsing@i_818 0041  
                 clear_0 23E0                   clear_1 23EC         ___awdiv@quotient 0029  
        ___awmod@divisor 001F                   isa$std 000001           antirainfall@id 0037  
        ___awmod@counter 0021         __end_of_plane_on 225C     __end_of_antirainfall 12AC  
                 scan@id 0037                ??_lighton 0035        __end_ofi2___awmod 1FF4  
                 tblptru 000FF8                   srand@s 0013                ??_speedup 0039  
         i2___awmod@sign 0006                ??_pulsing 0039               __accesstop 0080  
__end_of__initialization 23F2      random_pattern@prevr 0041      random_pattern@prevx 0043  
          ___rparam_used 000001            __end_of_H_ISR 20A2           __pcstackCOMRAM 0001  
          __end_of_srand 2440                  ??_H_ISR 0007                  ??_srand 0015  
             __pbssBANK0 0080               _clear_cube 20A2                  ?___lmul 000B  
                ?___wmul 002B                  ?_hitler 0037           ___lmul@product 0013  
       ??_random_pattern 0039                ?_cubeidle 0037               _draw_plane 1B12  
              ?_plane_on 000B                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 1D10                  ___awmod 1E94                  __pcinit 23DA  
                __ramtop 0600                  __ptext0 1C40                  __ptext1 0CFA  
                __ptext2 08D2                  __ptext3 1534                  __ptext4 12AC  
                __ptext5 2332                  __ptext6 0012                  __ptext7 1DD4  
                __ptext8 0FDE                  __ptext9 238E                  _lighton 19D8  
       ___awmod@dividend 001D                  _speedup 0CFA          antirainfall@idx 0053  
        antirainfall@tmp 004B                  _pulsing 12AC               ??_cubeidle 0039  
         __pintcode_body 1FF4     end_of_initialization 23F2                  hitler@x 003E  
          __Lmediumconst 0000                  int_func 1FF4        __end_of_set_plane 2458  
           _antirainfall 0FDE               ??_plane_on 000D            ??_clear_plane 0031  
            ?_clear_cube 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _TRISAbits 000F92                _TRISCbits 000F94  
              _TRISEbits 000F96                i2___awmod 1F44              ?_draw_plane 0001  
            speedup@dcnt 003C               cubeidle@id 0037           __end_of___lmul 2332  
         __end_of___wmul 2426      __end_of_clear_plane 21DC           __end_of_hitler 08D2  
    start_initialization 23DA               ?i2___awmod 0001                 ??___lmul 0013  
               ??___wmul 002F                 ??_hitler 0039              __pbssCOMRAM 0059  
            _clear_plane 214C                __pintcode 0008                 ?___awdiv 0023  
               ?___awmod 001D               H_ISR@value 0009                 ?_lighton 0031  
               ?_speedup 0037                 ?_pulsing 0037              ??i2___awmod 0005  
         ___wmul@product 002F                 _LATAbits 000F89                 _LATBbits 000F8A  
               _LATCbits 000F8B               set_plane@a 002B                 _LATDbits 000F8C  
               _LATEbits 000F8D        antirainfall@F3104 0059                 _PIE1bits 000F9D  
           ??_clear_cube 0031                 i2u330_40 1FBE                 i2u330_41 1FBA  
               i2u331_40 1FE2                 i2u331_41 1FDE                 i2u333_40 201A  
               i2u333_41 2016                 i2u326_40 1F56                 i2u334_40 2036  
               i2u326_41 1F52                 i2u334_41 2032                 i2u327_40 1F70  
               i2u335_40 2074                 i2u327_41 1F6C                 i2u335_41 2070  
               i2u328_40 1F8A                 i2u336_40 2090                 i2u328_41 1F86  
               i2u336_41 208C                 i2u329_40 1FA8                 i2u329_41 1FA4  
               _PIR1bits 000F9E                _set_plane 2440        antirainfall@i_780 0051  
      antirainfall@i_779 004D               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 002B               speedup@del 003E  
              cubeidle@i 003A       __end_of_clear_cube 214C             ??_draw_plane 000B  
      ___lmul@multiplier 000B       i2___awmod@dividend 0001                hitler@cnt 0040  
              scan@i_800 0053                scan@i_791 0041                scan@i_792 0043  
              scan@j_801 0055                scan@i_793 0045                scan@i_794 0047  
               __Hrparam 0000                scan@i_796 004B                scan@i_798 004F  
              scan@j_795 0049                scan@j_797 004D                scan@j_799 0051  
               __Lrparam 0000               ?_set_plane 002B             clear_plane@i 0033  
           clear_plane@j 0035       __end_of_draw_plane 1C40                plane_on@a 000B  
               __ptext10 2426                 __ptext11 225C                 __ptext20 1B12  
               __ptext12 22C8                 __ptext21 20A2                 __ptext13 17B8  
               __ptext22 2400                 __ptext14 19D8                 __ptext15 2440  
               __ptext24 1F44                 __ptext16 21DC                 __ptext17 1E94  
               __ptext18 1D10                 __ptext19 214C                 _cubeidle 1DD4  
               _plane_on 21DC                 isa$xinst 000000                 int$flags 006B  
              speedup@id 0037        i2___awmod@divisor 0003        i2___awmod@counter 0005  
             _INTCONbits 000FF2                 hitler@id 0037                 hitler@it 003A  
            clear_cube@i 0033              clear_cube@j 0035                 lighton@x 0031  
              pulsing@id 0037                 intlevel2 0000               _OSCCONbits 000FD3  
           ?_clear_plane 0001              ??_set_plane 002D                 speedup@i 0040  
               speedup@j 0042                 pulsing@i 003F                 pulsing@j 003D  
         _random_pattern 1534            ?_antirainfall 0037  
